{"version":3,"sources":["components/nav/StockSearchBar.tsx","components/nav/MainMenu.tsx","components/common/flex.tsx","components/common/LoadingFullPage.tsx","hooks.ts","services/demo.ts","components/common/CenteredError.tsx","contexts/DemoContext.tsx","contexts/AuthContext.tsx","components/nav/UserMenu.tsx","components/nav/Nav.tsx","components/app/PrivateRoute.tsx","components/common/cardContent.tsx","components/log-in/LogIn.tsx","components/all-vehicles/StatusFilter.tsx","components/all-vehicles/VehicleOrder.tsx","components/all-vehicles/AddVehicleButton.tsx","components/common/SelectDialog.tsx","components/common/CustomSelect.tsx","components/common/SelectListItem.tsx","components/common/vehicles/YearSelect.tsx","components/common/AddListItem.tsx","types/ServiceResults.ts","services/vehicles.ts","components/common/vehicles/AddMake.tsx","components/common/vehicles/MakeSelect.tsx","components/common/vehicles/AddModel.tsx","components/common/vehicles/ModelSelect.tsx","components/common/vehicles/AddTrim.tsx","components/common/vehicles/TrimSelect.tsx","components/all-vehicles/vehicleListFilters/VehicleDetailFilters.tsx","components/common/DateRangeSelect.tsx","components/common/vehicles/DateAddedSelect.tsx","components/common/vehicles/DateSoldSelect.tsx","components/all-vehicles/vehicleListFilters/DateRangeFilters.tsx","components/all-vehicles/vehicleListFilters/ShowForSaleFilter.tsx","components/all-vehicles/vehicleListFilters/VehicleListFilters.tsx","components/common/LoadingList.tsx","components/common/vehicles/VehicleListItemButton.tsx","components/common/vehicles/VehicleInfo.tsx","components/common/vehicles/VehicleChipGroup.tsx","components/common/vehicles/VehicleChip.tsx","components/all-vehicles/vehicleSummary/ActiveVehicle.tsx","components/common/FormatTime.tsx","components/common/vehicles/SoldVehicleChip.tsx","components/all-vehicles/vehicleSummary/SoldVehicle.tsx","components/common/vehicles/VehicleListItem.tsx","components/all-vehicles/vehicleSummary/DeleteVehicleDialog.tsx","components/all-vehicles/vehicleSummary/TrashedVehicle.tsx","components/all-vehicles/vehicleSummary/VehicleSummary.tsx","components/all-vehicles/ListNavigation.tsx","components/all-vehicles/VehicleList.tsx","components/all-vehicles/ViewFiltersButton.tsx","components/all-vehicles/AllVehicles.tsx","components/common/vehicles/NextStockButton.tsx","components/common/vehicles/StockField.tsx","components/add-vehicle/VehicleInfoInputs.tsx","services/stages.ts","components/common/stages/AddStage.tsx","components/common/stages/StageSelect.tsx","components/common/ShowMoreListItem.tsx","components/common/stages/AddPersonPlace.tsx","components/common/stages/PersonPlaceSelect.tsx","components/common/stages/TaskListInput.tsx","components/add-vehicle/StageAssignInputs.tsx","components/add-vehicle/NotesInput.tsx","components/add-vehicle/AddVehicleButton.tsx","components/add-vehicle/AddVehicleSuccessDialog.tsx","components/add-vehicle/AddVehicleFailureDialog.tsx","components/add-vehicle/AddVehicleInputs.tsx","components/add-vehicle/AddVehicle.tsx","components/vehicle-details/GetVehicleLoading.tsx","components/vehicle-details/ActionMenu.tsx","components/common/DarkTab.tsx","components/vehicle-details/vehicleTabs/stageTab/AssignStageButton.tsx","components/vehicle-details/vehicleTabs/stageTab/AssignStage.tsx","components/vehicle-details/vehicleTabs/stageTab/SellVehicleButtons.tsx","components/vehicle-details/vehicleTabs/stageTab/CompleteStageButton.tsx","components/vehicle-details/vehicleTabs/TabContent.tsx","components/vehicle-details/vehicleTabs/stageTab/CurrentStage.tsx","components/vehicle-details/vehicleTabs/stageTab/DurationStats.tsx","components/vehicle-details/vehicleTabs/stageTab/StageTab.tsx","components/vehicle-details/vehicleTabs/infoTab/EditInfoButtons.tsx","components/vehicle-details/vehicleTabs/infoTab/EditInfo.tsx","components/common/ReadonlyTextField.tsx","components/vehicle-details/vehicleTabs/infoTab/ReadonlyInfo.tsx","components/vehicle-details/vehicleTabs/infoTab/InfoTab.tsx","components/vehicle-details/vehicleTabs/notesTab/EditNotesButtons.tsx","components/vehicle-details/vehicleTabs/notesTab/EditNotes.tsx","components/vehicle-details/vehicleTabs/notesTab/ReadonlyNotes.tsx","components/vehicle-details/vehicleTabs/notesTab/NotesTab.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/HistoryTitleMenu.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/StageDetailsDialog.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/HistoryTable.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/StageHistoryTab.tsx","components/vehicle-details/vehicleTabs/VehicleTabs.tsx","components/vehicle-details/DetailsDoneButton.tsx","components/vehicle-details/VehicleFailed.tsx","components/vehicle-details/TrashedMessage.tsx","components/vehicle-details/UpdateVehicleLoading.tsx","components/vehicle-details/VehicleDetails.tsx","components/common/AccordionPaper.tsx","components/common/vehicles/NavigateAccordianVehicleList.tsx","components/stages/StageVehicleList.tsx","components/people-places/PersonPlaceVehicleList.tsx","components/common/vehicles/AccordianVehicleList.tsx","components/people-places/PeoplePlaces.tsx","components/stages/ReorderButtons.tsx","components/stages/ReorderStages.tsx","components/stages/Stages.tsx","utilityFunctions/formatTimeText.ts","components/common/DonutChart.tsx","components/analytics/analyticsTabs/overview/OverviewDetailsTable.tsx","components/analytics/analyticsTabs/DetailsButton.tsx","components/analytics/analyticsTabs/overview/OverviewStats.tsx","components/analytics/analyticsTabs/FullNameDialog.tsx","components/analytics/analyticsTabs/StatisticDetails.tsx","services/statistics.ts","components/analytics/analyticsTabs/StagesStats.tsx","components/common/VerticalBarChart.tsx","components/analytics/analyticsTabs/PeoplePlacesStats.tsx","components/analytics/analyticsTabs/AnalyticsTabs.tsx","components/analytics/Analytics.tsx","components/demo-actions/ActionList.tsx","components/demo-actions/DemoDialog.tsx","components/demo-actions/DemoContinueButton.tsx","components/demo-actions/GenerateDemoVehicles.tsx","components/demo-actions/LoadingDemoActions.tsx","components/demo-actions/ActionCheckBoxes.tsx","components/demo-actions/DemoActions.tsx","components/demo-settings/DemoSettings.tsx","components/app/App.tsx","theme.ts","contexts/GlobalContext.tsx","index.tsx"],"names":["StyledInputAdornment","styled","InputAdornment","color","theme","titleColor","lightBlue","opacity","useStyles","makeStyles","search","paddingLeft","spacing","display","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","inputRoot","StockSearchBar","props","setOpenMenu","classes","history","useHistory","location","useLocation","stockFormatTest","useState","searchStk","setSearchStk","stockError","setStockError","TextField","className","size","placeholder","error","helperText","inputProps","InputProps","startAdornment","root","value","onChange","e","target","onKeyDown","previous","pathname","key","test","push","title","flexGrow","fontFamily","darkBlue","menuItems","width","mainMenu","link","textDecoration","menuButton","marginRight","breakpoints","up","MainMenu","window","openMenu","container","undefined","document","body","selection","setSelection","useEffect","match","menuItemsSmall","role","ListItem","sx","marginTop","secondaryAction","IconButton","edge","onClick","Divider","to","button","ListItemIcon","ListItemText","menuItemsLarge","selected","Hidden","lgUp","implementation","Drawer","anchor","open","onClose","event","type","lgDown","variant","FlexCenter","Box","p","justifyContent","alignItems","FlexSpaceBtwn","FlexSpaceEvenly","FlexStart","FlexEnd","FlexSpaceAround","flexCenter","top","left","height","zIndex","LoadingFullPage","CircularProgress","useCheckMounted","mounted","useRef","current","useQuery","URLSearchParams","useVehiclePage","useParams","demo","dbSelection","a","options","method","headers","JSON","stringify","fetch","response","json","getDefaults","clearDatabase","addVehicleDescriptors","addStages","generateVehicles","vehicleAmount","months","CenteredError","errorMessage","retryAction","flexDirection","Button","DemoContext","createContext","useDemoContext","useContext","DemoProvider","useCookies","cookies","setCookie","loading","setLoading","loadingTime","setLoadingTime","dbReady","setDbReady","db","setDb","setError","saveDb","useCallback","path","Promise","resolve","setTimeout","demoLoadingTime","parseInt","demoDb","selectDatabase","selectDatabaseService","then","console","delay","saveLoadingTime","loadingTimeNum","Provider","children","AuthContext","useAuthContext","AuthProvider","removeCookie","user","currentUser","setCurrentUser","name","defaultStageAssignment","stage","id","personPlace","userPreferences","setUserPreferences","getUserPreferences","result","status","data","logIn","logOut","UserMenu","anchorUserEl","setAnchorUserEl","openUserMenu","Boolean","currentTarget","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","disabled","margin","appBar","Nav","CssBaseline","AppBar","Toolbar","Typography","component","PrivateRoute","Component","renderComponent","exact","LargeCard","Card","paddingBottom","SmallCard","ExtraSmallCard","ContentHeader","padding","textAlign","ContentTitle","IconContentTitle","style","gap","icon","LargeContent","CardContent","SmallContent","ContentPaper","Paper","outerFlex","x","y","card","nameField","LogIn","setName","label","autoComplete","length","trash","secondary","main","sold","success","active","primary","StatusFilter","filterDisplay","statusParam","sortParam","perPageParam","filterAnchor","setFilterAnchor","handleFilterClose","newStatus","startIcon","VehicleOrder","sort","setSort","query","toString","newSort","addButton","right","AddVehicleButton","Fab","dialog","dialogContent","maxWidth","maxHeight","SelectDialog","setOpen","flex","Dialog","DialogContent","CustomSelect","TextFieldProps","ButtonProps","endAdornment","readOnly","cursor","listItem","emphasized","fontStyle","SelectListItem","textVal","selectCondition","emphasize","YearSelect","year","setYear","currentYear","Date","getFullYear","years","i","unshift","handleYearSelect","List","map","yeartmp","AddListItem","Result","this","SuccessResult","GetSuccess","vehicles","getVehiclesPaged","perPage","page","compare","findVehicle","field","getNextStock","checkStock","stock","exists","getMakes","addMake","make","getModels","makeId","addModel","model","getTrims","modelId","addTrim","trim","addVehicle","addVehicleParam","initialStageParam","dateAdded","now","updateVehicle","vehicleId","updateDoc","sellVehicle","stageAssignmentId","dateSold","deleteVehicle","addButtons","marginLeft","AddMake","makeSelectParent","ms","makeSelect","addMakeStatus","setAddMakeStatus","addMakeInput","setAddMakeInput","openRef","handleAddMake","doc","setMake","setAddMake","setMakes","Collapse","in","timeout","unmountOnExit","autoFocus","fullWidth","toUpperCase","MakeSelect","parent","allowAddMake","pMounted","handleMakeSelect","maketmp","makes","getMakesStatus","setGetMakesStatus","getMakesService","AddModel","modelSelectParent","modelSelect","addModelStatus","setAddModelStatus","addModelInput","setAddModelInput","handleAddModel","setModel","setAddModel","setModels","allowAddModel","handleModelSelect","modeltmp","models","getModelsStatus","setGetModelsStatus","getModelsService","AddTrim","trimSelectParent","ts","trimSelect","addTrimStatus","setAddTrimStatus","addTrimInput","setAddTrimInput","handleAddTrim","patch","setTrim","setAddTrim","setTrims","TrimSelect","allowAddTrim","handleTrimSelect","trimtmp","trims","getTrimsStatus","setGetTrimsStatus","getTrimsService","select","VehicleDetailFilters","vehicleDetailFilterState","yearFilterTmp","setYearFilterTmp","makeFilterTmp","setMakeFilterTmp","modelFilterTmp","setModelFilterTmp","trimFilterTmp","setTrimFilterTmp","flexWrap","dialogTitle","datePicker","DateRangeSelect","buttonLabel","after","setAfter","before","setBefore","openDialog","setOpenDialog","afterTmp","setAfterTmp","beforeTmp","setBeforeTmp","DialogTitle","LocalizationProvider","dateAdapter","AdapterDateFns","FormControl","DatePicker","clearable","newValue","renderInput","params","minDate","DialogActions","getTime","DateAddedSelect","afterDate","toLocaleDateString","beforeDate","DateRangeFilters","dateRangeFilterState","addedAfterFilterTmp","setAddedAfterFilterTmp","addedBeforeFilterTmp","setAddedBeforeFilterTmp","soldAfterFilterTmp","setSoldAfterFilterTmp","soldBeforeFilterTmp","setSoldBeforeFilterTmp","ShowForSaleFilter","showForSaleTmp","setShowForSaleTmp","FormControlLabel","control","Checkbox","checked","fontSize","filterActions","VehicleListFilters","setViewFilters","setFilterCount","yearFilter","setYearFilter","makeFilter","setMakeFilter","modelFilter","setModelFilter","trimFilter","setTrimFilter","addedAfterFilter","setAddedAfterFilter","addedBeforeFilter","setAddedBeforeFilter","soldAfterFilter","setSoldAfterFilter","soldBeforeFilter","setSoldBeforeFilter","showForSale","setShowForSale","yearQuery","get","makeQuery","modelQuery","trimQuery","addedAfterQuery","addedBeforeQuery","soldAfterQuery","soldBeforeQuery","showForSaleQuery","makeTmp","split","modelTmp","parseFloat","showForSaleQueryTmp","trimTmp","disableApplyFilters","forEach","filter","calculate","queries","queryString","join","skeleton","LoadingList","list","skeletonCount","Skeleton","VehicleListItemButton","ListItemButton","marginBottom","textContainer","stockLi","vehicleTextLi","whiteSpace","overflow","textOverflow","vehicleText","VehicleInfo","vehicle","VehicleChipGroup","float","VehicleChip","Chip","ActiveVehicle","currentStage","defaultStage","defaultPersonPlace","timeDifferenceLabel","FormatTime","milliseconds","Math","round","SoldVehicleChip","contrastText","SoldVehicle","totalSellTime","VehicleListItem","DeleteVehicleDialog","buttons","getVehicles","deleteVehicleStatus","setDeleteVehicleStatus","deleteVehicleService","ButtonGroup","disableEscapeKeyDown","trashButtons","TrashedVehicle","updateVehicleStatus","setUpdateVehicleStatus","activateVehicle","openDeleteDialog","setOpenDeleteDialog","toggleDeleteDialog","VehicleSummary","pageParam","compareParam","vehicleClick","ListNavigation","vehiclePage","docStartNumber","docEndNumber","totalDocs","dateAddedValues","maxDateAdded","max","minDateAdded","min","align","toLocaleString","VehicleList","vehicleListState","getVehiclesStatus","reload","StyledBadge","withStyles","createStyles","badge","border","background","paper","Badge","ViewFiltersButton","viewFilters","filterCount","badgeContent","listControls","AllVehicles","statusFilter","setStatusFilter","setVehiclePage","setGetVehiclesStatus","setFilter","nextStockButton","NextStockButton","editStockState","setStock","addEditVehicleStatus","nextStock","setNextStock","getNextStockStatus","setGetNextStockStatus","getNextStockService","StockField","stockOkay","setStockOkay","onBlur","VehicleInfoInputs","addVehicleState","addVehicleStatus","form","inputField","stages","getStageVehicleCounts","getPersonPlaceVehicleCounts","getStages","addStage","getPeoplePlaces","stageId","getAllPeoplePlaces","addPersonPlace","assignStage","assignStageParam","previousStage","completeStageAssignment","dateCompleted","getStageHistory","updateStageOrder","newStageOrder","updates","AddStage","stageSelectParent","ss","stageSelect","addStageStatus","setAddStageStatus","addStageInput","setAddStageInput","handleAddStage","setStage","setAddStage","setStages","StageSelect","allowAddStage","handleStageSelect","stagetmp","getStagesStatus","setGetStagesStatus","getStagesService","ShowMoreListItem","AddPersonPlace","personPlaceSelectParent","pps","personPlaceSelect","addPersonPlaceStatus","setAddPersonPlaceStatus","addPersonPlaceInput","setAddPersonPlaceInput","handleAddPersonPlace","setPersonPlace","setAddPersonPlace","setAllPeoplePlaces","allPeoplePlaces","allowAddPersonPlace","handlePersonPlaceSelect","personPlacetmp","peoplePlaces","setPeoplePlaces","getPeoplePlacesStatus","setGetPeoplePlacesStatus","getPeoplePlacesService","getAllPeoplePlacesStatus","setGetAllPeoplePlacesStatus","getAllPeoplePlacesService","showMorePeoplePlaces","setShowMorePeoplePlaces","find","personPlacetmp2","taskList","outline","wordWrap","TaskListInput","taskListComponent","taskAddButton","setTaskList","task","setTask","index","taskListTmp","splice","removeTask","random","StageAssignInputs","showStageInputs","setShowStageInputs","NotesInput","notes","setNotes","showNotesInput","setShowNotesInput","multiline","maxRows","addVehicleClick","AddVehicleSuccessDialog","setAddVehicleStatus","addedVehicle","AddVehicleFailureDialog","AddVehicleInputs","setAddedVehicle","tasks","openSuccessDialog","setOpenSuccessDialog","openFailureDialog","setOpenFailureDialog","FormHelperText","AddVehicle","GetVehicleLoading","ActionMenu","vehicleDetailState","setVehicle","anchorMenu","setAnchorMenu","trashVehicle","sellVehicleClick","DarkTab","Tab","AssignStageButton","assignStageState","dateOnLot","assignStageStatus","setAssignStageStatus","assignStageClick","dateAssigned","assignButton","disableElevation","disabledAssignButton","AssignStage","sellButton","dark","reassignButton","SellVehicleButtons","sellVehicleStatus","setSellVehicleStatus","completeStageStatus","setCompleteStageStatus","reassignClick","m","CompleteStageButton","completeStageClick","TabContent","alignContent","minHeight","content","flexDivider","CurrentStage","dateSoldDisplay","flexItem","dense","paddingRight","disablePadding","overflowWrap","table","chip","minWidth","DurationStats","reconditionTime","forSaleTime","reconditionTimeLabel","stageTimeLabel","completeTime","onLotTimeLabel","totalSellTimeLabel","TableContainer","Table","TableBody","TableRow","TableCell","scope","colSpan","TabPanel","other","hidden","a11yProps","StageTabs","tabValue","setTabValue","Tabs","centered","indicatorColor","textColor","EditInfoButtons","updateButton","editVehicleState","setEdit","vehicleDetailsMounted","editStock","editYear","editMake","editModel","editTrim","editDateAdded","editDateSold","editVehicleStatus","setEditVehicleStatus","updateVehicleDoc","updateVehicleService","updateVehicleClick","enabledUpdateButton","disabledUpdateButton","EditInfo","inputFieldStyle","setEditStock","setEditYear","setEditMake","setEditModel","setEditTrim","setEditDateAdded","setEditDateSold","date","maxDate","ReadonlyTextField","WebkitTextFillColor","ReadonlyInfoTab","month","day","editButtonDiv","editButton","InfoTab","setDisableDoneButton","edit","EditNotesButtons","editNotesState","editNotes","editNotesStatus","setEditNotesStatus","updateNotes","EditNotes","setEditNotes","NotesTab","HistoryTitleMenu","order","setOrder","orderAnchor","setOrderAnchor","handleOrderClose","closeButton","AddVehicleDialog","stageAssignment","timeElapsed","handleClose","formatDate","hour","minute","tableContainer","stageButton","HistoryTable","sortedStageHistory","formatDateAssigned","difference","openStageDetailsDialog","setOpenStageDetailsDialog","dialogStageAssignment","setDialogStageAssignment","TableHead","StageHistoryTab","stageHistory","setStageHistory","getStageHistoryStatus","setGetStageHistoryStatus","getStageHistoryService","b","aDate","bDate","VehicleTabs","tab","href","replace","buttonContainer","DetailsDoneButton","disableDoneButton","doneButtonClick","exit","includes","VehicleFailed","errorMessagetmp","TrashedMessage","vehicleTitle","VehicleDetails","searchCriteria","searchValue","getVehicleStatus","setGetVehicleStatus","getVehicleError","setGetVehicleError","findVehicleService","AccordionPaper","Accordion","NavigateAccordianVehicleList","accordianDetails","paddingTop","vehicleList","StageVehicleList","StageVehicle","AccordionDetails","useVehicleStyles","vehicleDivider","PresonPlaceVehicleList","personPlaceId","PersonPlaceVehicle","AccordianList","accordianTitles","determineTitleColor","count","AccordionSummary","expandIcon","PeoplePlaces","getPersonPlaceVehicleCountsService","updateButtons","ReorderButtons","setReorderStages","originalStageOrder","editStageOrder","setEditStageOrder","setOrderStagesStatus","updateStageOrderClick","original","compareOrders","ReorderStages","setOriginalStageOrder","orderStagesStatus","defaultReturn","onDragEnd","source","reorderedStage","destination","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Stages","getStageVehicleCountsService","reorderStages","formatTimeText","donutChart","DonutChart","total","totalLabel","d3Container","useLayoutEffect","d3","domain","d","range","pie","padAngle","arcs","legendItems","endAngle","startAngle","legendHeight","legendItemRectSides","donutDiameter","arc","innerRadius","donutRadius","outerRadius","fill","generateId","remove","svg","append","attr","feMerge","viewBoxY","selectAll","chartSvg","text","centroid","call","insert","querySelector","getBoundingClientRect","totalWidth","labelBoxPaddingSides","totalHeight","labelBoxPaddingTopBottom","totalGroup","legend","donutContainerHeight","legendXStart","OverviewDetailsTable","turnStatistics","average","median","mode","getForSale","getForSalePercent","getSold","getSoldPercent","totalPercent","DetailsButton","showDetails","setShowDetails","OverviewStatistics","getTurnStatsStatus","chartData","FullNameDialog","selectedValue","accordionDetails","shortData","longData","personPlaceLabel","subLabel","StatisticDetails","statistics","openFullNameDialog","setOpenFullNameDialog","setSelectedValue","modePercent","portions","getVehicleTurnStats","getStagesStatistics","getPeoplePlacesStatistics","StagesStatistics","forSaleAvg","getStatsStatus","setGetStatsStatus","setChartData","setStatistics","getStagesStatisticsService","avgOverview","details","chart","VerticalBarChart","sortedData","xScale","avgPercentile","barMargin","PeoplePlacesStatistics","getPeoplePlaceStatistics","getPeoplePlacesStatisticsService","AnalyticsTabs","Statistics","vehicleTurnStats","setVehicleTurnStats","setGetTurnStatsStatus","getVehicleTurnStatsService","ActionList","demoState","clearDatabaseLi","addVehicleDescriptorsLi","addStagesLi","generateVehiclesLi","DemoDialog","setClearDatabaseStatus","setAddVehicleDescriptorsStatus","setAddStagesStatus","setGenerateVehiclesStatus","vehiclesAmount","clearDatabaseClick","clearDatabaseService","addVehicleDescriptorsClick","addVehicleDescriptorsService","addStagesClick","addStagesService","generateVehiclesClick","generateVehiclesService","continueClick","all","DemoContinueButton","vehiclesAmountError","monthsError","GenerateDemoVehicles","vehiclesAmountInput","setVehiclesAmountInput","setVehiclesAmountError","setVehiclesAmount","setMonths","setMonthsError","vehiclesAmountInputTmp","vehiclesAmountTmp","monthsTmp","LoadingFlexSpaceAround","LoadingDemoActions","clearDatabaseStatus","addVehicleDescriptorsStatus","addStagesStatus","generateVehiclesStatus","formControl","ActionCheckBoxes","setClearDatabase","setAddVehicleDescriptors","setAddStages","setGenerateVehicles","statuses","check","FormGroup","DemoActions","NumberInput","shouldForwardProp","prop","slot","overridesResolver","styles","outlined","ButtonFlex","DemoSettings","loadingTimeInput","setLoadingTimeInput","setLoadingTimeNum","inputError","setInputError","dbInput","setDbInput","loadingTimeString","loadingTimeStringTmp","Select","app","App","Analytics","createTheme","GlobalContext","CookiesProvider","StyledEngineProvider","injectFirst","ThemeProvider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.94cd10c7.chunk.js","sourcesContent":["// react\nimport { useState } from 'react';\n// react-router-dom\nimport { useHistory, useLocation } from 'react-router-dom';\n// material-ui\nimport SearchIcon from '@mui/icons-material/Search';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { Theme, alpha } from '@mui/material/styles';\nimport { styled } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Set } from '../../types/misc';\n\nconst StyledInputAdornment = styled(InputAdornment)(({ theme }) => ({\n  color: theme.titleColor.lightBlue,\n  opacity: '50%',\n\n}));\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  search: {\n    paddingLeft: theme.spacing(.5),\n    display: 'flex',\n    position: 'relative',\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\n    '&:hover': {\n      backgroundColor: alpha(theme.palette.common.white, 0.25),\n    },\n  },\n  inputRoot: {\n    color: 'inherit',\n  },\n}));\n\ninterface StockSearchBarProps {\n  setOpenMenu: Set<boolean>;\n}\nexport default function StockSearchBar(props: StockSearchBarProps): React.ReactElement {\n  const { setOpenMenu } = props;\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const stockFormatTest = /^[0-9]{5}$/;\n\n  // STOCK SEARCH\n  const [searchStk, setSearchStk] = useState<string>('');\n  const [stockError, setStockError] = useState<string>('');\n\n  const handleChangeSearch = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setSearchStk(e.target.value);\n  };\n\n  const handleSearchKeyPress = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    const previous = location.pathname;\n    if (e.key === 'Enter') {\n      if (searchStk !== '') {\n        if (!stockFormatTest.test(searchStk)) {\n          setStockError('must be 5 digits');\n        } else {\n          setOpenMenu(false);\n          history.push(`/vehicle-details/stock/${searchStk}/stage?prev=${previous}`);\n          setSearchStk('');\n        }\n      }\n    } else {\n      setStockError('');\n    };\n  };\n\n  return (\n    < TextField className={classes.search}\n      size='small'\n      placeholder=\"Stock #\"\n      error={stockError ? true : false}\n      helperText={stockError}\n      inputProps={{ 'aria-label': 'search' }\n      }\n      InputProps={{\n        startAdornment: (\n          <StyledInputAdornment position='start'>\n            <SearchIcon color='inherit' />\n          </StyledInputAdornment>\n        ),\n        classes: {\n          root: classes.inputRoot\n        }\n      }}\n      value={searchStk}\n      onChange={handleChangeSearch}\n      onKeyDown={handleSearchKeyPress}\n    />\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { Link, useLocation } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Hidden from '@mui/material/Hidden';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Drawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport AddIcon from '@mui/icons-material/Add';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\nimport LaptopIcon from '@mui/icons-material/Laptop';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport CloseIcon from '@mui/icons-material/Close';\n// THIS PROJECT\n// components\nimport StockSearchBar from './StockSearchBar';\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n    fontFamily: 'Lobster',\n    color: theme.titleColor.darkBlue,\n  },\n  menuItems: {\n    width: theme.mainMenu.width,\n  },\n  link: {\n    textDecoration: 'none',\n    color: 'black'\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    [theme.breakpoints.up('lg')]: {\n      display: 'none',\n    },\n  },\n}));\n\n// React automatically includes window prop, so we don't need to include it as a prop when we call this component\ninterface MainMenuProps {\n  window?: () => Window;\n};\nexport default function MainMenu(props: MainMenuProps): React.ReactElement {\n  const { window } = props;\n  const classes = useStyles();\n  const location = useLocation();\n\n  //OPENING THE MENU\n  const [openMenu, setOpenMenu] = useState<boolean>(false);\n  const container = window !== undefined ? () => window().document.body : undefined;\n\n  const closeDrawerEvent = (event: React.KeyboardEvent | React.MouseEvent) => {\n    if (event.type === 'keydown' &&\n      ((event as React.KeyboardEvent).key === 'Tab' ||\n        (event as React.KeyboardEvent).key === 'Shift')\n    ) {\n      return;\n    }\n    setOpenMenu(false);\n  };\n\n  // DISPLAYING SELECTION\n  type Selection = '/all-vehicles' | '/add-vehicle' | '/stages' | '/people-places' | '/analytics' | '/demo-actions' | '/demo-settings' | '';\n  const [selection, setSelection] = useState<Selection>('/all-vehicles');\n\n  useEffect(() => {\n    const regex = /(\\/[\\w-]+)/;\n    const match = location!.pathname.match(regex);\n    match ? setSelection(match[1] as Selection) : setSelection('');\n  }, [location, setSelection]);\n\n  // MENU ITEMS\n  const menuItemsSmall = (\n    <div\n      className={classes.menuItems}\n      role=\"presentation\"\n    >\n      <ListItem sx={{ marginTop: 1 }} secondaryAction={\n        <IconButton edge=\"end\" aria-label=\"close menu\" onClick={() => setOpenMenu(false)}>\n          <CloseIcon />\n        </IconButton>\n      }>\n      </ListItem>\n      <ListItem>\n        <StockSearchBar setOpenMenu={setOpenMenu} />\n      </ListItem>\n      <Divider />\n      <Link className={classes.link} to='/all-vehicles/active/asc/10/first/0' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><VisibilityIcon /></ListItemIcon>\n          <ListItemText>All Vehicles</ListItemText>\n        </ListItem>\n      </Link>\n      <Link className={classes.link} to='/add-vehicle' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText>Add Vehicle</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n      <Link className={classes.link} to='/stages' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><VisibilityIcon /></ListItemIcon>\n          <ListItemText>Stages</ListItemText>\n        </ListItem>\n      </Link>\n      <Link className={classes.link} to='/people-places' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><VisibilityIcon /></ListItemIcon>\n          <ListItemText>People/Places</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n      <Link className={classes.link} to='/analytics/overview' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><EqualizerIcon /></ListItemIcon>\n          <ListItemText>Analytics</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n      <Link className={classes.link} to='/demo-actions' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><LaptopIcon /></ListItemIcon>\n          <ListItemText>Demo Actions</ListItemText>\n        </ListItem>\n      </Link>\n      <Link className={classes.link} to='/demo-settings' onClick={() => setOpenMenu(false)}>\n        <ListItem\n          button\n        >\n          <ListItemIcon><SettingsIcon /></ListItemIcon>\n          <ListItemText>Demo Settings</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n    </div >\n  );\n\n  const menuItemsLarge = (\n    <div\n      className={classes.menuItems}\n      role=\"presentation\"\n    >\n      <ListItem>\n        <StockSearchBar setOpenMenu={setOpenMenu} />\n      </ListItem>\n      <Divider />\n      <Link className={classes.link} to='/all-vehicles/active/asc/10/first/0' >\n        <ListItem\n          button\n          selected={selection === '/all-vehicles'}\n        >\n          <ListItemIcon><VisibilityIcon /></ListItemIcon>\n          <ListItemText>All Vehicles</ListItemText>\n        </ListItem>\n      </Link>\n      <Link className={classes.link} to='/add-vehicle' >\n        <ListItem\n          button\n          selected={selection === '/add-vehicle'}\n        >\n          <ListItemIcon><AddIcon /></ListItemIcon>\n          <ListItemText>Add Vehicle</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n      <Link className={classes.link} to='/stages' >\n        <ListItem\n          button\n          selected={selection === '/stages'}\n        >\n          <ListItemIcon><VisibilityIcon /></ListItemIcon>\n          <ListItemText>Stages</ListItemText>\n        </ListItem>\n      </Link>\n      <Link className={classes.link} to='/people-places' >\n        <ListItem\n          button\n          selected={selection === '/people-places'}\n        >\n          <ListItemIcon><VisibilityIcon /></ListItemIcon>\n          <ListItemText>People/Places</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n      <Link className={classes.link} to='/analytics/overview' >\n        <ListItem\n          button\n          selected={selection === '/analytics'}\n        >\n          <ListItemIcon><EqualizerIcon /></ListItemIcon>\n          <ListItemText>Analytics</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n      <Link className={classes.link} to='/demo-actions' >\n        <ListItem\n          button\n          selected={selection === '/demo-actions'}\n        >\n          <ListItemIcon><LaptopIcon /></ListItemIcon>\n          <ListItemText>Demo Actions</ListItemText>\n        </ListItem>\n      </Link>\n      <Link className={classes.link} to='/demo-settings' >\n        <ListItem\n          button\n          selected={selection === '/demo-settings'}\n        >\n          <ListItemIcon><SettingsIcon /></ListItemIcon>\n          <ListItemText>Demo Settings</ListItemText>\n        </ListItem>\n      </Link>\n      <Divider />\n    </div >\n  );\n\n\n  return <>\n    {!openMenu && <IconButton\n      edge=\"start\"\n      className={classes.menuButton}\n      color=\"inherit\"\n      aria-label=\"menu\"\n      onClick={() => setOpenMenu(true)}\n      size=\"large\">\n      <MenuIcon />\n    </IconButton>}\n    <nav>\n      <Hidden lgUp implementation='css'>\n        <Drawer container={container} anchor={'left'} open={openMenu} onClose={closeDrawerEvent}>\n          {menuItemsSmall}\n        </Drawer>\n      </Hidden>\n      <Hidden lgDown implementation='css'>\n        <Drawer variant='permanent' open>\n          {menuItemsLarge}\n        </Drawer>\n      </Hidden>\n    </nav>\n  </>;\n};","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\n\nexport const FlexCenter = styled(Box)({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'center',\n  alignItems: 'center'\n});\n\nexport const FlexSpaceBtwn = styled(Box)({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'space-between',\n  alignItems: 'center',\n});\n\nexport const FlexSpaceEvenly = styled(Box)({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'space-evenly',\n  alignItems: 'center'\n});\n\nexport const FlexStart = styled(Box)({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'start',\n  alignItems: 'center'\n});\n\nexport const FlexEnd = styled(Box)({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'flex-end',\n  alignItems: 'center'\n});\n\nexport const FlexSpaceAround = styled(Box)({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'space-around',\n  alignItems: 'center'\n});","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from './flex';\n\nconst useStyles = makeStyles({\n  flexCenter: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    height: '100vh',\n    width: '100vw',\n    backgroundColor: 'black',\n    opacity: 0.5,\n    zIndex: 100,\n  },\n});\n\nexport default function LoadingFullPage(): React.ReactElement {\n  const classes = useStyles();\n\n  return (\n    <FlexCenter className={classes.flexCenter}>\n      <CircularProgress />\n    </FlexCenter>\n  );\n}","// react\nimport { useEffect, useRef } from 'react';\n// react-router\nimport { useLocation, useParams } from 'react-router-dom';\n// THIS PROJECT\n// types\nimport { VehicleStatus } from './types/Vehicle';\nimport { ListOrder, Page } from './types/misc';\n\nexport function useCheckMounted() {\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => { mounted.current = false; };\n  });\n\n  return mounted;\n}\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport function useVehiclePage() {\n  interface ParamTypes {\n    statusParam: VehicleStatus;\n    sortParam: ListOrder;\n    perPageParam: string;\n    pageParam: Page;\n    compareParam: string;\n  }\n  return useParams<ParamTypes>();\n}\n\n","// types\nimport { FailedResult, DeleteSuccess, GetSuccess, SuccessResult } from \"../types/ServiceResults\";\nimport { DbSelection, Defaults } from '../types/Demo';\n\nconst demo = 'http://localhost:7000/api/demo';\n\nexport async function selectDatabase(dbSelection: DbSelection): Promise<SuccessResult | FailedResult> {\n  // const dbSelectionJSON = JSON.stringify(dbSelection);\n  const body = { dbSelection };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch('http://localhost:7001/api/demo/select-db', options);\n  const json = await response.json();\n  return json;\n}\n\n// gets the default stage assignment, i.e. 'stage: Assign, personPlace: Inventory Manager'\nexport async function getDefaults(): Promise<GetSuccess<Defaults> | FailedResult> {\n  const response = await fetch(demo + '/get-defaults');\n  const json = await response.json();\n  return json;\n};\n\nexport async function clearDatabase(): Promise<DeleteSuccess | FailedResult> {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + '/clear-database', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function addVehicleDescriptors(): Promise<SuccessResult | FailedResult> {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + '/add-vehicle-descriptors', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function addStages(): Promise<SuccessResult | FailedResult> {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + '/add-stages', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function generateVehicles(vehicleAmount: string, months: string): Promise<SuccessResult | FailedResult> {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + `/generate-vehicles/${vehicleAmount}/${months}`, options);\n  const json = await response.json();\n  return json;\n}","// material-ui\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\n\ninterface CenteredErrorProps {\n  errorMessage: string;\n  retryAction?: () => void;\n};\nexport default function CenteredError(props: CenteredErrorProps): React.ReactElement {\n  const { errorMessage, retryAction } = props;\n\n  return (\n    <FlexCenter flexDirection='column'>\n      <SentimentVeryDissatisfiedIcon />\n      <p>{errorMessage}</p>\n      <Divider />\n      {retryAction\n        && <Button onClick={retryAction}>\n          Retry\n        </Button>}\n    </FlexCenter>\n  );\n}","// react\nimport { createContext, useContext, useState, ReactChild, ReactChildren, useCallback, useEffect } from 'react';\n// reat-cookie\nimport { useCookies } from 'react-cookie';\n// THIS PROJECT\n// components\nimport LoadingFullPage from '../components/common/LoadingFullPage';\nimport CenteredError from '../components/common/CenteredError';\n// services\nimport { selectDatabase as selectDatabaseService } from '../services/demo';\nimport { DbSelection } from '../types/Demo';\n// types\nimport { Set } from '../types/misc';\n\ninterface DemoContextInterface {\n  loadingTime: number;\n  setLoadingTime: Set<number>;\n  db: DbSelection | null;\n  setDb: Set<DbSelection | null>;\n  dbReady: boolean;\n  delay: () => Promise<void>;\n  saveLoadingTime: (loadingTimeNum: number) => void;\n  saveDb: (dbSelection: DbSelection | null) => void;\n  selectDatabase: (dbSelection: DbSelection) => void;\n}\n\nconst DemoContext = createContext({}); // creating with an initial blank context, this is okay since we will never be using this context without a provider\n\nexport function useDemoContext(): DemoContextInterface {\n  return useContext(DemoContext) as DemoContextInterface;\n}\n\ninterface DemoProviderProps {\n  children: ReactChild | ReactChildren;\n}\n\nexport function DemoProvider(props: DemoProviderProps): React.ReactElement {\n  const [cookies, setCookie] = useCookies(['demoLoadingTime', 'demoDb']);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingTime, setLoadingTime] = useState<number>(0); // milliseconds\n  const [dbReady, setDbReady] = useState<boolean>(false);\n  const [db, setDb] = useState<DbSelection | null>(null);\n  const [error, setError] = useState<boolean>(false);\n\n  const saveDb = useCallback((dbSelection: DbSelection | null) => {\n    setCookie('demoDb', dbSelection, { path: '/' });\n  }, [setCookie]);\n\n  useEffect(() => {\n    cookies.demoLoadingTime ? setLoadingTime(parseInt(cookies.demoLoadingTime)) : setLoadingTime(500); //set 500 default if cookie is undefined\n    cookies.demoDb ? setDb(cookies.demoDb) : saveDb('mongodb'); //set 500 default if cookie is undefined\n  }, [cookies.demoLoadingTime, cookies.demoDb, saveDb]);\n\n  function saveLoadingTime(loadingTimeNum: number) {\n    setCookie('demoLoadingTime', loadingTimeNum, { path: '/' });\n  }\n\n  async function delay() {\n    await new Promise(resolve => setTimeout(resolve, loadingTime));\n  }\n\n  const selectDatabase = useCallback((dbSelection: DbSelection) => {\n    setDbReady(false);\n    setLoading(true);\n    selectDatabaseService(dbSelection)\n      .then(() => {\n        setDbReady(true);\n        setLoading(false);\n      }, e => {\n        console.error(e);\n        setError(true);\n        setDbReady(false);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    db && selectDatabase(db);\n  }, [selectDatabase, db]);\n\n  const value: DemoContextInterface = {\n    loadingTime, setLoadingTime, db, setDb, dbReady, delay, saveLoadingTime, saveDb, selectDatabase\n  };\n  return (\n    <DemoContext.Provider value={value}>\n      {loading ? <LoadingFullPage /> : error ? <CenteredError errorMessage={`Failed to connect to server. Ensure that 'Selection Server' is listening on localhost:7001 and refresh`} /> : props.children}\n    </DemoContext.Provider>\n  );\n}\n","// react\nimport { createContext, useContext, useState, useEffect, ReactChild, ReactChildren, useCallback } from 'react';\n// react-cookie\nimport { useCookies } from 'react-cookie';\n// THIS PROJECT\n// components\nimport LoadingFullPage from '../components/common/LoadingFullPage';\n// hooks\nimport { useCheckMounted } from '../hooks';\n// services\nimport { getDefaults } from '../services/demo';\n// contexts\nimport { useDemoContext } from './DemoContext';\n// types\nimport { Set } from '../types/misc';\nimport { Defaults } from '../types/Demo';\n\ninterface AuthContextInterface {\n  currentUser: string | null;\n  loading: boolean;\n  logIn: (name: string) => void;\n  logOut: () => void;\n  userPreferences: Defaults;\n  setUserPreferences: Set<Defaults>;\n  getUserPreferences: () => Promise<void>;\n};\n\nconst AuthContext = createContext({});  // creating with an initial blank context, this is okay since we will never be using this context without a provider\n\n\nexport function useAuthContext(): AuthContextInterface {\n  if (AuthContext === null) {\n    console.error('AuthContext is null, make sure to only use AuthContext within an AuthProvider');\n  }\n  return useContext(AuthContext) as AuthContextInterface;\n}\n\ninterface AuthProviderProps {\n  children: ReactChild | ReactChildren;\n}\nexport function AuthProvider(props: AuthProviderProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { dbReady, delay } = useDemoContext();\n  const { children } = props;\n  const [cookies, setCookie, removeCookie] = useCookies(['user', 'demoDb', 'demoLoadingTime']);\n  const [currentUser, setCurrentUser] = useState<string | null>(cookies.user);\n  const [loading, setLoading] = useState(true);\n\n  async function logIn(name: string) {\n    mounted.current && setLoading(true);\n    await delay();\n    setCookie('user', name, { path: '/' });\n    mounted.current && setLoading(false);\n  };\n\n  async function logOut() {\n    mounted.current && setLoading(true);\n    await delay();\n    removeCookie('user', { path: '/' });\n    removeCookie('demoDb', { path: '/' });\n    removeCookie('demoLoadingTime', { path: '/' });\n    mounted.current && setLoading(false);\n  };\n\n  const [userPreferences, setUserPreferences] = useState<Defaults>({\n    defaultStageAssignment: {\n      stage: {\n        id: '',\n        name: ''\n      },\n      personPlace: {\n        id: '',\n        name: ''\n      }\n    }\n  });\n\n  const getUserPreferences = useCallback(async () => {\n    mounted.current && setLoading(true);\n    getDefaults()\n      .then(result => {\n        mounted.current && setLoading(false);\n        mounted.current && result.status === 'success' && result.data && setUserPreferences(result.data);\n      }, e => {\n        mounted.current && setLoading(false);\n        mounted.current && console.error(e);\n      });\n\n  }, [mounted]);\n\n  useEffect(() => {\n    dbReady && getUserPreferences();\n  }, [getUserPreferences, dbReady]);\n\n  useEffect(() => {\n    setCurrentUser(cookies.user);\n  }, [cookies.user]);\n\n  const value: AuthContextInterface = {\n    currentUser,\n    loading,\n    logIn,\n    logOut,\n    userPreferences,\n    setUserPreferences,\n    getUserPreferences,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {loading ? <LoadingFullPage /> : children}\n    </AuthContext.Provider>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// THIS PROJECT\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\nexport default function UserMenu(): React.ReactElement {\n  const { currentUser, logOut } = useAuthContext();\n  const [anchorUserEl, setAnchorUserEl] = useState<null | HTMLElement>(null);\n  const openUserMenu = Boolean(anchorUserEl);\n\n  const toggleUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n    setAnchorUserEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorUserEl(null);\n  };\n\n  return <>\n    <IconButton\n      aria-label=\"account of current user\"\n      aria-controls=\"menu-appbar\"\n      aria-haspopup=\"true\"\n      onClick={toggleUserMenu}\n      color=\"inherit\"\n      size=\"large\">\n      <AccountCircle />\n    </IconButton>\n    <Menu\n      id=\"menu-appbar\"\n      anchorEl={anchorUserEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={openUserMenu}\n      onClose={handleClose}\n    >\n      <MenuItem disabled>{currentUser}</MenuItem>\n      <MenuItem onClick={logOut}>LOG OUT</MenuItem>\n    </Menu>\n  </>;\n};\n","// react-router-dom\nimport { Link } from 'react-router-dom';\n// material-ui\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport MainMenu from './MainMenu';\nimport UserMenu from './UserMenu';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  root: {\n    position: 'relative',\n    color: theme.titleColor.lightBlue,\n    margin: theme.spacing(7.5),\n    left: '0',\n    top: '0',\n    zIndex: 100,\n  },\n  title: {\n    flexGrow: 1,\n    fontFamily: 'Lobster',\n  },\n  link: {\n    textDecoration: 'none',\n    color: theme.titleColor.lightBlue,\n  },\n  appBar: {\n    backgroundColor: '#101010',\n    [theme.breakpoints.up('lg')]: {\n      width: `calc(100% - ${theme.mainMenu.width})`,\n    },\n  },\n}));\n\nexport default function Nav(): React.ReactElement {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar className={classes.appBar} color='transparent' position=\"fixed\">\n        <Toolbar>\n          <MainMenu />\n          <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\n            <Link className={classes.link} to='/'>Auto Inventory Flow</Link>\n          </Typography>\n          <UserMenu />\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","// react\nimport { FunctionComponent } from 'react';\n// react-router-dom\nimport { Route, Redirect } from 'react-router-dom';\n// THIS PROJECT\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\ninterface PrivateRouteProps {\n  exact?: boolean,\n  path: string,\n  component: FunctionComponent,\n};\nexport default function PrivateRoute(props: PrivateRouteProps): React.ReactElement {\n  const { currentUser } = useAuthContext();\n  let Component: FunctionComponent = props.component;\n\n  let renderComponent: JSX.Element = (<div></div>);\n  if (currentUser) {\n    renderComponent = (\n      <Component />\n    );\n  } else if (!currentUser) {\n    renderComponent = (\n      <Redirect to='/log-in' />\n    );\n  };\n\n  return (\n    <Route\n      {...props.exact}\n      path={props.path}\n    >\n      {renderComponent}\n    </Route >\n  );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport { FlexCenter } from './flex';\n\nexport const LargeCard = styled(Card)(({\n  theme\n}) => ({\n  width: 'clamp(300px, 98vw, 750px)',\n  margin: 'auto',\n  paddingBottom: theme.spacing(5),\n  backgroundColor: 'white',\n}));\n\nexport const SmallCard = styled(Card)(({\n  theme\n}) => ({\n  width: 'clamp(300px, 98vw, 500px)',\n  margin: 'auto',\n  paddingBottom: theme.spacing(2),\n  backgroundColor: 'white',\n}));\n\nexport const ExtraSmallCard = styled(Card)(({\n  theme\n}) => ({\n  width: 'clamp(200px, 50vw, 300px)',\n  margin: 'auto',\n  paddingBottom: theme.spacing(2),\n  backgroundColor: 'white',\n}));\n\nexport const ContentHeader = styled('div')(({\n  theme\n}) => ({\n  padding: theme.spacing(1),\n  width: '100%',\n  textAlign: 'center',\n}));\n\nexport const ContentTitle = styled(Typography)(({\n  theme\n}) => ({\n  color: theme.titleColor.darkBlue,\n}));\n\ninterface IconContentTitleProps {\n  icon: JSX.Element;\n  children: React.ReactChild | React.ReactChild[];\n  variant?: 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'subtitle1'\n  | 'subtitle2'\n  | 'body1'\n  | 'body2'\n  | 'caption'\n  | 'button'\n  | 'overline'\n  | 'inherit';\n};\nexport function IconContentTitle(props: IconContentTitleProps): React.ReactElement {\n  return (\n    <FlexCenter style={{ gap: 10 }}>\n      {props.icon}\n      <ContentTitle variant={props.variant}>{props.children}</ContentTitle>\n    </FlexCenter>\n  );\n};\n\nexport const LargeContent = styled(CardContent)({\n  width: 'clamp(300px, 98vw, 600px)',\n  padding: 10,\n  margin: '0px auto 0px auto',\n  backgroundColor: 'white'\n});\n\nexport const SmallContent = styled(CardContent)({\n  width: 'clamp(300px, 98vw, 450px)',\n  padding: 10,\n  margin: 'auto',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  flexDirection: 'column',\n});\n\nexport const ContentPaper = styled(Paper)(({\n  theme\n}) => ({\n  padding: theme.spacing(2),\n  margin: theme.spacing(1),\n}));","// react\nimport { useState } from 'react';\n// react-router-dom\nimport { Redirect } from 'react-router-dom';\n// material-ui\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\n// THIS PROJECT\n// components\nimport { ExtraSmallCard, ContentHeader, ContentTitle } from '../common/cardContent';\nimport { FlexCenter } from '../common/flex';\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  outerFlex: {\n    height: '80vh',\n    width: '100vw',\n    position: 'fixed',\n    x: 0,\n    y: 0\n  },\n  card: {\n    padding: theme.spacing(3),\n  },\n  nameField: {\n    marginTop: 0,\n    margin: theme.spacing(2),\n  },\n  title: {\n    fontFamily: 'Lobster',\n  }\n}));\n\nexport default function LogIn(): React.ReactElement {\n  const classes = useStyles();\n  const { currentUser, logIn } = useAuthContext();\n\n  const [name, setName] = useState<string>('');\n\n  const changeName = (e: React.ChangeEvent<{ value: unknown; }>): void => {\n    setName(e.target.value as string);\n  };\n\n  const submit = () => logIn(name);\n\n  return (\n    <>\n      <FlexCenter className={classes.outerFlex}>\n        <ExtraSmallCard className={classes.card}>\n          <ContentHeader>\n            <FlexCenter>\n              <ContentTitle className={classes.title} variant='h5'>Auto Inventory Flow</ContentTitle>\n            </FlexCenter>\n            <Divider />\n          </ContentHeader>\n          <FlexCenter flexDirection='column'>\n            <TextField id='user-name' label=\"Name\" variant='outlined' size='small'\n              className={classes.nameField} onChange={changeName} value={name} autoComplete='off' />\n            <Button onClick={submit} color='primary' variant='contained'\n              disabled={name.length > 0 ? false : true}>\n              Log In\n            </Button>\n          </FlexCenter>\n        </ExtraSmallCard>\n      </FlexCenter>\n      {currentUser && <Redirect to='/' />}\n    </>\n  );\n}","// react\nimport { useState } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// material-ui\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Button from '@mui/material/Button';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n// THS PROJECT\n// hooks\nimport { useVehiclePage } from '../../hooks';\n// types\nimport { VehicleStatus } from '../../types/Vehicle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  trash: {\n    color: theme.palette.secondary.main,\n  },\n  sold: {\n    color: theme.palette.success.main,\n  },\n  active: {\n    color: theme.palette.primary.main,\n  },\n}));\n\ninterface StatusFilterProps {\n  filter: VehicleStatus;\n  setFilter: (filter: VehicleStatus) => void;\n}\nexport default function StatusFilter(props: StatusFilterProps): React.ReactElement {\n  const classes = useStyles();\n  const history = useHistory();\n  const { statusParam, sortParam, perPageParam } = useVehiclePage();\n\n  const [filterAnchor, setFilterAnchor] = useState<null | HTMLElement>(null);\n\n  const handleFilterClick = (e: React.MouseEvent<HTMLElement>) => {\n    setFilterAnchor(e.currentTarget);\n  };\n\n  const handleFilterClose = (newStatus: VehicleStatus) => {\n    setFilterAnchor(null);\n    history.push(`/all-vehicles/${newStatus}/${sortParam}/${perPageParam}/first/0`);\n  };\n\n  let filterDisplay: JSX.Element;\n\n  if (statusParam === 'trash') {\n    filterDisplay = <span className={classes.trash}>TRASH</span>;\n  } else if (statusParam === 'sold') {\n    filterDisplay = <span className={classes.sold}>SOLD</span>;\n  } else {\n    filterDisplay = <span className={classes.active}>ACTIVE</span>;\n  };\n\n  return (\n    <>\n      <Button size='small' startIcon={<FilterListIcon />} aria-controls='filter-menu' aria-haspopup='true' onClick={handleFilterClick}>\n        {filterDisplay}\n      </Button>\n      <Menu\n        id=\"filter-menu\"\n        anchorEl={filterAnchor}\n        keepMounted\n        open={Boolean(filterAnchor)}\n        onClose={() => handleFilterClose(statusParam)}\n      >\n        <MenuItem onClick={() => handleFilterClose('active')}>Active</MenuItem>\n        <MenuItem onClick={() => handleFilterClose('sold')}>Sold</MenuItem>\n        <MenuItem onClick={() => handleFilterClose('trash')}>Trash</MenuItem>\n      </Menu>\n    </>\n  );\n}\n","// react-router-dom\nimport { useHistory } from 'react-router';\n// material-ui\nimport Button from '@mui/material/Button';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n// THIS PROJECT\n// hooks\nimport { useVehiclePage, useQuery } from '../../hooks';\n// types\nimport { ListOrder } from '../../types/misc';\n\ninterface VehicleOrderProps {\n  sort: ListOrder;\n  setSort: (sort: ListOrder) => void;\n};\nexport default function VehicleOrder(props: VehicleOrderProps): React.ReactElement {\n  const history = useHistory();\n  const { sort, setSort } = props;\n  const { statusParam, perPageParam } = useVehiclePage();\n  const query = useQuery().toString();\n\n  const vehicleOrderClick = () => {\n    let newSort: ListOrder;\n    sort === 'asc' ? newSort = 'desc' : newSort = 'asc';\n    setSort(newSort);\n    history.push(`/all-vehicles/${statusParam}/${newSort}/${perPageParam}/first/0?${query}`);\n  };\n\n  return (\n    <Button\n      size='small'\n      startIcon={<ArrowDownwardIcon />}\n      aria-controls='sort-menu'\n      aria-haspopup='true'\n      onClick={vehicleOrderClick}\n    >\n      {sort === 'asc' ? 'oldest' : 'recent'}\n    </Button>\n  );\n}","// react-router-dom\nimport { Link } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Box from '@mui/material/Box';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst useStyles = makeStyles({\n  addButton: {\n    position: 'absolute',\n    right: 5,\n    top: 5,\n  },\n});\n\nexport default function AddVehicleButton(): React.ReactElement {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.addButton}>\n      <Link to='/add-vehicle'>\n        <Fab size='small' color=\"primary\" aria-label=\"add\">\n          <AddIcon />\n        </Fab>\n      </Link>\n    </Box>\n  );\n}","// material-ui\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  dialog: {\n    margin: 'auto',\n  },\n  dialogContent: {\n    width: '80vw',\n    maxWidth: 400,\n    maxHeight: '90vh',\n  },\n}));\n\ninterface SelectDialogProps {\n  open: boolean;\n  setOpen: (val: boolean) => void;\n  children: JSX.Element;\n  flex?: boolean;\n};\nexport default function SelectDialog(props: SelectDialogProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { open, setOpen, children, flex } = props;\n\n  return (\n    <Dialog className={classes.dialog} open={open} onClose={() => setOpen(false)}>\n      <DialogContent className={classes.dialogContent}\n        style={flex ? { display: 'flex', justifyContent: 'center', alignItems: 'center' } : {}}\n      >\n        {children}\n      </DialogContent>\n    </Dialog>\n  );\n};\n","// material-ui\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\n\ninterface CustomSelectProps {\n  label: string;\n  id: string;\n  value: string;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  disabled?: boolean;\n  className?: string,\n  button?: boolean,\n  TextFieldProps?: any,\n  ButtonProps?: any;\n};\nexport default function CustomSelect(props: CustomSelectProps): React.ReactElement {\n  const { label, id, value, setOpen, disabled, className, button, TextFieldProps, ButtonProps } = props;\n\n  if (button) {\n    return (\n      <Button\n        id={id}\n        className={className && className}\n        onClick={() => { !disabled && setOpen(true); }}\n        variant='outlined'\n        size='small'\n        color={!value ? 'inherit' : 'primary'}\n        {...ButtonProps}\n        disabled={disabled ? true : false}\n      >\n        {value ? value : label}\n      </Button>\n    );\n  } else {\n    return (\n      <TextField\n        className={className && className}\n        label={label}\n        id={id}\n        value={value}\n        variant='outlined'\n        InputProps={{\n          endAdornment: <ExpandMore />,\n          readOnly: true,\n          style: {\n            cursor: 'pointer'\n          }\n        }}\n        inputProps={{\n          style: {\n            cursor: 'pointer'\n          }\n        }}\n        onClick={() => { !disabled && setOpen(true); }}\n        {...TextFieldProps}\n        disabled={disabled ? true : false}\n      />\n    );\n  };\n}","// material-ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  listItem: {\n    paddingLeft: theme.spacing(2),\n  },\n  emphasized: {\n    fontStyle: 'italic',\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\ninterface SelectListItemProps {\n  onClick: (selection: unknown) => void;\n  textVal: string;\n  selectCondition: boolean;\n  emphasize?: boolean;\n};\nexport default function SelectListItem(props: SelectListItemProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { onClick, textVal, selectCondition, emphasize } = props;\n\n  return (\n    <ListItem button onClick={onClick} className={emphasize ? classes.emphasized : classes.listItem}>\n      <ListItemText primary={textVal} />\n      {selectCondition\n        ? <RadioButtonCheckedIcon color='primary' />\n        : <RadioButtonUncheckedIcon />}\n    </ListItem>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\n// types\nimport { Set } from '../../../types/misc';\n\ninterface YearSelectProps {\n  year: string;\n  setYear: Set<string>;\n  className?: string;\n  button?: boolean;\n  TextFieldProps?: any;\n  ButtonProps?: any;\n};\nexport default function YearSelect(props: YearSelectProps): React.ReactElement {\n  const { year, setYear, className, button, TextFieldProps, ButtonProps } = props;\n\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  let years = [];\n  for (let i = 1980; i <= currentYear; i++) {\n    years.unshift(i.toString());\n  };\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleYearSelect = (year: string) => {\n    setYear(year);\n    setOpen(false);\n  };\n\n  return (\n    <>\n      <CustomSelect\n        label={button ? 'year' : 'Year*'}\n        id='year-select'\n        value={year}\n        setOpen={setOpen}\n        className={className}\n        button={button ? true : false}\n        TextFieldProps={TextFieldProps}\n        ButtonProps={ButtonProps}\n      />\n      <SelectDialog open={open} setOpen={setOpen}>\n        <List>\n          <SelectListItem\n            onClick={() => handleYearSelect('')}\n            textVal={''}\n            selectCondition={year === ''}\n          />\n          <Divider />\n          {years.map(yeartmp =>\n            <div key={yeartmp}>\n              <SelectListItem\n                onClick={() => handleYearSelect(yeartmp)}\n                textVal={yeartmp}\n                selectCondition={yeartmp === year}\n              />\n              <Divider />\n            </div>)}\n        </List>\n      </SelectDialog >\n    </>\n  );\n}","// material-ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport AddIcon from '@mui/icons-material/Add';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  emphasized: {\n    fontStyle: 'italic',\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\ninterface AddListItemProps {\n  onClick: () => void;\n  textVal: string;\n};\nexport default function AddListItem(props: AddListItemProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { onClick, textVal } = props;\n\n  return (\n    <ListItem button onClick={onClick} className={classes.emphasized}>\n      <ListItemText primary={textVal} />\n      <AddIcon />\n    </ListItem>\n  );\n}","type ResultStatus = 'success' | 'exists' | 'failed';\n\nexport abstract class Result {\n  status: ResultStatus;\n  constructor(status: ResultStatus) {\n    this.status = status;\n  }\n};\n\nexport class SuccessResult extends Result {\n  constructor() {\n    super('success');\n  }\n};\n\nexport class GetSuccess<Return> extends SuccessResult {\n  data: Return;\n\n  constructor(data: Return) {\n    super();\n    this.data = data;\n  };\n};\n\nexport class PostSuccess<Doc, Data = void> extends SuccessResult {\n  id: string;\n  doc: Doc;\n  data?: Data;\n\n  constructor(id: string, addedDoc: Doc, data?: Data,) {\n    super();\n    this.id = id;\n    this.doc = addedDoc;\n    this.data = data;\n  };\n};\n\nexport class PostExists extends Result {\n  field: string;\n  value: string;\n  patch: null = null;\n  doc: null = null;\n  data: null = null;\n\n  constructor(field: string, value: string) {\n    super('exists');\n    this.field = field;\n    this.value = value;\n  };\n};\n\nexport class PatchSuccess<Patch, Doc, Data = void> extends PostSuccess<Doc, Data> {\n  patch: Patch;\n\n  constructor(id: string, patch: Patch, doc: Doc, data?: Data) {\n    super(id, doc, data);\n    this.patch = patch;\n  };\n};\n\nexport class PatchManyResult<Return> extends Result {\n  constructor(\n    public status: 'success' | 'failed',\n    public patches: (PatchSuccess<unknown, unknown> | FailedResult)[],\n    public data: Return\n  ) { super(status); }\n}\n\nexport class DeleteSuccess extends SuccessResult { };\n\nexport class FailedResult extends Result {\n  patch = null;\n  doc = null;\n  data = null;\n  error?: string;\n  requestBody?: object;\n  details?: string;\n\n  constructor(error?: string, requestBody?: object, details?: string) {\n    super('failed');\n    this.error = error;\n    this.requestBody = requestBody;\n    this.details = details;\n  };\n}","// types\nimport { VehiclePage, AddVehicleParam, VehicleStatus, DetailedVehicle, NextStock, CheckStock, ModelDoc } from '../types/Vehicle';\nimport { GetSuccess, PostSuccess, PatchSuccess, PostExists, FailedResult, DeleteSuccess } from '../types/ServiceResults';\nimport { IdName, ListOrder, Page } from '../types/misc';\n\nconst vehicles = 'http://localhost:7000/api/vehicles';\n\nexport async function getVehiclesPaged(status: VehicleStatus, sort: ListOrder, perPage: number, page: Page, compare: number, query: string): Promise<GetSuccess<VehiclePage> | FailedResult> {\n  const response = await fetch(`${vehicles}/get-vehicles-paged/${status}/${sort}/${perPage}/${page}/${compare}?${query}`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function getVehiclesByStatus(statusArray: VehicleStatus[]): Promise<GetSuccess<DetailedVehicle[]> | FailedResult> {\n  const queryParams = statusArray.map(status => `status=${status}`).join('&');\n  const response = await fetch(vehicles + `?${queryParams}`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function findVehicle(field: 'id' | 'stock', value: string): Promise<GetSuccess<DetailedVehicle> | FailedResult> {\n  const response = await fetch(`${vehicles}/find?field=${field}&value=${value}`);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getNextStock(): Promise<GetSuccess<NextStock> | FailedResult> {\n  const response = await fetch(vehicles + '/next-stock');\n  const json = await response.json();\n  return json;\n};\n\nexport async function checkStock(stock: string): Promise<GetSuccess<CheckStock> | FailedResult> {\n  if (!stock) return new GetSuccess({ exists: false });\n  const response = await fetch(`${vehicles}/check-stock?stock=${stock}`);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getMakes(): Promise<GetSuccess<IdName[]> | FailedResult> {\n  const response = await fetch(vehicles + '/makes');\n  const json = await response.json();\n  return json;\n};\n\nexport async function addMake(make: string): Promise<PostSuccess<IdName, IdName[]> | PostExists | FailedResult> {\n  const body = { make };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/add-make', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getModels(makeId: string): Promise<GetSuccess<IdName[]> | FailedResult> {\n  const response = await fetch(`${vehicles}/models?makeId=${makeId}`);\n  const json = await response.json();\n  return json;\n};\n\nexport async function addModel(makeId: string, model: string): Promise<PostSuccess<ModelDoc, IdName[]> | PostExists | FailedResult> {\n  const body = { makeId, model };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/add-model', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getTrims(modelId: string): Promise<GetSuccess<IdName[]> | FailedResult> {\n  const response = await fetch(`${vehicles}/trims?modelId=${modelId}`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function addTrim(modelId: string, trim: string): Promise<PatchSuccess<IdName, ModelDoc, IdName[]> | PostExists | FailedResult> {\n  const body = { modelId, trim };\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/add-trim', options);\n  const json = await response.json();\n  return json;\n}\n\nexport async function addVehicle(addVehicleParam: AddVehicleParam, initialStageParam: any): Promise<PostSuccess<DetailedVehicle> | PostExists | FailedResult> {\n  const body = {\n    addVehicleParam: JSON.stringify({ ...addVehicleParam, dateAdded: Date.now() }),\n    initialStageParam: JSON.stringify(initialStageParam),\n  };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/add', options);\n  const json = await response.json();\n  return json;\n}\n\nexport async function updateVehicle(vehicleId: string, updateDoc: object): Promise<PatchSuccess<object, DetailedVehicle> | FailedResult> {\n  const body = {\n    vehicleId,\n    updateDoc: JSON.stringify(updateDoc),\n  };\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/update', options);\n  const json = await response.json();\n  return json;\n}\n\nexport async function sellVehicle(vehicleId: string, stageAssignmentId: string, dateSold: number): Promise<PatchSuccess<object, DetailedVehicle> | FailedResult> {\n  const body = {\n    vehicleId,\n    stageAssignmentId,\n    dateSold,\n  };\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/sell', options);\n  const json = await response.json();\n  return json;\n}\n\nexport async function deleteVehicle(vehicleId: string): Promise<DeleteSuccess | FailedResult> {\n  const body = { vehicleId };\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(vehicles + '/delete', options);\n  const json = await response.json();\n  return json;\n}","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addMake } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\n\nconst useStyles = makeStyles((theme) => ({\n  addButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\ninterface AddMakeProps {\n  makeSelectParent: {\n    mounted: MutableRefObject<boolean>;\n    setMake: Set<IdName>;\n  };\n  makeSelect: {\n    mounted: MutableRefObject<boolean>;\n    addMake: boolean;\n    setAddMake: Set<boolean>;\n    setMakes: Set<IdName[]>;\n    open: boolean;\n    setOpen: Set<boolean>;\n  };\n};\nexport default function AddMake(props: AddMakeProps): React.ReactElement {\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n\n  const { makeSelectParent: p, makeSelect: ms } = props;\n\n  const mounted = useCheckMounted();\n  const [addMakeStatus, setAddMakeStatus] = useState<PostRequestStatus | ''>('');\n  const [addMakeInput, setAddMakeInput] = useState<string>('');\n\n  const handleChangeAddMakeInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setAddMakeInput(e.target.value.toUpperCase());\n  };\n\n  // we need to create an updated openRef because the ms.open value will get stale within a function\n  const openRef = useRef(ms.open);\n  useEffect(() => {\n    openRef.current = ms.open;\n  }, [ms.open]);\n\n  const handleAddMake = async () => {\n    setAddMakeStatus('loading');\n    await delay();\n    addMake(addMakeInput)\n      .then(result => {\n        mounted.current && setAddMakeStatus(result.status as PostRequestStatus);\n        switch (result.status) {\n          case 'success':\n            if (p.mounted.current && openRef.current) {\n              result.doc && p.setMake(result.doc);\n            }\n            if (ms.mounted.current) {\n              ms.setAddMake(false);\n              result.data && ms.setMakes(result.data);\n              ms.setOpen(false);\n            }\n            break;\n          default:\n            mounted.current && setAddMakeInput('');\n            break;\n        };\n      }, e => {\n        setAddMakeStatus('failed');\n        console.error(e);\n      });\n  };\n\n  return (\n    <Collapse in={ms.addMake} timeout='auto' unmountOnExit>\n      <List>\n        {addMakeStatus === 'loading'\n          ? <FlexCenter><CircularProgress /></FlexCenter>\n          : <>\n            {addMakeStatus === 'exists'\n              &&\n              <Typography color='secondary'>\n                Already exists\n              </Typography>}\n            {addMakeStatus === 'failed'\n              &&\n              <Typography color='secondary'>\n                Failed to add make\n              </Typography>}\n            <ListItem>\n              <TextField\n                autoFocus\n                fullWidth\n                id='add-make-input'\n                label='Add Make*'\n                value={addMakeInput}\n                onChange={handleChangeAddMakeInput}\n                autoComplete='off'\n              />\n            </ListItem>\n            <div className={classes.addButtons}>\n              <Button onClick={() => ms.setAddMake(false)}>Cancel</Button>\n              <Button\n                onClick={addMakeInput ? handleAddMake : () => { }}\n                disabled={addMakeInput ? false : true}\n                color='primary'>\n                Add\n              </Button>\n            </div>\n          </>}\n      </List>\n    </Collapse>\n  );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddMake from './AddMake';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getMakes as getMakesService } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface MakeSelectProps {\n  parent: {\n    mounted: React.MutableRefObject<boolean>;\n    make: IdName;\n    setMake: Set<IdName>;\n  };\n  allowAddMake?: boolean;\n  className?: string;\n  button?: boolean;\n  TextFieldProps?: any;\n  ButtonProps?: any;\n};\nexport default function MakeSelect(props: MakeSelectProps): React.ReactElement {\n  const { delay } = useDemoContext();\n  const {\n    parent,\n    allowAddMake,\n    className,\n    button,\n    TextFieldProps,\n    ButtonProps\n  } = props;\n\n  const {\n    mounted: pMounted,\n    make,\n    setMake\n  } = parent;\n\n  const mounted = useCheckMounted();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleMakeSelect = (maketmp = make) => {\n    setMake(maketmp);\n    setOpen(false);\n  };\n\n  const [makes, setMakes] = useState<IdName[]>([]);\n  const [getMakesStatus, setGetMakesStatus] = useState<GetRequestStatus>('loading');\n\n  const getMakes = useCallback(async () => {\n    setGetMakesStatus('loading');\n    await delay();\n    getMakesService()\n      .then(result => {\n        mounted.current && result.data && setMakes(result.data);\n        mounted.current && setGetMakesStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetMakesStatus('failed');\n        console.error(e);\n      });\n\n  },\n    [delay, mounted]\n  );\n\n  useEffect(() => {\n    getMakes();\n  }, [getMakes]);\n\n  const [addMake, setAddMake] = useState<boolean>(false);\n\n  useEffect(() => {\n    !open && setAddMake(false);\n  }, [open]);\n\n  let dialogContent: JSX.Element;\n\n  switch (getMakesStatus) {\n    case 'loading':\n      dialogContent = <CircularProgress />;\n      break;\n    case 'failed':\n      dialogContent = <Typography>error loading makes</Typography>;\n      break;\n    default:\n      dialogContent = (\n        <>\n          <Collapse in={!addMake} timeout='auto' unmountOnExit>\n            <List>\n              <SelectListItem\n                onClick={() => handleMakeSelect({ id: '', name: '' })}\n                textVal=''\n                selectCondition={!make.name}\n              />\n              <Divider />\n              {makes.map(maketmp =>\n                <div key={maketmp.id}>\n                  <SelectListItem\n                    onClick={() => handleMakeSelect(maketmp)}\n                    textVal={maketmp.name}\n                    selectCondition={maketmp === make}\n                  />\n                  <Divider />\n                </div>)}\n              {allowAddMake &&\n                <AddListItem\n                  onClick={() => setAddMake(true)}\n                  textVal='Add Make'\n                />}\n            </List >\n          </Collapse>\n          {allowAddMake && <AddMake\n            makeSelectParent={{\n              mounted: pMounted,\n              setMake: setMake,\n            }}\n            makeSelect={{\n              mounted,\n              setMakes,\n              addMake,\n              setAddMake,\n              open,\n              setOpen\n            }}\n          />}\n        </>\n      );\n  };\n\n  return (\n    <>\n      <CustomSelect\n        label={button ? 'make' : 'Make*'}\n        id='make-select'\n        value={make.name}\n        setOpen={setOpen}\n        className={className}\n        button={button ? true : false}\n        TextFieldProps={TextFieldProps}\n        ButtonProps={ButtonProps}\n      />\n      <SelectDialog open={open} setOpen={setOpen}\n        flex={getMakesStatus === 'success' ? false : true}>\n        {dialogContent}\n      </SelectDialog>\n    </>\n  );\n};\n","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addModel } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme) => ({\n  addButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\ninterface AddModelProps {\n  modelSelectParent: {\n    mounted: MutableRefObject<boolean>;\n    makeId: string;\n    setModel: Set<IdName>;\n  };\n  modelSelect: {\n    mounted: MutableRefObject<boolean>;\n    addModel: boolean;\n    setAddModel: Set<boolean>;\n    setModels: Set<IdName[]>;\n    open: boolean;\n    setOpen: Set<boolean>;\n  };\n};\nexport default function AddModel(props: AddModelProps): React.ReactElement {\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n\n  const { modelSelectParent: p, modelSelect: ms } = props;\n\n  const mounted = useCheckMounted();\n  const [addModelStatus, setAddModelStatus] = useState<PostRequestStatus | ''>('');\n  const [addModelInput, setAddModelInput] = useState<string>('');\n\n  const handleChangeAddModelInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setAddModelInput(e.target.value.toUpperCase());\n  };\n\n  // we need to create an updated openRef because the ms.open value will get stale within a function\n  const openRef = useRef(ms.open);\n  useEffect(() => {\n    openRef.current = ms.open;\n  }, [ms.open]);\n\n  const handleAddModel = async () => {\n    setAddModelStatus('loading');\n    await delay();\n    addModel(p.makeId, addModelInput)\n      .then(result => {\n        mounted.current && setAddModelStatus(result.status as PostRequestStatus);\n        switch (result.status) {\n          case 'success':\n            if (p.mounted.current && openRef.current) {\n              result.doc && p.setModel(result.doc);\n            }\n            if (ms.mounted.current) {\n              ms.setAddModel(false);\n              result.data && ms.setModels(result.data);\n              ms.setOpen(false);\n            }\n            break;\n          default:\n            mounted.current && setAddModelInput('');\n            break;\n        };\n      }, e => {\n        setAddModelStatus('failed');\n        console.error(e);\n      });\n  };\n\n  return (\n    <Collapse in={ms.addModel} timeout='auto' unmountOnExit>\n      <List>\n        {addModelStatus === 'loading'\n          ? <FlexCenter><CircularProgress /></FlexCenter>\n          : <>\n            {addModelStatus === 'exists'\n              &&\n              <Typography color='secondary'>\n                Already exists\n              </Typography>}\n            {addModelStatus === 'failed'\n              &&\n              <Typography color='secondary'>\n                Failed to add model\n              </Typography>}\n            <ListItem>\n              <TextField\n                autoFocus\n                fullWidth\n                id='add-model-input'\n                label='Add Model*'\n                value={addModelInput}\n                onChange={handleChangeAddModelInput}\n                autoComplete='off'\n              />\n            </ListItem>\n            <div className={classes.addButtons}>\n              <Button onClick={() => ms.setAddModel(false)}>Cancel</Button>\n              <Button\n                onClick={addModelInput ? handleAddModel : () => { }}\n                disabled={addModelInput ? false : true}\n                color='primary'>\n                Add\n              </Button>\n            </div>\n          </>}\n      </List>\n    </Collapse>\n  );\n}","// react\nimport { useEffect, useState, MutableRefObject, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddModel from './AddModel';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getModels as getModelsService } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface MakeSelectProps {\n  parent: {\n    mounted: MutableRefObject<boolean>;\n    make: IdName;\n    model: IdName;\n    setModel: Set<IdName>;\n  };\n  allowAddModel?: boolean,\n  className?: string,\n  button?: boolean,\n  TextFieldProps?: any,\n  ButtonProps?: any;\n};\nexport default function MakeSelect(props: MakeSelectProps): React.ReactElement {\n  const { delay } = useDemoContext();\n  const {\n    parent,\n    allowAddModel,\n    className,\n    button,\n    TextFieldProps,\n    ButtonProps\n  } = props;\n\n  const {\n    mounted: pMounted,\n    make,\n    model,\n    setModel\n  } = parent;\n\n  const mounted = useCheckMounted();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleModelSelect = (modeltmp = model) => {\n    setModel(modeltmp);\n    setOpen(false);\n  };\n\n  const [models, setModels] = useState<IdName[]>([]);\n  const [getModelsStatus, setGetModelsStatus] = useState<GetRequestStatus>('loading');\n\n  const getModels = useCallback(async () => {\n    setGetModelsStatus('loading');\n    await delay();\n    getModelsService(make.id)\n      .then(result => {\n        mounted.current && result.data && setModels(result.data);\n        mounted.current && setGetModelsStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetModelsStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted, make]\n  );\n\n  useEffect(() => {\n    setModel({ id: '', name: '' });\n    if (make.id) {\n      getModels();\n    };\n  }, [getModels, make.id, setModel]);\n\n  const [addModel, setAddModel] = useState<boolean>(false);\n\n  useEffect(() => {\n    !open && setAddModel(false);\n  }, [open]);\n\n  let dialogContent: JSX.Element;\n\n  switch (getModelsStatus) {\n    case 'loading':\n      dialogContent = <CircularProgress />;\n      break;\n    case 'failed':\n      dialogContent = <Typography>error loading models</Typography>;\n      break;\n    default:\n      dialogContent = (\n        <>\n          <Collapse in={!addModel} timeout='auto' unmountOnExit>\n            <List>\n              <SelectListItem\n                onClick={() => handleModelSelect({ id: '', name: '', })}\n                textVal=''\n                selectCondition={!model.name}\n              />\n              <Divider />\n              {models?.map(modeltmp =>\n                <div key={modeltmp.id}>\n                  <SelectListItem\n                    onClick={() => handleModelSelect(modeltmp)}\n                    textVal={modeltmp.name}\n                    selectCondition={modeltmp.name === model.name}\n                  />\n                  <Divider />\n                </div>)}\n              {allowAddModel &&\n                <AddListItem\n                  onClick={() => setAddModel(true)}\n                  textVal='Add Model'\n                />}\n            </List >\n          </Collapse>\n          {allowAddModel && <AddModel\n            modelSelectParent={{\n              mounted: pMounted,\n              makeId: make.id,\n              setModel: setModel\n            }}\n            modelSelect={{\n              mounted,\n              addModel,\n              setAddModel,\n              setModels,\n              open,\n              setOpen\n            }}\n          />}\n        </>\n      );\n  };\n\n  return (\n    <>\n      <CustomSelect\n        label={button ? 'model' : 'Model*'}\n        id='model-select'\n        value={model.name}\n        setOpen={setOpen}\n        className={className}\n        button={button ? true : false}\n        TextFieldProps={TextFieldProps}\n        ButtonProps={ButtonProps}\n        disabled={make.name ? false : true}\n      />\n      <SelectDialog open={open} setOpen={setOpen}\n        flex={getModelsStatus === 'success' ? false : true}>\n        {dialogContent}\n      </SelectDialog>\n    </>\n  );\n};\n","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addTrim } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme) => ({\n  addButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\ninterface AddTrimProps {\n  trimSelectParent: {\n    mounted: MutableRefObject<boolean>;\n    modelId: string;\n    setTrim: Set<IdName>;\n  };\n  trimSelect: {\n    mounted: MutableRefObject<boolean>;\n    addTrim: boolean;\n    setAddTrim: Set<boolean>;\n    setTrims: Set<IdName[]>;\n    open: boolean;\n    setOpen: Set<boolean>;\n  };\n};\nexport default function AddTrim(props: AddTrimProps): React.ReactElement {\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n\n  const { trimSelectParent: p, trimSelect: ts } = props;\n\n  const mounted = useCheckMounted();\n  const [addTrimStatus, setAddTrimStatus] = useState<PostRequestStatus | ''>('');\n  const [addTrimInput, setAddTrimInput] = useState<string>('');\n\n  const handleChangeAddTrimInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setAddTrimInput(e.target.value.toUpperCase());\n  };\n\n  // we need to create an updated openRef because the ms.open value will get stale within a function\n  const openRef = useRef(ts.open);\n  useEffect(() => {\n    openRef.current = ts.open;\n  }, [ts.open]);\n\n  const handleAddTrim = async () => {\n    setAddTrimStatus('loading');\n    await delay();\n    addTrim(p.modelId, addTrimInput)\n      .then(result => {\n        mounted.current && setAddTrimStatus(result.status as PostRequestStatus);\n        switch (result.status) {\n          case 'success':\n            if (p.mounted.current && openRef.current) {\n              result.patch && p.setTrim(result.patch);\n            }\n            if (ts.mounted.current) {\n              ts.setAddTrim(false);\n              result.data && ts.setTrims(result.data);\n              ts.setOpen(false);\n            }\n            break;\n          default:\n            mounted.current && setAddTrimInput('');\n            break;\n        };\n      }, e => {\n        setAddTrimStatus('failed');\n        console.error(e);\n      });\n  };\n\n  return (\n    <Collapse in={ts.addTrim} timeout='auto' unmountOnExit>\n      <List>\n        {addTrimStatus === 'loading'\n          ? <FlexCenter><CircularProgress /></FlexCenter>\n          : <>\n            {addTrimStatus === 'exists'\n              &&\n              <Typography color='secondary'>\n                Already exists\n              </Typography>}\n            {addTrimStatus === 'failed'\n              &&\n              <Typography color='secondary'>\n                Failed to add trim\n              </Typography>}\n            <ListItem>\n              <TextField\n                autoFocus\n                fullWidth\n                id='add-trim-input'\n                label='Add Trim*'\n                value={addTrimInput}\n                onChange={handleChangeAddTrimInput}\n                autoComplete='off'\n              />\n            </ListItem>\n            <div className={classes.addButtons}>\n              <Button onClick={() => ts.setAddTrim(false)}>Cancel</Button>\n              <Button\n                onClick={addTrimInput ? handleAddTrim : () => { }}\n                disabled={addTrimInput ? false : true}\n                color='primary'>\n                Add\n              </Button>\n            </div>\n          </>}\n      </List>\n    </Collapse>\n  );\n}","// react\nimport { useEffect, useState, MutableRefObject, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddTrim from './AddTrim';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// sevices\nimport { getTrims as getTrimsService } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface TrimSelectProps {\n  parent: {\n    mounted: MutableRefObject<boolean>;\n    make: IdName;\n    model: IdName;\n    trim: IdName;\n    setTrim: Set<IdName>;\n  };\n  allowAddTrim?: boolean;\n  className?: string;\n  button?: boolean;\n  TextFieldProps?: any;\n  ButtonProps?: any;\n};\nexport default function TrimSelect(props: TrimSelectProps): React.ReactElement {\n  const { delay } = useDemoContext();\n  const {\n    parent,\n    allowAddTrim,\n    className,\n    button,\n    TextFieldProps,\n    ButtonProps\n  } = props;\n\n  const {\n    mounted: pMounted,\n    make,\n    model,\n    trim,\n    setTrim\n  } = parent;\n\n  const mounted = useCheckMounted();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleTrimSelect = (trimtmp = trim) => {\n    setTrim(trimtmp);\n    setOpen(false);\n  };\n\n  const [trims, setTrims] = useState<IdName[]>([]);\n  const [getTrimsStatus, setGetTrimsStatus] = useState<GetRequestStatus>('loading');\n\n  const getTrims = useCallback(async () => {\n    setGetTrimsStatus('loading');\n    await delay();\n    getTrimsService(model.id)\n      .then(result => {\n        mounted.current && result.data && setTrims(result.data);\n        mounted.current && setGetTrimsStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetTrimsStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted, model.id]\n  );\n\n  useEffect(() => {\n    setTrim({ id: '', name: '' });\n    if (model.id) {\n      getTrims();\n    };\n  }, [getTrims, setTrim, model.id]);\n\n  const [addTrim, setAddTrim] = useState<boolean>(false);\n\n  useEffect(() => {\n    !open && setAddTrim(false);\n  }, [open]);\n\n  let dialogContent: JSX.Element;\n\n  switch (getTrimsStatus) {\n    case 'loading':\n      dialogContent = <CircularProgress />;\n      break;\n    case 'failed':\n      dialogContent = <Typography>error loading makes</Typography>;\n      break;\n    default:\n      dialogContent = (\n        <>\n          <Collapse in={!addTrim} timeout='auto' unmountOnExit>\n            <List>\n              <SelectListItem\n                onClick={() => handleTrimSelect({ id: '', name: '' })}\n                textVal=''\n                selectCondition={!make.name}\n              />\n              <Divider />\n              {trims.map(trimtmp =>\n                <div key={trimtmp.id}>\n                  <SelectListItem\n                    onClick={() => handleTrimSelect(trimtmp)}\n                    textVal={trimtmp.name}\n                    selectCondition={trimtmp === trim}\n                  />\n                  <Divider />\n                </div>)}\n              {allowAddTrim &&\n                <AddListItem\n                  onClick={() => setAddTrim(true)}\n                  textVal='Add Trim'\n                />}\n            </List >\n          </Collapse>\n          {allowAddTrim && <AddTrim\n            trimSelectParent={{\n              mounted: pMounted,\n              modelId: model.id,\n              setTrim: setTrim,\n            }}\n            trimSelect={{\n              mounted,\n              addTrim,\n              setAddTrim,\n              setTrims,\n              open,\n              setOpen\n            }}\n          />}\n        </>\n      );\n  };\n\n  return (\n    <>\n      <CustomSelect\n        label={button ? 'trim' : 'Trim'}\n        id='trim-select'\n        value={trim.name}\n        setOpen={setOpen}\n        className={className}\n        button={button ? true : false}\n        TextFieldProps={TextFieldProps}\n        ButtonProps={ButtonProps}\n        disabled={model.name ? false : true}\n      />\n      <SelectDialog open={open} setOpen={setOpen}\n        flex={getTrimsStatus === 'success' ? false : true}>\n        {dialogContent}\n      </SelectDialog>\n    </>\n  );\n}","// mui\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexStart } from '../../common/flex';\nimport YearSelect from '../../common/vehicles/YearSelect';\nimport MakeSelect from '../../common/vehicles/MakeSelect';\nimport ModelSelect from '../../common/vehicles/ModelSelect';\nimport TrimSelect from '../../common/vehicles/TrimSelect';\n// types\nimport { VehicleDetailFilterState } from \"../../../types/Vehicle\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    margin: theme.spacing(.5),\n  }\n}));\n\ninterface VehicleDetailFiltersProps {\n  mounted: React.MutableRefObject<boolean>;\n  vehicleDetailFilterState: VehicleDetailFilterState;\n}\nexport default function VehicleDetailFilters(props: VehicleDetailFiltersProps): React.ReactElement {\n  const classes = useStyles();\n  const { mounted, vehicleDetailFilterState } = props;\n  const {\n    yearFilterTmp, setYearFilterTmp,\n    makeFilterTmp, setMakeFilterTmp,\n    modelFilterTmp, setModelFilterTmp,\n    trimFilterTmp, setTrimFilterTmp,\n  } = vehicleDetailFilterState;\n\n  return (\n    <FlexStart flexWrap='wrap'>\n      <YearSelect\n        className={classes.select}\n        year={yearFilterTmp}\n        setYear={setYearFilterTmp}\n        button\n      />\n      <MakeSelect\n        parent={{\n          mounted,\n          make: makeFilterTmp,\n          setMake: setMakeFilterTmp\n        }}\n        className={classes.select}\n        button\n      />\n      <ModelSelect\n        parent={{\n          mounted,\n          make: makeFilterTmp,\n          model: modelFilterTmp,\n          setModel: setModelFilterTmp\n        }}\n        className={classes.select}\n        button\n      />\n      <TrimSelect\n        parent={{\n          mounted,\n          make: makeFilterTmp,\n          model: modelFilterTmp,\n          trim: trimFilterTmp,\n          setTrim: setTrimFilterTmp\n        }}\n        className={classes.select}\n        button\n      />\n    </FlexStart>);\n\n\n}","// react\nimport { useEffect, useState } from 'react';\n// mui\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport { LocalizationProvider } from \"@mui/lab\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport { FormControl } from '@mui/material';\n// THIS PROJECT\n// components\nimport { FlexCenter } from './flex';\n// types\nimport { Set } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n  dialogTitle: {\n    color: theme.titleColor.darkBlue,\n    textAlign: 'center',\n  },\n  datePicker: {\n    margin: theme.spacing(1),\n  }\n}));\n\ninterface DateRangeSelectProps {\n  buttonLabel: string;\n  dialogTitle: string;\n  after: number | null;\n  setAfter: Set<number | null>;\n  before: number | null;\n  setBefore: Set<number | null>;\n  className?: string;\n};\nexport default function DateRangeSelect(props: DateRangeSelectProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { buttonLabel, dialogTitle, after, setAfter, before, setBefore, className } = props;\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n\n  const [afterTmp, setAfterTmp] = useState<number | null>(null);\n  const [beforeTmp, setBeforeTmp] = useState<number | null>(null);\n\n  useEffect(() => {\n    setAfterTmp(after);\n    setBeforeTmp(before);\n  }, [after, before]);\n\n  const clearClick = () => {\n    setAfterTmp(null);\n    setBeforeTmp(null);\n  };\n\n  const okClick = () => {\n    const after = afterTmp ? new Date(afterTmp).getTime() : null;\n    const before = beforeTmp ? new Date(beforeTmp).getTime() : null;\n    setAfter(after);\n    setBefore(before);\n    setOpenDialog(false);\n  };\n\n  return (\n    <>\n      <Button\n        className={className}\n        startIcon={<DateRangeIcon />}\n        size='small'\n        variant='outlined'\n        onClick={() => { openDialog ? setOpenDialog(false) : setOpenDialog(true); }}\n        color={(after || before) ? 'primary' : 'inherit'}\n      >\n        {buttonLabel}\n      </Button>\n      <Dialog open={openDialog} aria-labelledby='date-range-select'>\n        <DialogTitle className={classes.dialogTitle}>{dialogTitle}</DialogTitle>\n        <DialogContent>\n          <LocalizationProvider dateAdapter={AdapterDateFns}>\n            <FlexCenter flexDirection='column'>\n              <FormControl className={classes.datePicker}>\n                <DatePicker\n                  clearable\n                  label='Start Date'\n                  value={afterTmp}\n                  onChange={(newValue) => setAfterTmp(newValue)}\n                  renderInput={(params) => <TextField {...params} />}\n                />\n              </FormControl>\n              <FormControl className={classes.datePicker}>\n                <DatePicker\n                  clearable\n                  label='End Date'\n                  value={beforeTmp}\n                  onChange={(newValue) => setBeforeTmp(newValue)}\n                  renderInput={(params) => <TextField {...params} />}\n                  minDate={afterTmp}\n                />\n              </FormControl>\n            </FlexCenter>\n          </LocalizationProvider>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            size='large'\n            onClick={clearClick}\n          >\n            CLEAR\n          </Button>\n          <Button\n            size='large'\n            onClick={okClick}\n          >\n            OK\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n\n}\n\n","// THIS PROJECT\nimport DateRangeSelect from '../DateRangeSelect';\n// components\nimport { Set } from '../../../types/misc';\n\ninterface DateAddedSelectProps {\n  after: number | null;\n  setAfter: Set<number | null>;\n  before: number | null;\n  setBefore: Set<number | null>;\n  className?: string;\n}\nexport default function DateAddedSelect(props: DateAddedSelectProps): React.ReactElement {\n  const { after, setAfter, before, setBefore, className } = props;\n\n  const afterDate = after && new Date(after).toLocaleDateString();\n  const beforeDate = before && new Date(before).toLocaleDateString();\n\n  const buttonLabel = (after && before)\n    ? `Added: ${afterDate} to ${beforeDate}`\n    : after\n      ? `Added: after ${afterDate}`\n      : before\n        ? `Added: before ${beforeDate}`\n        : 'Date Added';\n\n  return (\n    <DateRangeSelect\n      buttonLabel={buttonLabel}\n      dialogTitle='Select Date Added Range'\n      after={after}\n      setAfter={setAfter}\n      before={before}\n      setBefore={setBefore}\n      className={className}\n    />\n  );\n}","// THIS PROJECT\nimport DateRangeSelect from '../DateRangeSelect';\n// components\n// components\nimport { Set } from '../../../types/misc';\n\ninterface DateAddedSelectProps {\n  after: number | null;\n  setAfter: Set<number | null>;\n  before: number | null;\n  setBefore: Set<number | null>;\n  className?: string;\n}\nexport default function DateAddedSelect(props: DateAddedSelectProps): React.ReactElement {\n  const { after, setAfter, before, setBefore, className } = props;\n\n  const afterDate = after && new Date(after).toLocaleDateString();\n  const beforeDate = before && new Date(before).toLocaleDateString();\n\n  const buttonLabel = (after && before)\n    ? `Sold: ${afterDate} to ${beforeDate}`\n    : after\n      ? `Sold: after ${afterDate}`\n      : before\n        ? `Sold: before ${beforeDate}`\n        : 'Date Sold';\n\n  return (\n    <DateRangeSelect\n      buttonLabel={buttonLabel}\n      dialogTitle='Select Date Sold Range'\n      after={after}\n      setAfter={setAfter}\n      before={before}\n      setBefore={setBefore}\n      className={className}\n    />\n  );\n}","// mui\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexStart } from '../../common/flex';\nimport DateAddedSelect from '../../common/vehicles/DateAddedSelect';\nimport DateSoldSelect from '../../common/vehicles/DateSoldSelect';\n// hooks\nimport { useVehiclePage } from '../../../hooks';\n// types\nimport { DateRangeFilterState } from \"../../../types/Vehicle\";\n\nconst useStyles = makeStyles((theme) => ({\n  select: {\n    margin: theme.spacing(.5),\n  }\n}));\n\ninterface DateRangeFiltersProps {\n  dateRangeFilterState: DateRangeFilterState;\n}\nexport default function DateRangeFilters(props: DateRangeFiltersProps): React.ReactElement {\n  const classes = useStyles();\n  const { statusParam } = useVehiclePage();\n  const {\n    addedAfterFilterTmp, setAddedAfterFilterTmp,\n    addedBeforeFilterTmp, setAddedBeforeFilterTmp,\n    soldAfterFilterTmp, setSoldAfterFilterTmp,\n    soldBeforeFilterTmp, setSoldBeforeFilterTmp,\n  } = props.dateRangeFilterState;\n\n  return (\n    <FlexStart flexWrap='wrap'>\n      <DateAddedSelect\n        after={addedAfterFilterTmp}\n        setAfter={setAddedAfterFilterTmp}\n        before={addedBeforeFilterTmp}\n        setBefore={setAddedBeforeFilterTmp}\n        className={classes.select}\n      />\n      {statusParam === 'sold' &&\n        <DateSoldSelect\n          after={soldAfterFilterTmp}\n          setAfter={setSoldAfterFilterTmp}\n          before={soldBeforeFilterTmp}\n          setBefore={setSoldBeforeFilterTmp}\n          className={classes.select}\n        />\n      }\n    </FlexStart>\n  );\n}","// mui\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// THIS PROJECT\n// types\nimport { Set } from '../../../types/misc';\n\ninterface ShowForSaleFilterProps {\n  showForSaleTmp: boolean;\n  setShowForSaleTmp: Set<boolean>;\n}\nexport default function ShowForSaleFilter(props: ShowForSaleFilterProps): React.ReactElement {\n  const { showForSaleTmp, setShowForSaleTmp } = props;\n\n  return (\n    <FormControlLabel\n      control={\n        <Checkbox\n          size='small'\n          checked={showForSaleTmp}\n          onChange={() => showForSaleTmp ? setShowForSaleTmp(false) : setShowForSaleTmp(true)}\n        />\n      }\n      label={`Show \"For Sale\" Vehicles`}\n      sx={{\n        margin: 0,\n        '& .MuiFormControlLabel-label': {\n          color: showForSaleTmp ? 'primary.main' : 'black',\n          fontSize: 14\n        }\n      }}\n    />\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { FlexEnd, FlexSpaceBtwn } from '../../common/flex';\nimport VehicleDetailFilters from './VehicleDetailFilters';\nimport DateRangeFilters from './DateRangeFilters';\nimport ShowForSaleFilter from './ShowForSaleFilter';\n// hooks\nimport { useVehiclePage, useQuery } from '../../../hooks';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { DateRangeFilterState, VehicleDetailFilterState } from '../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n  filterActions: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\ninterface VehicleListFiltersProps {\n  mounted: React.MutableRefObject<boolean>;\n  setViewFilters: Set<boolean>;\n  setFilterCount: Set<number>;\n};\nexport default function VehicleListFilters(props: VehicleListFiltersProps): React.ReactElement {\n  const classes = useStyles();\n  const history = useHistory();\n\n  const { statusParam, sortParam, perPageParam } = useVehiclePage();\n  const { mounted, setViewFilters, setFilterCount } = props;\n\n  // UI STATE\n  // vehicle details\n  const [yearFilterTmp, setYearFilterTmp] = useState<string>('');\n  const [makeFilterTmp, setMakeFilterTmp] = useState<IdName>({ id: '', name: '' });\n  const [modelFilterTmp, setModelFilterTmp] = useState<IdName>({ id: '', name: '' });\n  const [trimFilterTmp, setTrimFilterTmp] = useState<IdName>({ id: '', name: '' });\n  // date ranges\n  const [addedAfterFilterTmp, setAddedAfterFilterTmp] = useState<number | null>(null);\n  const [addedBeforeFilterTmp, setAddedBeforeFilterTmp] = useState<number | null>(null);\n  const [soldAfterFilterTmp, setSoldAfterFilterTmp] = useState<number | null>(null);\n  const [soldBeforeFilterTmp, setSoldBeforeFilterTmp] = useState<number | null>(null);\n  // show 'For Sale'\n  const [showForSaleTmp, setShowForSaleTmp] = useState<boolean>(false);\n\n  // APPLIED FILTERS STATE\n  // vehicle details\n  const [yearFilter, setYearFilter] = useState<string>('');\n  const [makeFilter, setMakeFilter] = useState<IdName>({ id: '', name: '' });\n  const [modelFilter, setModelFilter] = useState<IdName>({ id: '', name: '' });\n  const [trimFilter, setTrimFilter] = useState<IdName>({ id: '', name: '' });\n  // date ranges\n  const [addedAfterFilter, setAddedAfterFilter] = useState<number | null>(null);\n  const [addedBeforeFilter, setAddedBeforeFilter] = useState<number | null>(null);\n  const [soldAfterFilter, setSoldAfterFilter] = useState<number | null>(null);\n  const [soldBeforeFilter, setSoldBeforeFilter] = useState<number | null>(null);\n  // show 'For Sale'\n  const [showForSale, setShowForSale] = useState<boolean>(false);\n\n  // SETTING FILTERS IN THE UI ON REFRESH\n  // utilizing the query string at th end of the url\n  const query = useQuery();\n  // vehicle details\n  const yearQuery = query.get('year');\n  const makeQuery = query.get('make');\n  const modelQuery = query.get('model');\n  const trimQuery = query.get('trim');\n  // date ranges\n  const addedAfterQuery = query.get('addedAfter');\n  const addedBeforeQuery = query.get('addedBefore');\n  const soldAfterQuery = query.get('soldAfter');\n  const soldBeforeQuery = query.get('soldBefore');\n  // show 'For Sale'\n  const showForSaleQuery = query.get('forSale');\n\n  // set filters values based on queries\n  useEffect(() => {\n    yearQuery ? setYearFilterTmp(yearQuery) : setYearFilterTmp('');\n    yearQuery ? setYearFilter(yearQuery) : setYearFilter('');\n\n    const makeTmp = makeQuery ? makeQuery.split('-') : ['', ''];\n    setMakeFilterTmp({ id: makeTmp[1], name: makeTmp[0] });\n    setMakeFilter({ id: makeTmp[1], name: makeTmp[0] });\n\n    const modelTmp = modelQuery ? modelQuery.split('-') : ['', ''];\n    setModelFilterTmp({ id: modelTmp[1], name: modelTmp[0] });\n    setModelFilter({ id: modelTmp[1], name: modelTmp[0] });\n\n    addedAfterQuery ? setAddedAfterFilterTmp(parseFloat(addedAfterQuery)) : setAddedAfterFilterTmp(null);\n    addedAfterQuery ? setAddedAfterFilter(parseFloat(addedAfterQuery)) : setAddedAfterFilter(null);\n\n    addedBeforeQuery ? setAddedBeforeFilterTmp(parseFloat(addedBeforeQuery)) : setAddedBeforeFilterTmp(null);\n    addedBeforeQuery ? setAddedBeforeFilter(parseFloat(addedBeforeQuery)) : setAddedBeforeFilter(null);\n\n    soldAfterQuery ? setSoldAfterFilterTmp(parseFloat(soldAfterQuery)) : setSoldAfterFilterTmp(null);\n    soldAfterQuery ? setSoldAfterFilter(parseFloat(soldAfterQuery)) : setSoldAfterFilter(null);\n\n    soldBeforeQuery ? setSoldBeforeFilterTmp(parseFloat(soldBeforeQuery)) : setSoldBeforeFilterTmp(null);\n    soldBeforeQuery ? setSoldBeforeFilter(parseFloat(soldBeforeQuery)) : setSoldBeforeFilter(null);\n\n    const showForSaleQueryTmp = showForSaleQuery === 'true' ? true : false;\n    setShowForSaleTmp(showForSaleQueryTmp);\n    setShowForSale(showForSaleQueryTmp);\n  }, [yearQuery, makeQuery, modelQuery, trimQuery, addedAfterQuery, addedBeforeQuery, soldAfterQuery, soldBeforeQuery, showForSaleQuery]);\n\n  // have to 'step through' make filter before setting model filter because make filter clears model filter when it is set\n  useEffect(() => {\n    const modelTmp = modelQuery ? modelQuery.split('-') : ['', ''];\n    setModelFilterTmp({ id: modelTmp[1], name: modelTmp[0] });\n    setModelFilter({ id: modelTmp[1], name: modelTmp[0] });\n  }, [makeFilter, modelQuery]);\n\n  // have to 'step through' model filter before setting trim filter because model filter clears trim filter when it is set\n  useEffect(() => {\n    const trimTmp = trimQuery ? trimQuery.split('-') : ['', ''];\n    setTrimFilterTmp({ id: trimTmp[1], name: trimTmp[0] });\n    setTrimFilter({ id: trimTmp[1], name: trimTmp[0] });\n  }, [modelFilter, trimQuery]);\n\n  // ^^ SETTING FILTERS IN THE UI ON REFRESH ^^\n\n  const removeFiltersClick = () => {\n    // vehicle details\n    setYearFilter(''); setYearFilterTmp('');\n    setMakeFilter({ id: '', name: '' }); setMakeFilterTmp({ id: '', name: '' });\n    setModelFilter({ id: '', name: '' }); setModelFilterTmp({ id: '', name: '' });\n    setTrimFilter({ id: '', name: '' }); setTrimFilterTmp({ id: '', name: '' });\n    // date ranges\n    setAddedAfterFilter(null); setAddedAfterFilterTmp(null);\n    setAddedBeforeFilter(null); setAddedBeforeFilterTmp(null);\n    setSoldAfterFilter(null); setSoldAfterFilterTmp(null);\n    setSoldBeforeFilter(null); setSoldBeforeFilterTmp(null);\n    // show 'For Sale'\n    setShowForSale(false); setShowForSaleTmp(false);\n\n    setViewFilters(false);\n    history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/first/0`);\n  };\n\n  const applyFiltersClick = () => {\n    // sync filterTmps with filters\n    // vehicle details\n    setYearFilter(yearFilterTmp);\n    setMakeFilter(makeFilterTmp);\n    setModelFilter(modelFilterTmp);\n    setTrimFilter(trimFilterTmp);\n    // date ranges\n    setAddedAfterFilter(addedAfterFilterTmp);\n    setAddedBeforeFilter(addedBeforeFilterTmp);\n    setSoldAfterFilter(soldAfterFilterTmp);\n    setSoldBeforeFilter(soldBeforeFilterTmp);\n    // show 'For Sale'\n    setViewFilters(false);\n\n    // create our query string to append to the end of our url, and then push to that url\n    const queries = [];\n    // vehicle details\n    yearFilterTmp && queries.push(`year=${yearFilterTmp}`);\n    makeFilterTmp.id && queries.push(`make=${makeFilterTmp.name}-${makeFilterTmp.id}`);\n    modelFilterTmp.id && queries.push(`model=${modelFilterTmp.name}-${modelFilterTmp.id}`);\n    trimFilterTmp.id && queries.push(`trim=${trimFilterTmp.name}-${trimFilterTmp.id}`);\n    // date ranges\n    addedAfterFilterTmp && queries.push(`addedAfter=${addedAfterFilterTmp}`);\n    addedBeforeFilterTmp && queries.push(`addedBefore=${addedBeforeFilterTmp}`);\n    soldAfterFilterTmp && queries.push(`soldAfter=${soldAfterFilterTmp}`);\n    soldBeforeFilterTmp && queries.push(`soldBefore=${soldBeforeFilterTmp}`);\n    // show 'For Sale'\n    showForSaleTmp && queries.push(`forSale=${showForSaleTmp}`);\n\n    const queryString = `${queries.join('&')}`;\n    history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/first/0?${queryString}`);\n  };\n\n  const disableApplyFilters = (\n    yearFilter === yearFilterTmp &&\n    makeFilter.id === makeFilterTmp.id &&\n    modelFilter.id === modelFilterTmp.id &&\n    trimFilter.id === trimFilterTmp.id &&\n    addedAfterFilterTmp === addedAfterFilter &&\n    addedBeforeFilterTmp === addedBeforeFilter &&\n    soldAfterFilterTmp === soldAfterFilter &&\n    soldBeforeFilterTmp === soldBeforeFilter &&\n    showForSaleTmp === showForSale\n  );\n\n  // GET THE FILTER COUNT\n  useEffect(() => {\n    let value: number = 0;\n    // vehicle detail filters\n    yearFilter !== '' && value++;\n    const calculate = (filter: IdName) => filter.name !== '' && value++;\n    [makeFilter, modelFilter, trimFilter].forEach(filter => calculate(filter));\n    // date range filters\n    (addedAfterFilter || addedBeforeFilter) && value++;\n    (soldAfterFilter || soldBeforeFilter) && value++;\n    // show 'For Sale'\n    showForSale && value++;\n\n    setFilterCount(value);\n  }, [yearFilter, makeFilter, modelFilter, trimFilter, addedAfterFilter, addedBeforeFilter, soldAfterFilter, soldBeforeFilter, showForSale, setFilterCount]);\n\n  // CHILD STATE OBJECTS\n  const vehicleDetailFilterState: VehicleDetailFilterState = {\n    yearFilterTmp, setYearFilterTmp,\n    makeFilterTmp, setMakeFilterTmp,\n    modelFilterTmp, setModelFilterTmp,\n    trimFilterTmp, setTrimFilterTmp,\n  };\n\n  const dateRangeFilterState: DateRangeFilterState = {\n    addedAfterFilterTmp, setAddedAfterFilterTmp,\n    addedBeforeFilterTmp, setAddedBeforeFilterTmp,\n    soldAfterFilterTmp, setSoldAfterFilterTmp,\n    soldBeforeFilterTmp, setSoldBeforeFilterTmp,\n  };\n\n  return (\n    <>\n      <FlexSpaceBtwn flexWrap='wrap'>\n        <VehicleDetailFilters\n          mounted={mounted}\n          vehicleDetailFilterState={vehicleDetailFilterState}\n        />\n        <DateRangeFilters dateRangeFilterState={dateRangeFilterState} />\n        {statusParam === 'active'\n          && <ShowForSaleFilter\n            showForSaleTmp={showForSaleTmp}\n            setShowForSaleTmp={setShowForSaleTmp}\n          />}\n      </FlexSpaceBtwn>\n      <FlexEnd className={classes.filterActions}>\n        <Button\n          onClick={removeFiltersClick}\n        >\n          REMOVE FILTERS\n        </Button>\n        <Button\n          onClick={applyFiltersClick}\n          disabled={disableApplyFilters}\n          color='primary'\n        >\n          APPLY FILTERS\n        </Button>\n      </FlexEnd>\n    </>\n  );\n}","// material-ui\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Skeleton from '@mui/material/Skeleton';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n  skeleton: {\n    width: '100%',\n  },\n});\n\ninterface LoadingListProps {\n  skeletonCount: number;\n};\nexport default function LoadingList(props: LoadingListProps): React.ReactElement {\n  const classes = useStyles();\n\n  const list: JSX.Element[] = [];\n\n  for (let i = 0; i < props.skeletonCount; i++) {\n    list.push(\n      <ListItem key={i}>\n        <Skeleton className={classes.skeleton} variant='text' />\n      </ListItem>\n    );\n  };\n  return (\n    <List>\n      {list.map(skeleton => skeleton)}\n    </List>\n  );\n};\n","import { styled } from '@mui/system';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nconst VehicleListItemButton = styled(ListItemButton)(({ theme }) => ({\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n  padding: 0,\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nexport default VehicleListItemButton;","// material-ui\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\nconst useStyles = makeStyles(theme => ({\n  textContainer: {\n    width: '60%',\n  },\n  stockLi: {\n    fontSize: 12,\n    color: 'black',\n  },\n  vehicleTextLi: {\n    width: '100%',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    fontSize: 14,\n    color: 'black',\n  },\n  stock: {\n    fontSize: 16,\n    color: 'black',\n  },\n  vehicleText: {\n    color: theme.titleColor.darkBlue,\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n}));\n\ninterface VehicleInfoProps {\n  vehicle: DetailedVehicle;\n  variant?: any;\n  listItem?: boolean;\n};\nexport default function VehicleInfo(props: VehicleInfoProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicle, variant, listItem } = props;\n  const { stock, year, make, model, trim } = vehicle;\n\n  if (listItem) {\n    return (\n      <div className={classes.textContainer}>\n        <ListItemText>\n          <span className={classes.stockLi}>stk#:{stock > 0 && stock}</span>\n          <br></br>\n          <div className={classes.vehicleTextLi}>{year} {make.name} {model.name} {trim.name}</div>\n        </ListItemText>\n      </div>\n    );\n  };\n\n  return (\n    <div>\n      <Typography variant={variant ? variant : 'body1'}>\n        <span className={classes.stock} style={{ fontSize: 14 }}>stk#:{stock > 0 && stock}</span>\n        <br></br>\n        <div className={classes.vehicleText}> {year} {make.name} {model.name} {trim.name}</div>\n      </Typography>\n    </div>\n  );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\n\nconst VehicleChipGroup = styled('div')({\n  float: 'right',\n  height: '90%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'flex-end',\n  flexDirection: 'column',\n  width: 'clamp(100px, 35%, 150px)',\n});\n\nexport default VehicleChipGroup;","// material-ui\nimport Chip from '@mui/material/Chip';\nimport { styled } from '@mui/material/styles';\n\nconst VehicleChip = styled(Chip)(({\n  theme\n}) => ({\n  margin: theme.spacing(.25),\n  width: '100%',\n}));\n\nexport default VehicleChip;","// material-ui\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../../common/vehicles/VehicleListItemButton';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../../common/vehicles/VehicleChipGroup';\nimport VehicleChip from '../../common/vehicles/VehicleChip';\n// hooks\nimport { useAuthContext } from '../../../contexts/AuthContext';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\ninterface ActiveVehicleProps {\n  vehicle: DetailedVehicle;\n  onClick: () => void;\n  className?: string;\n};\nexport default function ActiveVehicle(props: ActiveVehicleProps): React.ReactElement {\n  const { vehicle, onClick, className } = props;\n  const { currentStage } = vehicle;\n  const { stage, personPlace, status } = currentStage;\n  const { userPreferences } = useAuthContext();\n  const { defaultStageAssignment } = userPreferences;\n  const { stage: defaultStage, personPlace: defaultPersonPlace } = defaultStageAssignment;\n\n  return (\n    <>\n      <VehicleListItemButton className={className ? className : ''} onClick={onClick}>\n        <VehicleInfo vehicle={vehicle} listItem />\n        <VehicleChipGroup>\n          {stage.name === 'Assign'\n            ? <VehicleChip size='small' label={stage.name} color='secondary' />\n            : status === 'complete'\n              ? <VehicleChip size='small' label={defaultStage.name} color='secondary' />\n              : <VehicleChip size='small' label={stage.name} color='primary' />\n          }\n          {status === 'complete'\n            ? <VehicleChip size='small' label={defaultPersonPlace.name} />\n            : <VehicleChip size='small' label={personPlace.name} />}\n        </VehicleChipGroup>\n      </VehicleListItemButton>\n      <Divider />\n    </>\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Typography from '@mui/material/Typography';\n\n\nconst useStyles = makeStyles({\n  timeDifferenceLabel: {\n    fontSize: 10,\n  },\n});\n\ninterface FormatTimeProps {\n  milliseconds: number;\n  color?: 'primary' | 'secondary';\n};\nexport default function FormatTime(props: FormatTimeProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { milliseconds, color } = props;\n\n  if (milliseconds < (1000 * 60)) {\n    return (\n      <Typography color={color ? color : 'inherit'}>\n        {Math.round(milliseconds / 1000)} <span className={classes.timeDifferenceLabel}> secs</span>\n      </Typography>\n    );\n  } else if (milliseconds < (1000 * 60 * 60)) {\n    return (\n      <Typography color={color ? color : 'inherit'}>\n        {Math.round(milliseconds / (1000 * 60))} <span className={classes.timeDifferenceLabel}> mins</span>\n      </Typography>\n    );\n  } else if (milliseconds < (1000 * 60 * 60 * 24)) {\n    return (\n      <Typography color={color ? color : 'inherit'}>\n        {Math.round(milliseconds / (1000 * 60 * 60))} <span className={classes.timeDifferenceLabel}> hrs</span>\n      </Typography>\n    );\n  } else {\n    return (\n      // round days to one decimal point\n      <Typography color={color ? color : 'inherit'}>\n        {Math.round(milliseconds / (1000 * 60 * 60 * 24) * 10) / 10} <span className={classes.timeDifferenceLabel}> days</span>\n      </Typography>\n    );\n  };\n}","// material-ui\nimport { styled } from '@mui/material/styles';\n// THIS PROJECT\n// components\nimport VehicleChip from './VehicleChip';\n\nconst SoldVehicleChip = styled(VehicleChip)(({\n  theme\n}) => ({\n  backgroundColor: theme.palette.success.main,\n  color: theme.palette.success.contrastText\n}));\n\nexport default SoldVehicleChip;","// material-ui\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../../common/vehicles/VehicleListItemButton';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\nimport FormatTime from '../../common/FormatTime';\nimport VehicleChipGroup from '../../common/vehicles/VehicleChipGroup';\nimport SoldVehicleChip from '../../common/vehicles/SoldVehicleChip';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\ninterface SoldVehicleProps {\n  vehicle: DetailedVehicle;\n  onClick: () => void;\n  className?: string;\n};\nexport default function SoldVehicle(props: SoldVehicleProps): React.ReactElement {\n  const { vehicle, onClick, className } = props;\n  const { totalSellTime } = vehicle;\n\n  return (\n    <>\n      <VehicleListItemButton className={className ? className : ''} onClick={onClick}>\n        <VehicleInfo vehicle={vehicle} listItem />\n        <VehicleChipGroup>\n          <SoldVehicleChip size='small' label={totalSellTime && <FormatTime milliseconds={totalSellTime} />} />\n        </VehicleChipGroup>\n      </VehicleListItemButton>\n      <Divider />\n    </>\n  );\n}","import { styled } from '@mui/system';\nimport ListItem from '@mui/material/ListItem';\n\nconst VehicleListItem = styled(ListItem)(({ theme }) => ({\n  marginTop: theme.spacing(1),\n  marginBottom: theme.spacing(1),\n  padding: 0,\n  display: 'flex',\n  justifyContent: 'space-between'\n}));\n\nexport default VehicleListItem;","// react\nimport { useState, useEffect } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport CircularProgress from '@mui/material/CircularProgress';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../../common/flex';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { deleteVehicle as deleteVehicleService } from '../../../services/vehicles';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.titleColor.darkBlue,\n  },\n  dialog: {\n    padding: 10,\n    textAlign: 'center',\n    maxWidth: 500,\n  },\n}));\n\nexport interface DeleteVehicleDialogProps {\n  open: boolean;\n  onClose: () => void;\n  vehicle: DetailedVehicle;\n  getVehicles: () => void;\n};\nexport default function DeleteVehicleDialog(props: DeleteVehicleDialogProps): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { onClose, open, vehicle, getVehicles } = props;\n  const { id } = vehicle;\n\n  const [deleteVehicleStatus, setDeleteVehicleStatus] = useState<PostRequestStatus>('');\n\n  const deleteVehicle = async () => {\n    setDeleteVehicleStatus('loading');\n    await delay();\n    deleteVehicleService(id)\n      .then(result => {\n        mounted.current && setDeleteVehicleStatus(result.status as PostRequestStatus);\n        getVehicles();\n      }, e => {\n        mounted.current && setDeleteVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  // CLOSE DIALOG WHEN SUCCESSFULLY DELETED\n  useEffect(() => {\n    if (deleteVehicleStatus === 'success') onClose();\n  }, [onClose, deleteVehicleStatus]);\n\n  let buttons: JSX.Element;\n\n  if (deleteVehicleStatus === 'loading') {\n    buttons = (\n      <CircularProgress />\n    );\n  } else if (deleteVehicleStatus === 'failed') {\n    buttons = (\n      <>\n        <p>Failed to delete vehicle</p>\n        <ButtonGroup>\n          <Button onClick={onClose} >cancel</Button>\n          <Button\n            variant='outlined'\n            color='secondary'\n            onClick={deleteVehicle}\n          >\n            try again\n          </Button>\n        </ButtonGroup>\n      </>\n    );\n  } else {\n    buttons = (\n      <ButtonGroup>\n        <Button onClick={onClose} >cancel</Button>\n        <Button\n          variant='outlined'\n          color='secondary'\n          onClick={deleteVehicle}\n        >\n          yes, delete\n        </Button>\n      </ButtonGroup>\n    );\n  };\n\n  return (\n    <Dialog\n      onClose={onClose}\n      aria-labelledby=\"delete-vehicle-dialog\"\n      open={open}\n      disableEscapeKeyDown>\n      <div className={classes.dialog}>\n        <DialogTitle id=\"add-vehicle-dialog\" className={classes.title}>Delete Permanently?</DialogTitle>\n        <FlexCenter>\n          <VehicleInfo vehicle={vehicle} variant='subtitle1' />\n        </FlexCenter>\n        <br></br>\n        <Divider />\n        <br></br>\n        {buttons}\n      </div>\n    </Dialog >\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui;\nimport Button from '@mui/material/Button';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Divider from '@mui/material/Divider';\nimport { CircularProgress } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport VehicleListItem from '../../common/vehicles/VehicleListItem';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../../common/vehicles/VehicleChipGroup';\nimport DeleteVehicleDialog from './DeleteVehicleDialog';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { updateVehicle } from '../../../services/vehicles';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles(theme => ({\n  trashButtons: {\n    margin: theme.spacing(.25),\n    width: '100%',\n  },\n}));\n\ninterface TrashedVehicleProps {\n  vehicle: DetailedVehicle;\n  getVehicles: () => void;\n  className?: string;\n};\nexport default function TrashedVehicle(props: TrashedVehicleProps): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { vehicle, getVehicles, className } = props;\n\n  const [updateVehicleStatus, setUpdateVehicleStatus] = useState<PostRequestStatus>('');\n\n  // Activate vehicle\n  const activateVehicle = async () => {\n    setUpdateVehicleStatus('loading');\n    await delay();\n    updateVehicle(vehicle.id, { 'status': 'active' })\n      .then(result => {\n        mounted.current && setUpdateVehicleStatus(result.status as PostRequestStatus);\n        getVehicles();\n      }, e => {\n        mounted.current && setUpdateVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  // Delete vehicle\n  const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n  const toggleDeleteDialog = () =>\n    openDeleteDialog ? setOpenDeleteDialog(false) : setOpenDeleteDialog(true);\n\n  return (\n    <>\n      <VehicleListItem className={className ? className : ''}>\n        <VehicleInfo vehicle={vehicle} listItem />\n        <VehicleChipGroup>\n          {updateVehicleStatus === 'loading'\n            ? <CircularProgress size={25} />\n            : <>\n              <Button\n                className={classes.trashButtons}\n                size='small'\n                variant='outlined'\n                color='primary'\n                onClick={activateVehicle}\n              >\n                Activate\n              </Button>\n              <Button className={classes.trashButtons}\n                size='small'\n                variant='outlined'\n                color='secondary'\n                startIcon={<DeleteForeverIcon />}\n                onClick={toggleDeleteDialog}\n              >\n                Delete\n              </Button>\n              <DeleteVehicleDialog\n                open={openDeleteDialog}\n                onClose={toggleDeleteDialog}\n                vehicle={vehicle}\n                getVehicles={getVehicles}\n              />\n            </>\n          }\n        </VehicleChipGroup>\n      </VehicleListItem>\n      <Divider />\n    </>\n  );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// THIS PROJECT\n// components\nimport ActiveVehicle from './ActiveVehicle';\nimport SoldVehicle from './SoldVehicle';\nimport TrashedVehicle from './TrashedVehicle';\n// hooks\nimport { useQuery, useVehiclePage } from '../../../hooks';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\ninterface VehicleSummaryProps {\n  vehicle: DetailedVehicle;\n  getVehicles: () => void;\n};\nexport default function VehicleSummary(props: VehicleSummaryProps): React.ReactElement {\n  const history = useHistory();\n  const { vehicle, getVehicles } = props;\n  const { status } = vehicle;\n\n  const { statusParam, sortParam, perPageParam, pageParam, compareParam } = useVehiclePage();\n  const queryString = useQuery().toString();\n\n  const vehicleClick = () =>\n    history.push(`/vehicle-details/id/${vehicle.id}/stage?prev=/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/${pageParam}/${compareParam}?${queryString}`);\n\n  switch (status) {\n    case 'active':\n      return <ActiveVehicle vehicle={vehicle} onClick={vehicleClick} />;\n    case 'sold':\n      return <SoldVehicle vehicle={vehicle} onClick={vehicleClick} />;\n    case 'trash':\n      return <TrashedVehicle vehicle={vehicle} getVehicles={getVehicles} />;\n  };\n}","// react-router-dom\nimport { useHistory } from 'react-router';\n// material-ui\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\n// hooks\nimport { useVehiclePage, useQuery } from '../../hooks';\n// types\nimport { VehiclePage } from '../../types/Vehicle';\n\ninterface ListNavigationProps {\n  vehiclePage: VehiclePage;\n}\nexport default function ListNavigation(props: ListNavigationProps): React.ReactElement {\n  const history = useHistory();\n  const { vehiclePage } = props;\n  const { docStartNumber, docEndNumber, totalDocs, vehicles } = vehiclePage;\n  const dateAddedValues: number[] = [];\n  vehicles.forEach(vehicle => dateAddedValues.push(vehicle.dateAdded));\n  const maxDateAdded = Math.max(...dateAddedValues);\n  const minDateAdded = Math.min(...dateAddedValues);\n\n  const { statusParam, sortParam, perPageParam, pageParam } = useVehiclePage();\n  const query = useQuery().toString();\n\n  const firstPageClick = () => {\n    docStartNumber !== 1\n      && history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/first/0?${query}`);\n  };\n\n  const prevPageClick = () => {\n    docStartNumber !== 1 && sortParam === 'asc'\n      ? history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/prev/${minDateAdded}?${query}`)\n      : history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/prev/${maxDateAdded}?${query}`);\n  };\n\n  const nextPageClick = () => {\n    docEndNumber !== totalDocs && sortParam === 'asc'\n      ? history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/next/${maxDateAdded}?${query}`)\n      : history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/next/${minDateAdded}?${query}`);\n  };\n\n  const lastPageClick = () => {\n    pageParam !== 'last'\n      && history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/last/0?${query}`);\n  };\n\n  if (totalDocs > parseInt(perPageParam)) {\n    return (\n      <FlexCenter>\n        <IconButton\n          aria-label='first-page'\n          onClick={firstPageClick}\n          disabled={docStartNumber === 1}\n          size=\"large\">\n          <FirstPageIcon />\n        </IconButton>\n        <IconButton\n          aria-label='previous-page'\n          onClick={prevPageClick}\n          disabled={docStartNumber === 1}\n          size=\"large\">\n          <NavigateBeforeIcon />\n        </IconButton>\n        <Typography align='center'>({docStartNumber.toLocaleString()}-{docEndNumber.toLocaleString()}) / {totalDocs.toLocaleString()}</Typography>\n        <IconButton\n          aria-label='next-page'\n          onClick={nextPageClick}\n          disabled={docEndNumber === totalDocs}\n          size=\"large\">\n          <NavigateNextIcon />\n        </IconButton>\n        <IconButton\n          aria-label='last-page'\n          onClick={lastPageClick}\n          disabled={docEndNumber === totalDocs}\n          size=\"large\">\n          <LastPageIcon />\n        </IconButton>\n      </FlexCenter>\n    );\n  } else {\n    return <></>;\n  }\n}","// material-ui\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport VehicleSummary from './vehicleSummary/VehicleSummary';\nimport ListNavigation from './ListNavigation';\n// types\nimport { VehicleListState } from '../../types/Vehicle';\n\ninterface VehicleListProps {\n  vehicleListState: VehicleListState;\n  getVehicles: () => void;\n};\nexport default function VehicleList(props: VehicleListProps): React.ReactElement {\n  const { vehicleListState, getVehicles } = props;\n  const { vehiclePage, getVehiclesStatus } = vehicleListState;\n\n  let list: JSX.Element;\n  switch (getVehiclesStatus) {\n    case 'failed':\n      list = <CenteredError errorMessage='Error loading vehicles' retryAction={() => window.location.reload()} />;\n      break;\n    case 'loading':\n      list = <LoadingList skeletonCount={20} />;\n      break;\n    default:\n      list = (\n        <>\n          <List>\n            {vehiclePage.vehicles.map(vehicle => {\n              if (vehicle.id) {\n                return <VehicleSummary\n                  key={vehicle.id}\n                  vehicle={vehicle}\n                  getVehicles={getVehicles}\n                />;\n              } else {\n                return <></>;\n              }\n\n            })}\n          </List>\n          <ListNavigation vehiclePage={vehicleListState.vehiclePage} />\n        </>\n      );\n  }\n\n  return <>{list}</>;\n}","// material-ui\nimport Button from '@mui/material/Button';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Badge from '@mui/material/Badge';\nimport { Theme } from '@mui/material/styles';\nimport withStyles from '@mui/styles/withStyles';\nimport createStyles from '@mui/styles/createStyles';\n// types\nimport { Set } from '../../types/misc';\n\nconst StyledBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      right: 0,\n      top: 20,\n      border: `2px solid ${theme.palette.background.paper}`,\n      padding: '0 4px',\n    },\n  }),\n)(Badge);\n\ninterface ViewFiltersButtonProps {\n  viewFilters: boolean;\n  setViewFilters: Set<boolean>;\n  filterCount: number;\n}\nexport default function ViewFiltersButton(props: ViewFiltersButtonProps): React.ReactElement {\n  const { viewFilters, setViewFilters, filterCount } = props;\n\n  return (\n\n    <Button\n      size='small'\n      startIcon={viewFilters ? <VisibilityOffIcon /> : <VisibilityIcon />}\n      onClick={() => (viewFilters ? setViewFilters(false) : setViewFilters(true))}\n    >\n      <StyledBadge badgeContent={filterCount} color='secondary'>\n        filters\n      </StyledBadge>\n    </Button>\n\n  );\n}","// react\nimport { useState, useEffect, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport Collapse from '@mui/material/Collapse';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport { FlexSpaceBtwn } from '../common/flex';\nimport StatusFilter from './StatusFilter';\nimport VehicleOrder from './VehicleOrder';\nimport AddVehicleButton from './AddVehicleButton';\nimport VehicleListFilters from './vehicleListFilters/VehicleListFilters';\nimport VehicleList from './VehicleList';\nimport ViewFiltersButton from './ViewFiltersButton';\n// hooks\nimport { useCheckMounted, useVehiclePage, useQuery } from '../../hooks';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// services\nimport { getVehiclesPaged } from '../../services/vehicles';\n// types\nimport { VehicleStatus, VehicleListState, VehiclePage } from '../../types/Vehicle';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { ListOrder } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n  listControls: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function AllVehicles(): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n\n  const { statusParam, sortParam, perPageParam, pageParam, compareParam } = useVehiclePage();\n  const query = useQuery().toString();\n\n  // state for ui\n  const [statusFilter, setStatusFilter] = useState<VehicleStatus>(statusParam);\n  const [sort, setSort] = useState<ListOrder>(sortParam);\n  const [viewFilters, setViewFilters] = useState<boolean>(false);\n  const [filterCount, setFilterCount] = useState<number>(0);\n\n  // Get vehicles\n  const [vehiclePage, setVehiclePage] = useState<VehiclePage>({ docStartNumber: 0, docEndNumber: 0, totalDocs: 0, vehicles: [] });\n  const [getVehiclesStatus, setGetVehiclesStatus] = useState<GetRequestStatus>('loading');\n\n  const vehicleListState: VehicleListState = {\n    vehiclePage, setVehiclePage,\n    getVehiclesStatus, setGetVehiclesStatus\n  };\n\n  const getVehicles = useCallback(\n    async () => {\n      setGetVehiclesStatus('loading');\n      await delay();\n      getVehiclesPaged(statusParam, sortParam, parseInt(perPageParam), pageParam, parseInt(compareParam), query)\n        .then(result => {\n          mounted.current && setGetVehiclesStatus(result.status as GetRequestStatus);\n          result.status === 'success' && mounted.current && result.data && setVehiclePage(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetVehiclesStatus('failed');\n          console.error(e);\n        });\n    },\n    [delay, statusParam, sortParam, perPageParam, pageParam, compareParam, query, mounted]\n  );\n\n  useEffect(() => { getVehicles(); }, [getVehicles]);\n\n  return (\n    <LargeCard>\n      <LargeContent style={{ position: 'relative' }} sx={{ zIndex: 0 }}>\n        <AddVehicleButton />\n        <ContentHeader>\n          <IconContentTitle icon={<VisibilityIcon color='primary' />} variant='h5'>All Vehicles</IconContentTitle>\n          <Divider />\n          <FlexSpaceBtwn className={classes.listControls}>\n            <StatusFilter filter={statusFilter} setFilter={setStatusFilter} />\n            <VehicleOrder sort={sort} setSort={setSort} />\n            <ViewFiltersButton viewFilters={viewFilters} setViewFilters={setViewFilters} filterCount={filterCount} />\n          </FlexSpaceBtwn>\n          <Divider />\n          <Collapse in={viewFilters} timeout='auto' style={{ width: '100%' }}>\n            <VehicleListFilters\n              mounted={mounted}\n              setViewFilters={setViewFilters}\n              setFilterCount={setFilterCount}\n            />\n            <Divider />\n          </Collapse>\n        </ContentHeader>\n        <VehicleList\n          vehicleListState={vehicleListState}\n          getVehicles={getVehicles}\n        />\n      </LargeContent>\n    </LargeCard>\n  );\n};\n","// react\nimport { useState, useEffect, useCallback } from 'react';\n// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { getNextStock as getNextStockService } from '../../../services/vehicles';\n// types\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\nimport { EditStockState } from '../../../types/Vehicle';\nimport { FlexEnd } from '../flex';\n\n\nconst useStyles = makeStyles((theme) => ({\n  field: {\n    // textAlign: 'left',\n    width: 'calc(100% - 75px)',\n  },\n  nextStockButton: {\n    width: 75,\n  },\n}));\n\ninterface NextStockButtonProps {\n  editStockState: EditStockState;\n};\nexport default function NextStockButton(props: NextStockButtonProps): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { setStock, setStockError, addEditVehicleStatus } = props.editStockState;\n  const [nextStock, setNextStock] = useState('');\n  const [getNextStockStatus, setGetNextStockStatus] = useState<GetRequestStatus>('loading');\n\n  const useNextStock = (): void => {\n    setStock(nextStock);\n    setStockError('');\n  };\n\n  const getNextStock = useCallback(async () => {\n    setGetNextStockStatus('loading');\n    await delay();\n    getNextStockService()\n      .then(result => {\n        mounted.current && result.data && setNextStock(result.data.nextStock.toString());\n        mounted.current && setGetNextStockStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetNextStockStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted]\n  );\n\n  useEffect(() => {\n    if (addEditVehicleStatus === '' || addEditVehicleStatus === 'success') {\n      getNextStock();\n    };\n  }, [addEditVehicleStatus, getNextStock]);\n\n  if (getNextStockStatus === 'loading') {\n    return (\n      <FlexEnd className={classes.nextStockButton}>\n        <CircularProgress size={25} />\n      </FlexEnd>\n    );\n  };\n\n  if (getNextStockStatus === 'failed') {\n    return (\n      <Button className={classes.nextStockButton} disabled>\n        error\n      </Button>\n    );\n  };\n\n  return (\n    <Button className={classes.nextStockButton} onClick={useNextStock}>\n      USE NEXT\n    </Button>\n  );\n}","// react\nimport { useEffect, useCallback } from 'react';\n// material-ui\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\n// THIS PROJECT\n// components\nimport NextStockButton from './NextStockButton';\n// types\nimport { EditStockState } from '../../../types/Vehicle';\n\ninterface StockFieldProps {\n  editStockState: EditStockState;\n  className?: string;\n};\nexport default function StockField(props: StockFieldProps): React.ReactElement {\n  const { editStockState, className } = props;\n  const { stock, setStock, stockOkay, setStockOkay, stockError, setStockError } = editStockState;\n\n  const changeStock = (e: React.ChangeEvent<{ value: unknown; }>): void => {\n    setStock(e.target.value as string);\n  };\n\n  const checkStock = useCallback(() => {\n    const stockFormatTest = /^[0-9]{5}$/;\n    if (!stockFormatTest.test(stock) && stock !== '') {\n      setStockOkay(false);\n      setStockError('must be 5 digits');\n    } else if (stockError !== 'stk# already exists') {\n      setStockOkay(true);\n      setStockError('');\n    };\n  }, [setStockError, setStockOkay, stock, stockError]);\n\n  useEffect(() => {\n    if (!stockOkay) checkStock();\n  }, [stock, stockOkay, checkStock]);\n\n  return (\n    <TextField\n      className={className && className}\n      error={stockError ? true : false}\n      label={'Stock #'}\n      helperText={stockError}\n      variant='outlined'\n      value={stock !== '0' ? stock : ' '}\n      onChange={changeStock}\n      onBlur={checkStock}\n      InputProps={{\n        endAdornment:\n          <InputAdornment position='end'>\n            <NextStockButton editStockState={editStockState} />\n          </InputAdornment>\n      }}\n    />\n  );\n}","// material-ui\nimport { ClassNameMap } from '@mui/styles';\n// THIS PROJECT\n// components\nimport StockField from '../common/vehicles/StockField';\nimport YearSelect from '../common/vehicles/YearSelect';\nimport MakeSelect from '../common/vehicles/MakeSelect';\nimport ModelSelect from '../common/vehicles/ModelSelect';\nimport TrimSelect from '../common/vehicles/TrimSelect';\n// types\nimport { AddVehicleState, EditStockState } from '../../types/Vehicle';\n\ninterface VehicleInfoInputsProps {\n  mounted: React.MutableRefObject<boolean>;\n  addVehicleState: AddVehicleState;\n  classes: ClassNameMap<\"form\" | \"inputField\">;\n};\nexport default function VehicleInfoInputs(props: VehicleInfoInputsProps): React.ReactElement {\n  const { mounted, addVehicleState, classes } = props;\n  const {\n    stock, setStock,\n    stockOkay, setStockOkay,\n    stockError, setStockError,\n    year, setYear,\n    make, setMake,\n    model, setModel,\n    trim, setTrim,\n    addVehicleStatus,\n  } = addVehicleState;\n\n  const editStockState: EditStockState = {\n    stock, setStock,\n    stockOkay, setStockOkay,\n    stockError, setStockError,\n    addEditVehicleStatus: addVehicleStatus,\n  };\n\n  return (\n    <div className={classes.form}>\n      <StockField className={classes.inputField} editStockState={editStockState} />\n      <YearSelect className={classes.inputField} year={year} setYear={setYear} />\n      <MakeSelect\n        className={classes.inputField}\n        parent={{ mounted, make, setMake }}\n        allowAddMake\n      />\n      <ModelSelect\n        className={classes.inputField}\n        parent={{ mounted, make, model, setModel }}\n        allowAddModel\n      />\n      <TrimSelect\n        className={classes.inputField}\n        parent={{ mounted, make, model, trim, setTrim }}\n        allowAddTrim\n      />\n    </div>\n  );\n}","// types\nimport { IdName } from '../types/misc';\nimport { GetSuccess, PostSuccess, PostExists, FailedResult, PatchSuccess, PatchManyResult } from '../types/ServiceResults';\nimport { StageAssignment, AssignStageParam, CurrentStageSummary } from '../types/StageAssignment';\nimport { DetailedVehicle } from '../types/Vehicle';\nimport { StageVehicleCount, PersonPlaceVehicleCount, StageSummary, UpdatedStageOrder } from '../types/Stage';\n\nconst stages = 'http://localhost:7000/api/stages';\n\nexport async function getStageVehicleCounts(): Promise<GetSuccess<StageVehicleCount[]> | FailedResult> {\n  const response = await fetch(stages + '/get-stage-vehicle-counts');\n  const json = await response.json();\n  return json;\n}\n\nexport async function getPersonPlaceVehicleCounts(): Promise<GetSuccess<PersonPlaceVehicleCount[]> | FailedResult> {\n  const response = await fetch(stages + '/get-person-place-vehicle-counts');\n  const json = await response.json();\n  return json;\n}\n\nexport async function getStages(): Promise<GetSuccess<StageSummary[]> | FailedResult> {\n  const response = await fetch(stages + '/get-stages');\n  const json = await response.json();\n  return json;\n};\n\nexport async function addStage(stage: string): Promise<PostSuccess<StageSummary, StageSummary[]> | PostExists | FailedResult> {\n  const body = { stage };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(stages + '/add-stage', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getPeoplePlaces(stageId: string): Promise<GetSuccess<IdName[]> | FailedResult> {\n  const response = await fetch(`${stages}/get-people-places?stageId=${stageId}`);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getAllPeoplePlaces(): Promise<GetSuccess<IdName[]> | FailedResult> {\n  const response = await fetch(stages + '/get-all-people-places');\n  const json = await response.json();\n  return json;\n};\n\ntype AddPersonPlaceReturn = PostSuccess<IdName, { peoplePlaces: IdName[] | undefined, allPeoplePlaces: IdName[]; }> | PostExists | FailedResult;\nexport async function addPersonPlace(stageId: string, personPlace: string): Promise<AddPersonPlaceReturn> {\n  const body = { stageId, personPlace };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(stages + '/add-person-place', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function assignStage(assignStageParam: AssignStageParam, previousStage?: CurrentStageSummary): Promise<PostSuccess<DetailedVehicle> | FailedResult> {\n  const body = {\n    assignStageParam: JSON.stringify(assignStageParam),\n    previousStage: previousStage && JSON.stringify(previousStage)\n  };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(stages + '/assign-stage', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function completeStageAssignment(stageAssignmentId: string, dateCompleted: number): Promise<PatchSuccess<object, StageAssignment, DetailedVehicle> | FailedResult> {\n  const body = {\n    stageAssignmentId,\n    dateCompleted,\n  };\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(stages + '/complete-stage-assignment', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function getStageHistory(vehicleId: string): Promise<GetSuccess<StageAssignment[]> | FailedResult> {\n  const response = await fetch(`${stages}/stage-history?vehicleId=${vehicleId}`);\n  const json = await response.json();\n  return json;\n}\n\nexport async function updateStageOrder(newStageOrder: UpdatedStageOrder[]): Promise<PatchManyResult<StageSummary[]> | FailedResult> {\n  const body = {\n    updates: newStageOrder,\n  };\n  const options = {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch(stages + '/update-stage-order', options);\n  const json = await response.json();\n  return json;\n}","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// coponents\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addStage } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\nimport { StageSummary } from '../../../types/Stage';\n\nconst useStyles = makeStyles((theme) => ({\n  addButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\ninterface AddStageProps {\n  stageSelectParent: {\n    mounted: MutableRefObject<boolean>;\n    setStage: Set<IdName>;\n  };\n  stageSelect: {\n    mounted: MutableRefObject<boolean>;\n    addStage: boolean;\n    setAddStage: Set<boolean>;\n    setStages: Set<StageSummary[]>;\n    open: boolean;\n    setOpen: Set<boolean>;\n  };\n};\nexport default function AddStage(props: AddStageProps): React.ReactElement {\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n  const { stageSelectParent: p, stageSelect: ss } = props;\n\n  const mounted = useCheckMounted();\n  const [addStageStatus, setAddStageStatus] = useState<PostRequestStatus | ''>('');\n  const [addStageInput, setAddStageInput] = useState<string>('');\n\n  const handleChangeAddStageInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setAddStageInput(e.target.value);\n  };\n\n  // we need to create an updated openRef because the ms.open value will get stale within a function\n  const openRef = useRef(ss.open);\n  useEffect(() => {\n    openRef.current = ss.open;\n  }, [ss.open]);\n\n  const handleAddStage = async () => {\n    setAddStageStatus('loading');\n    await delay();\n    addStage(addStageInput)\n      .then(result => {\n        mounted.current && setAddStageStatus(result.status as PostRequestStatus);\n        switch (result.status) {\n          case 'success':\n            if (p.mounted.current && openRef.current) {\n              result.doc && p.setStage({ id: result.doc.id, name: result.doc.name });\n            }\n            if (ss.mounted.current) {\n              ss.setAddStage(false);\n              result.data && ss.setStages(result.data);\n              ss.setOpen(false);\n            }\n            break;\n          default:\n            mounted.current && setAddStageInput('');\n            break;\n        }\n      }, e => {\n        setAddStageStatus('failed');\n        console.error(e);\n      });\n  };\n\n  return (\n    <Collapse in={ss.addStage} timeout='auto' unmountOnExit>\n      <List>\n        {addStageStatus === 'loading'\n          ? <FlexCenter><CircularProgress /></FlexCenter>\n          : <>\n            {addStageStatus === 'exists'\n              &&\n              <Typography color='secondary'>\n                Already exists\n              </Typography>}\n            {addStageStatus === 'failed'\n              &&\n              <Typography color='secondary'>\n                Failed to add stage\n              </Typography>}\n            <ListItem>\n              <TextField\n                autoFocus\n                fullWidth\n                id='add-stage-input'\n                label='Add Stage*'\n                value={addStageInput}\n                onChange={handleChangeAddStageInput}\n                autoComplete='off'\n              />\n            </ListItem>\n            <div className={classes.addButtons}>\n              <Button onClick={() => ss.setAddStage(false)}>Cancel</Button>\n              <Button\n                onClick={addStageInput ? handleAddStage : () => { }}\n                disabled={addStageInput ? false : true}\n                color='primary'>\n                Add\n              </Button>\n            </div>\n          </>}\n      </List>\n    </Collapse>\n  );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddStage from './AddStage';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getStages as getStagesService } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { StageSummary } from '../../../types/Stage';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface StageSelectProps {\n  parent: {\n    mounted: React.MutableRefObject<boolean>;\n    stage: IdName;\n    setStage: Set<IdName>;\n  };\n  allowAddStage?: boolean;\n  className?: string;\n  button?: boolean;\n  TextFieldProps?: any;\n  ButtonProps?: any;\n};\nexport default function StageSelect(props: StageSelectProps): React.ReactElement {\n  const { delay } = useDemoContext();\n  const {\n    parent,\n    allowAddStage,\n    className,\n    button,\n    TextFieldProps,\n    ButtonProps\n  } = props;\n\n  const {\n    mounted: pMounted,\n    stage,\n    setStage\n  } = parent;\n\n  const mounted = useCheckMounted();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handleStageSelect = (stagetmp = stage) => {\n    setStage({ id: stagetmp.id, name: stagetmp.name });\n    setOpen(false);\n  };\n\n  const [stages, setStages] = useState<StageSummary[]>([]);\n  const [getStagesStatus, setGetStagesStatus] = useState<GetRequestStatus>('loading');\n\n  const getStages = useCallback(async () => {\n    setGetStagesStatus('loading');\n    await delay();\n    getStagesService()\n      .then(result => {\n        mounted.current && result.data && setStages(result.data);\n        mounted.current && setGetStagesStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetStagesStatus('failed');\n        console.error(e);\n      });\n\n  },\n    [delay, mounted]\n  );\n\n  useEffect(() => {\n    getStages();\n  }, [getStages]);\n\n  const [addStage, setAddStage] = useState<boolean>(false);\n\n  useEffect(() => {\n    !open && setAddStage(false);\n  }, [open]);\n\n  let dialogContent: JSX.Element;\n\n  switch (getStagesStatus) {\n    case 'loading':\n      dialogContent = <CircularProgress />;\n      break;\n    case 'failed':\n      dialogContent = <Typography>error loading stages</Typography>;\n      break;\n    default:\n      dialogContent = (\n        <>\n          <Collapse in={!addStage} timeout='auto' unmountOnExit>\n            <List>\n              <SelectListItem\n                onClick={() => handleStageSelect({ id: '', name: '' })}\n                textVal=''\n                selectCondition={!stage.name}\n              />\n              <Divider />\n              {stages.map(stagetmp =>\n                <div key={stagetmp.id}>\n                  <SelectListItem\n                    onClick={() => handleStageSelect(stagetmp)}\n                    textVal={stagetmp.name}\n                    selectCondition={stagetmp.name === stage.name}\n                  />\n                  <Divider />\n                </div>)}\n              {allowAddStage &&\n                <AddListItem\n                  onClick={() => setAddStage(true)}\n                  textVal='Add Stage'\n                />}\n            </List >\n          </Collapse>\n          {allowAddStage && <AddStage\n            stageSelectParent={{\n              mounted: pMounted,\n              setStage: setStage,\n            }}\n            stageSelect={{\n              mounted,\n              setStages,\n              addStage,\n              setAddStage,\n              open,\n              setOpen\n            }}\n          />}\n        </>\n      );\n  };\n\n  return (\n    <>\n      <CustomSelect\n        label={button ? 'stage' : 'Stage*'}\n        id='stage-select'\n        value={stage.name}\n        setOpen={setOpen}\n        className={className}\n        button={button ? true : false}\n        TextFieldProps={TextFieldProps}\n        ButtonProps={ButtonProps}\n      />\n      <SelectDialog open={open} setOpen={setOpen}\n        flex={getStagesStatus === 'success' ? false : true}>\n        {dialogContent}\n      </SelectDialog>\n    </>\n  );\n}","// material-ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n  emphasized: {\n    fontStyle: 'italic',\n    paddingLeft: theme.spacing(1),\n  },\n}));\n\ninterface ShowMoreListItemProps {\n  onClick: () => void;\n  selectCondition: boolean;\n};\nexport default function ShowMoreListItem(props: ShowMoreListItemProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { onClick, selectCondition } = props;\n\n  return (\n    <ListItem button onClick={onClick} className={classes.emphasized}>\n      <ListItemText primary={selectCondition ? 'Show less...' : 'Show more...'} />\n      {selectCondition ? <ExpandLess /> : <ExpandMore />}\n    </ListItem>\n  );\n}","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addPersonPlace } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme) => ({\n  addButtons: {\n    marginLeft: 'auto',\n  },\n}));\n\ninterface AddPersonPlaceProps {\n  personPlaceSelectParent: {\n    mounted: MutableRefObject<boolean>;\n    stageId: string;\n    setPersonPlace: Set<IdName>;\n  };\n  personPlaceSelect: {\n    mounted: MutableRefObject<boolean>;\n    addPersonPlace: boolean;\n    setAddPersonPlace: Set<boolean>;\n    setAllPeoplePlaces: Set<IdName[]>;\n    setPeoplePlaces: Set<IdName[]>;\n    open: boolean;\n    setOpen: Set<boolean>;\n  };\n};\nexport default function AddPersonPlace(props: AddPersonPlaceProps): React.ReactElement {\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n  const { personPlaceSelectParent: p, personPlaceSelect: pps } = props;\n\n  const mounted = useCheckMounted();\n  const [addPersonPlaceStatus, setAddPersonPlaceStatus] = useState<PostRequestStatus | ''>('');\n  const [addPersonPlaceInput, setAddPersonPlaceInput] = useState<string>('');\n\n  const handleChangeAddPersonPlaceInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setAddPersonPlaceInput(e.target.value);\n  };\n\n  // we need to create an updated openRef because the ss.open value will get stale within a function\n  const openRef = useRef(pps.open);\n  useEffect(() => {\n    openRef.current = pps.open;\n  }, [pps.open]);\n\n  const handleAddPersonPlace = async () => {\n    setAddPersonPlaceStatus('loading');\n    await delay();\n    addPersonPlace(p.stageId, addPersonPlaceInput)\n      .then(result => {\n        mounted.current && setAddPersonPlaceStatus(result.status as PostRequestStatus);\n        switch (result.status) {\n          case 'success':\n            if (p.mounted.current && openRef.current) {\n              result.doc && p.setPersonPlace(result.doc);\n            }\n            if (pps.mounted.current) {\n              pps.setAddPersonPlace(false);\n              result.data && pps.setAllPeoplePlaces(result.data.allPeoplePlaces);\n              pps.setOpen(false);\n            }\n            break;\n          default:\n            mounted.current && setAddPersonPlaceInput('');\n            break;\n        }\n      }, e => {\n        setAddPersonPlaceStatus('failed');\n        console.error(e);\n      });\n  };\n\n  return (\n    <Collapse in={pps.addPersonPlace} timeout='auto' unmountOnExit>\n      <List>\n        {addPersonPlaceStatus === 'loading'\n          ? <FlexCenter><CircularProgress /></FlexCenter>\n          : <>\n            {addPersonPlaceStatus === 'exists'\n              &&\n              <Typography color='secondary'>\n                Already exists\n              </Typography>}\n            {addPersonPlaceStatus === 'failed'\n              &&\n              <Typography color='secondary'>\n                Failed to add person/place\n              </Typography>}\n            <ListItem>\n              <TextField\n                autoFocus\n                fullWidth\n                id='add-person-place-input'\n                label='Add Person/Place*'\n                value={addPersonPlaceInput}\n                onChange={handleChangeAddPersonPlaceInput}\n                autoComplete='off'\n              />\n            </ListItem>\n            <div className={classes.addButtons}>\n              <Button onClick={() => pps.setAddPersonPlace(false)}>Cancel</Button>\n              <Button\n                onClick={addPersonPlaceInput ? handleAddPersonPlace : () => { }}\n                disabled={addPersonPlaceInput ? false : true}\n                color='primary'>\n                Add\n              </Button>\n            </div>\n          </>}\n      </List>\n    </Collapse>\n  );\n}","// react\nimport { useCallback, useEffect, useState } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport ShowMoreListItem from '../ShowMoreListItem';\nimport AddListItem from '../AddListItem';\nimport AddPersonPlace from './AddPersonPlace';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getPeoplePlaces as getPeoplePlacesService, getAllPeoplePlaces as getAllPeoplePlacesService } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface StageSelectProps {\n  parent: {\n    mounted: React.MutableRefObject<boolean>;\n    stage: IdName;\n    personPlace: IdName;\n    setPersonPlace: Set<IdName>;\n  };\n  allowAddPersonPlace?: boolean;\n  className?: string;\n  button?: boolean;\n  TextFieldProps?: any;\n  ButtonProps?: any;\n};\nexport default function StageSelect(props: StageSelectProps): React.ReactElement {\n  const { delay } = useDemoContext();\n  const {\n    parent,\n    allowAddPersonPlace,\n    className,\n    button,\n    TextFieldProps,\n    ButtonProps\n  } = props;\n\n  const {\n    mounted: pMounted,\n    stage,\n    personPlace,\n    setPersonPlace,\n  } = parent;\n\n  const mounted = useCheckMounted();\n\n  const [open, setOpen] = useState<boolean>(false);\n\n  const handlePersonPlaceSelect = (personPlacetmp = personPlace) => {\n    setPersonPlace(personPlacetmp);\n    setOpen(false);\n  };\n\n  // get stage specific People/Places\n  const [peoplePlaces, setPeoplePlaces] = useState<IdName[]>([]);\n  const [getPeoplePlacesStatus, setGetPeoplePlacesStatus] = useState<GetRequestStatus>('loading');\n\n  const getPeoplePlaces = useCallback(async () => {\n    setGetPeoplePlacesStatus('loading');\n    await delay();\n    getPeoplePlacesService(stage.id)\n      .then(result => {\n        mounted.current && result.data && setPeoplePlaces(result.data);\n        mounted.current && setGetPeoplePlacesStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetPeoplePlacesStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted, stage.id]\n  );\n\n  useEffect(() => {\n    setPersonPlace({ id: '', name: '' });\n    if (stage.id) {\n      getPeoplePlaces();\n    }\n  }, [setPersonPlace, getPeoplePlaces, stage.id]);\n\n  // get all People/Places \n  const [allPeoplePlaces, setAllPeoplePlaces] = useState<IdName[]>([]);\n  const [getAllPeoplePlacesStatus, setGetAllPeoplePlacesStatus] = useState<GetRequestStatus>('loading');\n\n  const getAllPeoplePlaces = useCallback(async () => {\n    setGetAllPeoplePlacesStatus('loading');\n    await delay();\n    getAllPeoplePlacesService()\n      .then(result => {\n        mounted.current && result.data && setAllPeoplePlaces(result.data);\n        mounted.current && setGetAllPeoplePlacesStatus(result.status as GetRequestStatus);\n      }, e => {\n        mounted.current && setGetAllPeoplePlacesStatus('failed');\n        console.error(e);\n      });\n\n  },\n    [delay, mounted]);\n\n  useEffect(() => {\n    getAllPeoplePlaces();\n  }, [getAllPeoplePlaces]);\n\n  const [showMorePeoplePlaces, setShowMorePeoplePlaces] = useState<boolean>(false);\n\n  const toggleShowMorePeoplePlaces = () => showMorePeoplePlaces ? setShowMorePeoplePlaces(false) : setShowMorePeoplePlaces(true);\n\n  const [addPersonPlace, setAddPersonPlace] = useState<boolean>(false);\n\n  useEffect(() => {\n    !open && setAddPersonPlace(false);\n    !open && setShowMorePeoplePlaces(false);\n  }, [open]);\n\n  let dialogContent: JSX.Element;\n\n  switch (getPeoplePlacesStatus || getAllPeoplePlacesStatus) {\n    case 'loading':\n      dialogContent = <CircularProgress />;\n      break;\n    case 'failed':\n      dialogContent = <Typography>error loading People/Places</Typography>;\n      break;\n    default:\n      dialogContent = (\n        <>\n          <Collapse in={!addPersonPlace} timeout='auto' unmountOnExit>\n            <List>\n              <SelectListItem\n                onClick={() => handlePersonPlaceSelect({ id: '', name: '' })}\n                textVal=''\n                selectCondition={!personPlace.name}\n              />\n              <Divider />\n              {peoplePlaces.map(personPlacetmp =>\n                <div key={personPlacetmp.id}>\n                  <SelectListItem\n                    onClick={() => handlePersonPlaceSelect(personPlacetmp)}\n                    textVal={personPlacetmp.name}\n                    selectCondition={personPlacetmp.name === personPlace.name}\n                  />\n                  <Divider />\n                </div>)}\n              <ShowMoreListItem\n                onClick={toggleShowMorePeoplePlaces}\n                selectCondition={showMorePeoplePlaces}\n              />\n              <Collapse in={showMorePeoplePlaces} timeout='auto'>\n                {allPeoplePlaces\n                  .filter(personPlacetmp => (!peoplePlaces.find(personPlacetmp2 => personPlacetmp2.id === personPlacetmp.id)))\n                  .map(personPlacetmp =>\n                    <div key={personPlacetmp.id}>\n                      <SelectListItem\n                        onClick={() => handlePersonPlaceSelect(personPlacetmp)}\n                        textVal={personPlacetmp.name}\n                        selectCondition={personPlacetmp.name === personPlace.name}\n                      />\n                    </div>)\n                }\n                {allowAddPersonPlace &&\n                  <AddListItem\n                    onClick={() => setAddPersonPlace(true)}\n                    textVal={'Add Person/Place'}\n                  />}\n              </Collapse>\n            </List >\n          </Collapse>\n          {allowAddPersonPlace\n            && <AddPersonPlace\n              personPlaceSelectParent={{\n                mounted: pMounted,\n                stageId: stage.id,\n                setPersonPlace\n              }}\n              personPlaceSelect={{\n                mounted,\n                addPersonPlace,\n                setAddPersonPlace,\n                setAllPeoplePlaces,\n                setPeoplePlaces,\n                open,\n                setOpen\n              }}\n            />\n          }\n        </>\n      );\n  };\n\n  return (\n    <>\n      <CustomSelect\n        label={button ? 'person/place' : 'Person/Place*'}\n        id='person-place-select'\n        value={personPlace.name}\n        setOpen={setOpen}\n        className={className}\n        button={button ? true : false}\n        TextFieldProps={TextFieldProps}\n        ButtonProps={ButtonProps}\n        disabled={stage.id ? false : true}\n      />\n      <SelectDialog open={open} setOpen={setOpen}\n        flex={getPeoplePlacesStatus === 'success' && getAllPeoplePlacesStatus === 'success' ? false : true}>\n        {dialogContent}\n      </SelectDialog>\n    </>\n  );\n}","// react\nimport { useState } from 'react';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nconst useStyles = makeStyles((theme) => ({\n  taskList: {\n    outline: '1px solid #D3D3D3',\n    margin: 'auto',\n    marginTop: theme.spacing(0),\n    backgroundColor: '#F8F8F8',\n  },\n  listItem: {\n    wordWrap: 'break-word',\n  },\n}));\n\ninterface TaskListInputProps {\n  taskList: string[];\n  setTaskList: React.Dispatch<React.SetStateAction<string[]>>;\n  className?: string;\n};\nexport default function TaskListInput(props: TaskListInputProps): React.ReactElement {\n  const classes = useStyles();\n  const { taskList, setTaskList, className } = props;\n  const [task, setTask] = useState<string>('');\n\n  const handleTaskInputChange = (e: React.ChangeEvent<{ value: string; }>): void => {\n    setTask(e.target.value);\n  };\n\n  const addTask = () => {\n    setTaskList([...taskList, task]);\n    setTask('');\n  };\n\n  const removeTask = (index: number) => {\n    let taskListTmp = [...taskList];\n    taskListTmp.splice(index, 1);\n    setTaskList(taskListTmp);\n  };\n\n  let taskListComponent: JSX.Element;\n\n  if (taskList.length > 0) {\n    taskListComponent = (\n      <div className={className}>\n        <List className={classes.taskList}>\n          {taskList.map((task, index) => <ListItem key={task + Math.random()} alignItems='flex-start'>\n            <ListItemText className={classes.listItem}>\n              <div className={classes.listItem}>\n                {task}\n              </div>\n            </ListItemText>\n            <IconButton onClick={() => removeTask(index)} size='small'>\n              <ClearIcon />\n            </IconButton>\n          </ListItem>)}\n        </List>\n      </div>\n    );\n  } else {\n    taskListComponent = (<></>);\n  };\n\n  let taskAddButton: JSX.Element;\n\n  if (task) {\n    taskAddButton = (\n      <IconButton onClick={addTask} size=\"large\">\n        <AddIcon />\n      </IconButton>\n    );\n  } else {\n    taskAddButton = (\n      <IconButton disabled size=\"large\">\n        <AddIcon />\n      </IconButton>\n    );\n  };\n\n  return (\n    <>\n      <TextField\n        className={className && className}\n        label='Add Task'\n        variant='outlined'\n        value={task}\n        onChange={handleTaskInputChange}\n        InputProps={{\n          endAdornment:\n            <InputAdornment position='end'>\n              {taskAddButton}\n            </InputAdornment>\n        }}\n      />\n      {taskListComponent}\n    </>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Collapse from '@mui/material/Collapse';\nimport { ClassNameMap } from '@mui/styles';\n// THIS PROJECT\n// components\nimport StageSelect from '../common/stages/StageSelect';\nimport PersonPlaceSelect from '../common/stages/PersonPlaceSelect';\nimport TaskListInput from '../common/stages/TaskListInput';\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\ninterface StageAssignInputsProps {\n  mounted: React.MutableRefObject<boolean>;\n  addVehicleState: AddVehicleState;\n  classes: ClassNameMap<\"form\" | \"inputField\">;\n};\nexport default function StageAssignInputs(props: StageAssignInputsProps): React.ReactElement {\n  const { classes, addVehicleState, mounted } = props;\n  const { stage, setStage, personPlace, setPersonPlace, taskList, setTaskList, addVehicleStatus } = addVehicleState;\n  const [showStageInputs, setShowStageInputs] = useState<boolean>(false);\n\n  const toggleShowStageInputs = () => {\n    showStageInputs && setShowStageInputs(false);\n    !showStageInputs && setShowStageInputs(true);\n  };\n\n  useEffect(() => {\n    addVehicleStatus && setShowStageInputs(false);\n  }, [addVehicleStatus]);\n\n  return (\n    <>\n      <Button\n        className={classes.inputField}\n        startIcon={!showStageInputs ? <AddIcon /> : <RemoveIcon />}\n        onClick={toggleShowStageInputs}\n      >\n        Stage Assignment\n      </Button>\n      <Collapse in={showStageInputs} timeout='auto' sx={{ width: '100%' }}>\n        <div className={classes.form}>\n          <StageSelect\n            className={classes.inputField}\n            parent={{ mounted, stage, setStage }}\n            allowAddStage\n          />\n          <PersonPlaceSelect\n            className={classes.inputField}\n            parent={{ mounted, stage, personPlace, setPersonPlace }}\n            allowAddPersonPlace\n          />\n          <TaskListInput\n            className={classes.inputField}\n            taskList={taskList}\n            setTaskList={setTaskList}\n          />\n        </div>\n      </Collapse>\n    </>\n  );\n}\n\n","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport EditIcon from '@mui/icons-material/Edit';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Collapse from '@mui/material/Collapse';\nimport TextField from '@mui/material/TextField';\nimport { ClassNameMap } from '@mui/styles';\n// THIS PROJECT\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\ninterface NotesInputProps {\n  mounted: React.MutableRefObject<boolean>;\n  addVehicleState: AddVehicleState;\n  classes: ClassNameMap<\"form\" | \"inputField\">;\n};\nexport default function NotesInput(props: NotesInputProps): React.ReactElement {\n  const { classes, addVehicleState } = props;\n  const { notes, setNotes, addVehicleStatus } = addVehicleState;\n  const [showNotesInput, setShowNotesInput] = useState<boolean>(false);\n\n  const toggleShowNotesInput = () => {\n    showNotesInput && setShowNotesInput(false);\n    !showNotesInput && setShowNotesInput(true);\n  };\n\n  const handleNotesChange = (e: React.ChangeEvent<{ value: string; }>) => {\n    setNotes(e.target.value);\n  };\n\n  useEffect(() => {\n    addVehicleStatus && setShowNotesInput(false);\n  }, [addVehicleStatus]);\n\n  return (\n    <>\n      <Button\n        className={classes.inputField}\n        startIcon={!showNotesInput ? <EditIcon /> : <RemoveIcon />}\n        onClick={toggleShowNotesInput}\n      >\n        Notes\n      </Button>\n      <Collapse in={showNotesInput} timeout='auto' style={{ width: '100%' }}>\n        <div className={classes.form}>\n          <TextField\n            className={classes.inputField}\n            multiline\n            maxRows={4}\n            variant='outlined'\n            label='Notes'\n            value={notes}\n            onChange={handleNotesChange}\n          />\n        </div>\n      </Collapse>\n\n    </>\n  );\n}","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\ninterface AddVehicleButtonProps {\n  addVehicleState: AddVehicleState;\n  addVehicleClick: () => void;\n  className?: string;\n};\nexport default function AddVehicleButton(props: AddVehicleButtonProps): React.ReactElement {\n  const { addVehicleState, addVehicleClick, className } = props;\n  const { stockOkay, year, make, model, stage, personPlace, addVehicleStatus } = addVehicleState;\n\n  if (addVehicleStatus === 'loading') {\n    return <CircularProgress style={{ width: '25px', margin: 'auto' }} />;\n  }\n\n  if (stockOkay && year && make.id && model.id && stage.id && personPlace.id) {\n    return (\n      <FormControl className={className ? className : ''}>\n        <Button variant='contained' color='primary' onClick={addVehicleClick}>\n          ADD\n        </Button>\n      </FormControl>\n    );\n  }\n\n  return (\n    <FormControl className={className ? className : ''}>\n      <Button variant='contained' color='primary' disabled>ADD</Button>\n    </FormControl>\n  );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.titleColor.darkBlue,\n  },\n  dialog: {\n    padding: 10,\n    textAlign: 'center',\n    maxWidth: 500,\n  },\n  button: {\n    width: 120,\n    margin: 5,\n  },\n}));\n\ninterface AddVehicleSuccessDialogProps {\n  open: boolean;\n  addVehicleState: AddVehicleState;\n};\nexport default function AddVehicleSuccessDialog(props: AddVehicleSuccessDialogProps): React.ReactElement {\n  const classes = useStyles();\n  const history = useHistory();\n  const { open, addVehicleState } = props;\n  const { setAddVehicleStatus, addedVehicle } = addVehicleState;\n\n  const handleAnotherClick = () => {\n    setAddVehicleStatus('');\n    history.push('/add-vehicle');\n  };\n\n  const handleDoneClick = () => {\n    setAddVehicleStatus('');\n    history.push('/all-vehicles/active/asc/10/first/0');\n  };\n\n  return (\n    <Dialog aria-labelledby=\"add-vehicle-dialog\" open={open} disableEscapeKeyDown>\n      <div className={classes.dialog}>\n        <DialogTitle id=\"add-vehicle-dialog\" className={classes.title}>Successfully Added:</DialogTitle>\n        {addedVehicle ? <VehicleInfo vehicle={addedVehicle} variant='subtitle1' /> : <></>}\n        <br></br>\n        <Divider />\n        <Typography variant=\"subtitle1\">What next?</Typography>\n        <Button onClick={handleAnotherClick} className={classes.button} color='primary' startIcon={<AddIcon />} variant='outlined' size='small'>ANOTHER</Button>\n        <Button onClick={handleDoneClick} className={classes.button} color='primary' variant='outlined' size='small'>DONE</Button>\n      </div>\n    </Dialog >\n  );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.titleColor.darkBlue,\n  },\n  dialog: {\n    padding: 10,\n    textAlign: 'center',\n    maxWidth: 500,\n  },\n  button: {\n    width: 120,\n    margin: 5,\n  },\n}));\n\ninterface AddVehicleFailureDialogProps {\n  open: boolean;\n  addVehicleClick: () => void;\n  addVehicleState: AddVehicleState;\n};\nexport default function AddVehicleFailureDialog(props: AddVehicleFailureDialogProps): React.ReactElement {\n  const classes = useStyles();\n  const history = useHistory();\n  const { open, addVehicleClick, addVehicleState } = props;\n  const { setAddVehicleStatus } = addVehicleState;\n\n  const handleDoneClick = () => {\n    setAddVehicleStatus('');\n    history.push('/all-vehicles/active/asc/10/first/0');\n  };\n\n  return (\n    <Dialog aria-labelledby=\"add-vehicle-dialog\" open={open}>\n      <div className={classes.dialog}>\n        <DialogTitle id=\"add-vehicle-dialog\" className={classes.title}>Failed to Add Vehicle</DialogTitle>\n        <br></br>\n        <Divider />\n        <Typography variant=\"subtitle1\">What next?</Typography>\n        <Button className={classes.button} onClick={handleDoneClick} variant='outlined' size='small'>CANCEL</Button>\n        <Button className={classes.button} onClick={addVehicleClick} variant='outlined' size='small'>TRY AGAIN</Button>\n      </div>\n    </Dialog >\n  );\n}","// react\nimport { useState, useEffect } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport FormHelperText from '@mui/material/FormHelperText';\n// THIS PROJECT\n// components\nimport VehicleInfoInputs from './VehicleInfoInputs';\nimport StageAssignInputs from './StageAssignInputs';\nimport NotesInput from './NotesInput';\nimport AddVehicleButton from './AddVehicleButton';\nimport AddVehicleSuccessDialog from './AddVehicleSuccessDialog';\nimport AddVehicleFailureDialog from './AddVehicleFailureDialog';\nimport { FlexCenter } from '../common/flex';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// contexts\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useDemoContext } from '../../contexts/DemoContext';\n// services\nimport { checkStock, addVehicle } from '../../services/vehicles';\n// types\nimport { DetailedVehicle, AddVehicleState, AddVehicleParam } from '../../types/Vehicle';\nimport { IdName } from '../../types/misc';\nimport { PostRequestStatus } from '../../types/ServiceRequests';\nimport { InitialStageParam } from '../../types/StageAssignment';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 400px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  inputField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 300px)',\n  },\n}));\n\nexport default function AddVehicleInputs(): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { userPreferences } = useAuthContext();\n  const { delay } = useDemoContext();\n  const { defaultStageAssignment } = userPreferences;\n\n  const [stock, setStock] = useState<string>('');\n  const [stockOkay, setStockOkay] = useState<boolean>(true);\n  const [stockError, setStockError] = useState<string>('');\n  const [year, setYear] = useState<string>('');\n  const [make, setMake] = useState<IdName>({ id: '', name: '' });\n  const [model, setModel] = useState<IdName>({ id: '', name: '' });\n  const [trim, setTrim] = useState<IdName>({ id: '', name: '' });\n  const [stage, setStage] = useState<IdName>({ id: '', name: '' });\n  const [personPlace, setPersonPlace] = useState<IdName>({ id: '', name: '' });\n  const [taskList, setTaskList] = useState<string[]>([]);\n  const [notes, setNotes] = useState<string>('');\n  const [addVehicleStatus, setAddVehicleStatus] = useState<PostRequestStatus>('');\n  const [addedVehicle, setAddedVehicle] = useState<DetailedVehicle | null>(null);\n\n  useEffect(() => {\n    if (!stage.id) setStage(defaultStageAssignment.stage);\n  }, [defaultStageAssignment, stage]);\n\n  // set default stage assignment Person / Place on first render. Have to do it here, \n  // because personPlace resets when stage is set (PersonPlaceSelect.tsx)\n  // causing it to go blank if we assign it when we initialize the personPlace state above\n  useEffect(() => {\n    if (stage === defaultStageAssignment.stage) {\n      if (addVehicleStatus === '' || addVehicleStatus === 'success') {\n        setPersonPlace(defaultStageAssignment.personPlace);\n      }\n    }\n  }, [defaultStageAssignment, stage, addVehicleStatus]);\n\n  const addVehicleState: AddVehicleState = {\n    stock, setStock,\n    stockOkay, setStockOkay,\n    stockError, setStockError,\n    year, setYear,\n    make, setMake,\n    model, setModel,\n    trim, setTrim,\n    stage, setStage,\n    personPlace, setPersonPlace,\n    taskList, setTaskList,\n    notes, setNotes,\n    addVehicleStatus, setAddVehicleStatus,\n    addedVehicle, setAddedVehicle,\n  };\n\n  const clearInputs = () => {\n    setStock('');\n    setStockOkay(true);\n    setStockError('');\n    setYear('');\n    setMake({ id: '', name: '' });\n    setModel({ id: '', name: '' });\n    setTrim({ id: '', name: '' });\n    setStage({ id: '', name: '' });\n    setPersonPlace({ id: '', name: '' });\n    setTaskList([]);\n    setNotes('');\n  };\n\n  const addVehicleClick = async () => {\n    setAddVehicleStatus('loading');\n    await delay();\n    checkStock(stock)\n      .then(result => {\n        if (mounted.current && result.data && result.data.exists) {\n          setAddVehicleStatus('');\n          setStockError('stk# already exists');\n        } else {\n          const vehicleParam: AddVehicleParam = {\n            stock: stock !== '' ? parseInt(stock) : 0,\n            year: parseInt(year),\n            make,\n            model,\n            trim,\n            notes: notes ? notes : '',\n          };\n          const initialStageParam: InitialStageParam = {\n            stage,\n            personPlace,\n            tasks: taskList\n          };\n          addVehicle(vehicleParam, initialStageParam)\n            .then(result => {\n              mounted.current && setAddVehicleStatus(result.status);\n              if (result.status === 'success') {\n                mounted.current && setAddedVehicle(result.doc);\n                clearInputs();\n              };\n              if (result.status === 'failed') {\n                console.error(result);\n              };\n            }, e => {\n              mounted.current && setAddVehicleStatus('failed');\n              console.error(e);\n            });\n        }\n      }, e => {\n        mounted.current && setAddVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const [openSuccessDialog, setOpenSuccessDialog] = useState<boolean>(false);\n\n  useEffect(() => {\n    addVehicleStatus === 'success' ? setOpenSuccessDialog(true) : setOpenSuccessDialog(false);\n  }, [addVehicleStatus, addedVehicle]);\n\n  const [openFailureDialog, setOpenFailureDialog] = useState<boolean>(false);\n\n  useEffect(() => {\n    addVehicleStatus === 'failed' ? setOpenFailureDialog(true) : setOpenFailureDialog(false);\n  }, [addVehicleStatus]);\n\n  return (\n    <>\n      <form autoComplete='off'>\n        <FlexCenter flexDirection='column'>\n          <FormHelperText>*required field</FormHelperText>\n          <VehicleInfoInputs mounted={mounted} addVehicleState={addVehicleState} classes={classes} />\n          <StageAssignInputs mounted={mounted} addVehicleState={addVehicleState} classes={classes} />\n          <NotesInput mounted={mounted} addVehicleState={addVehicleState} classes={classes} />\n          <AddVehicleButton className={classes.inputField} addVehicleState={addVehicleState} addVehicleClick={addVehicleClick} />\n          <AddVehicleSuccessDialog open={openSuccessDialog} addVehicleState={addVehicleState} />\n          <AddVehicleFailureDialog open={openFailureDialog} addVehicleClick={addVehicleClick} addVehicleState={addVehicleState} />\n        </FlexCenter>\n      </form>\n    </>\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport AddIcon from '@mui/icons-material/Add';\n// THIS PROJECT\n// components\nimport { SmallCard, SmallContent, ContentHeader, IconContentTitle, ContentPaper } from '../common/cardContent';\nimport Divider from '@mui/material/Divider';\nimport AddVehicleInputs from './AddVehicleInputs';\n\nconst useStyles = makeStyles(theme => ({\n  addVehicle: {\n    margin: 'auto',\n  }\n}));\n\nexport default function AddVehicle(): React.ReactElement {\n  const classes = useStyles();\n\n  return (\n    <SmallCard className={classes.addVehicle}>\n      <SmallContent>\n        <ContentHeader>\n          <IconContentTitle icon={<AddIcon color='primary' />} variant='h5'>Add Vehicle</IconContentTitle>\n          <Divider />\n        </ContentHeader>\n        <ContentPaper>\n          <AddVehicleInputs />\n        </ContentPaper>\n      </SmallContent>\n    </SmallCard>\n  );\n}","// material-ui\nimport Divider from '@mui/material/Divider';\nimport Skeleton from '@mui/material/Skeleton';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader } from '../common/cardContent';\n\nexport default function GetVehicleLoading(): React.ReactElement {\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <Skeleton />\n          <Skeleton />\n        </ContentHeader>\n        <Divider />\n        <Skeleton variant=\"rectangular\" height={300} />\n      </LargeContent>\n    </LargeCard>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n// THIS PROJECT\n// services\nimport { updateVehicle, sellVehicle } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { VehicleDetailState } from '../../types/Vehicle';\nimport { PostRequestStatus } from '../../types/ServiceRequests';\n\ninterface ActionMenuProps {\n  vehicleDetailState: VehicleDetailState;\n  mounted: React.MutableRefObject<boolean>;\n};\nexport default function ActionMenu(props: ActionMenuProps): React.ReactElement {\n  const { delay } = useDemoContext();\n  const { vehicleDetailState, mounted } = props;\n  const { vehicle, setVehicle, setUpdateVehicleStatus } = vehicleDetailState;\n\n  const [anchorMenu, setAnchorMenu] = useState<null | HTMLElement>(null);\n\n  const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n    setAnchorMenu(event.currentTarget);\n  };\n\n  const handleMenuClose = () => {\n    setAnchorMenu(null);\n  };\n\n  const trashVehicle = async () => {\n    setUpdateVehicleStatus('loading');\n    await delay();\n    vehicle && updateVehicle(vehicle.id, { status: 'trash' })\n      .then(result => {\n        mounted.current && setUpdateVehicleStatus(result.status as PostRequestStatus);\n        result.status === 'success' && mounted.current && setVehicle(result.doc);\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setUpdateVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const sellVehicleClick = async () => {\n    setUpdateVehicleStatus('loading');\n    await delay();\n    vehicle && sellVehicle(vehicle.id, vehicle.currentStage.id, Date.now())\n      .then(result => {\n        mounted.current && setUpdateVehicleStatus(result.status as PostRequestStatus);\n        if (result.status === 'success' && mounted.current) {\n          setVehicle(result.doc);\n        }\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setUpdateVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  return (\n    <div>\n      <IconButton\n        aria-controls='action-menu'\n        aria-haspopup='true'\n        onClick={handleMenuClick}\n        size=\"large\">\n        <MoreVertIcon />\n      </IconButton>\n      <Menu\n        id='action-menu'\n        anchorEl={anchorMenu}\n        keepMounted\n        open={Boolean(anchorMenu)}\n        onClose={handleMenuClose}\n      >\n        <MenuItem onClick={trashVehicle}>\n          <ListItemIcon><DeleteIcon /> </ListItemIcon>\n          <ListItemText>Trash</ListItemText>\n        </MenuItem>\n        {vehicle && vehicle.status !== 'sold' &&\n          <MenuItem onClick={sellVehicleClick}>\n            <ListItemIcon><AttachMoneyIcon /> </ListItemIcon>\n            <ListItemText>Sell</ListItemText>\n          </MenuItem>}\n      </Menu>\n    </div>\n  );\n}","// material-ui\nimport withStyles from '@mui/styles/withStyles';\nimport Tab from '@mui/material/Tab';\n\nconst DarkTab = withStyles({\n  root: {\n    '&$selected': {\n      backgroundColor: '#F5F5F5',\n    }\n  },\n  selected: {},\n})(Tab);\n\nexport default DarkTab;","// react\nimport { useState } from 'react';\n// material-ui\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\n// THIS PROJECT\n// services\nimport { assignStage } from '../../../../services/stages';\n// context\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { IdName } from '../../../../types/misc';\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface AssignStageButtonProps {\n  vehicleDetailState: VehicleDetailState;\n  assignStageState: {\n    stage: IdName;\n    personPlace: IdName;\n    taskList: string[];\n  };\n};\nexport default function AssignStageButton(props: AssignStageButtonProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { vehicleDetailState, assignStageState } = props;\n  const { stage, personPlace, taskList } = assignStageState;\n  const { mounted: pMounted, vehicle, setVehicle } = vehicleDetailState;\n  const vehicleId = vehicle?.id;\n  const previousStage = vehicle?.currentStage;\n  const dateOnLot = vehicle?.dateOnLot;\n\n  const [assignStageStatus, setAssignStageStatus] = useState<PostRequestStatus>('');\n\n  const assignStageClick = async () => {\n    setAssignStageStatus('loading');\n    await delay();\n    vehicleId && previousStage && assignStage({\n      vehicleId,\n      stage,\n      personPlace,\n      tasks: taskList,\n      dateAssigned: Date.now(),\n      dateOnLot\n    }, previousStage).then(result => {\n      mounted.current && setAssignStageStatus(result.status);\n      result.status === 'success' && pMounted.current && setVehicle(result.doc);\n      result.status === 'failed' && console.error(result);\n    }, e => {\n      mounted.current && setAssignStageStatus('failed');\n      console.error(e);\n    });\n  };\n\n  const assignButton = (\n    <Button onClick={assignStageClick} variant='contained' color='primary' disableElevation>Assign Now</Button>\n  );\n\n  const disabledAssignButton = (\n    <Button variant='contained' color='primary' disableElevation disabled>Assign Now</Button>\n  );\n\n  return (\n    <FormControl>\n      {assignStageStatus === 'loading'\n        ? <CircularProgress size={50} />\n        : vehicleId && stage.name && personPlace.name\n          ? assignButton\n          : disabledAssignButton}\n    </FormControl>\n  );\n}","// react\nimport { useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport StageSelect from '../../../common/stages/StageSelect';\nimport PersonPlaceSelect from '../../../common/stages/PersonPlaceSelect';\nimport TaskListInput from '../../../common/stages/TaskListInput';\nimport AssignStageButton from './AssignStageButton';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { IdName } from '../../../../types/misc';\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n  inputField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 300px)',\n  },\n}));\n\ninterface AssignStageProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function AssignStage(props: AssignStageProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const classes = useStyles();\n  const { vehicleDetailState } = props;\n\n  const [stage, setStage] = useState<IdName>({ id: '', name: '' });\n  const [personPlace, setPersonPlace] = useState<IdName>({ id: '', name: '' });\n  const [taskList, setTaskList] = useState<string[]>([]);\n  const assignStageState = { stage, personPlace, taskList };\n\n  // automatically assigning the default stage assignment when leaving page without having assigned stage\n  // is handled in the parent VehicleDetails.tsx\n\n  return (\n    <>\n      <StageSelect\n        className={classes.inputField}\n        parent={{ mounted, stage, setStage }}\n        allowAddStage\n      />\n      <PersonPlaceSelect\n        className={classes.inputField}\n        parent={{ mounted, stage, personPlace, setPersonPlace }}\n        allowAddPersonPlace\n      />\n      <TaskListInput\n        className={classes.inputField}\n        taskList={taskList}\n        setTaskList={setTaskList}\n      />\n      <br></br>\n      <AssignStageButton\n        vehicleDetailState={vehicleDetailState}\n        assignStageState={assignStageState}\n      />\n    </>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Box from '@mui/material/Box';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\n// THIS PROJECT\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// services\nimport { sellVehicle } from '../../../../services/vehicles';\nimport { completeStageAssignment } from '../../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\nimport CenteredError from '../../../common/CenteredError';\n\nconst useStyles = makeStyles((theme) => ({\n  sellButton: {\n    width: 125,\n    backgroundColor: theme.palette.success.main,\n    color: 'white',\n    '&:hover': {\n      backgroundColor: theme.palette.success.dark,\n    },\n  },\n  reassignButton: {\n    width: 125,\n  },\n}));\n\ninterface SellVehicleButtonsProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function SellVehicleButtons(props: SellVehicleButtonsProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n  const { vehicleDetailState } = props;\n  const { mounted: pMounted, vehicle, setVehicle } = vehicleDetailState;\n  const stageAssignmentId = vehicle?.currentStage.id;\n\n  const [sellVehicleStatus, setSellVehicleStatus] = useState<PostRequestStatus>('');\n  const [completeStageStatus, setCompleteStageStatus] = useState<PostRequestStatus>('');\n\n  const reassignClick = async () => {\n    setCompleteStageStatus('loading');\n    await delay();\n    stageAssignmentId && completeStageAssignment(stageAssignmentId, Date.now())\n      .then(result => {\n        mounted.current && setCompleteStageStatus(result.status);\n        if (result.status === 'success') {\n          pMounted && result.data && setVehicle(result.data);\n        }\n        if (result.status === 'failed') {\n          console.error(result);\n        }\n      }, e => {\n        mounted.current && setCompleteStageStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const sellVehicleClick = async () => {\n    setSellVehicleStatus('loading');\n    await delay();\n    vehicle && sellVehicle(vehicle.id, vehicle.currentStage.id, Date.now())\n      .then(result => {\n        mounted.current && setSellVehicleStatus(result.status as PostRequestStatus);\n        result.status === 'success' && pMounted.current && setVehicle(result.doc);\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setSellVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  if (completeStageStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to re-assign vehicle' retryAction={reassignClick} />;\n  };\n\n  if (sellVehicleStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to sell vehicle' retryAction={sellVehicleClick} />;\n  };\n\n  return (\n    <Box m={1}>\n      {sellVehicleStatus === 'loading' || completeStageStatus === 'loading'\n        ? <CircularProgress size={50} />\n        : stageAssignmentId\n        && <ButtonGroup>\n          <Button\n            className={classes.reassignButton}\n            onClick={reassignClick}\n            variant='outlined'\n          >\n            re-assign\n          </Button>\n          <Button\n            className={classes.sellButton}\n            startIcon={<AttachMoneyIcon />}\n            onClick={sellVehicleClick}\n            variant='contained'\n            disableElevation\n          >\n            Sell\n          </Button>\n        </ButtonGroup>}\n    </Box>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n// THIS PROJECT\n// components\nimport CenteredError from '../../../common/CenteredError';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// services\nimport { completeStageAssignment } from '../../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface CompleteStageButtonProps {\n  vehicleDetailState: VehicleDetailState;\n}\nexport default function CompleteStageButton(props: CompleteStageButtonProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { vehicleDetailState } = props;\n  const { mounted: pMounted, vehicle, setVehicle } = vehicleDetailState;\n  const stageAssignmentId = vehicle?.currentStage.id;\n\n  const [completeStageStatus, setCompleteStageStatus] = useState<PostRequestStatus>('');\n\n  const completeStageClick = async () => {\n    setCompleteStageStatus('loading');\n    await delay();\n    stageAssignmentId && completeStageAssignment(stageAssignmentId, Date.now())\n      .then(result => {\n        mounted.current && setCompleteStageStatus(result.status);\n        if (result.status === 'success') {\n          pMounted && result.data && setVehicle(result.data);\n        }\n        if (result.status === 'failed') {\n          console.error(result);\n        }\n      }, e => {\n        mounted.current && setCompleteStageStatus('failed');\n        console.error(e);\n      });\n  };\n\n  if (completeStageStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to complete stage' retryAction={completeStageClick} />;\n  };\n\n  return (\n    <Box m={1}>\n      {completeStageStatus === 'loading'\n        ? <CircularProgress size={50} />\n        : stageAssignmentId\n        && <Button onClick={completeStageClick} variant='contained' color='primary' disableElevation>Complete</Button>}\n    </Box>\n  );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\n\nconst TabContent = styled(Box)(({\n  theme\n}) => ({\n  display: 'flex',\n  p: 1,\n  justifyContent: 'center',\n  alignItems: 'center',\n  alignContent: 'start',\n  flexDirection: 'column',\n  margin: 'auto',\n  width: 'clamp(200px, 100%, 600px)',\n  minHeight: '200px',\n}));\n\nexport default TabContent;","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport { List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\nimport ArrowRightRoundedIcon from '@mui/icons-material/ArrowRightRounded';\n// THIS PROJECT\n// components\nimport AssignStage from './AssignStage';\nimport SellVehicleButtons from './SellVehicleButtons';\nimport CompleteStageButton from './CompleteStageButton';\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport { FlexCenter } from '../../../common/flex';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n  sold: {\n    color: theme.palette.success.main,\n  },\n  content: {\n    width: 'clamp(200px, 100%, 500px)',\n  },\n  flexDivider: {\n    width: 'clamp(200px, 100%, 400px)',\n    height: 1,\n    margin: 'auto',\n    marginTop: 5\n  }\n}));\n\ninterface CurrentStageProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function CurrentStage(props: CurrentStageProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicleDetailState } = props;\n  const { vehicle } = vehicleDetailState;\n  const currentStage = vehicle?.currentStage;\n  const stage = currentStage?.stage.name;\n  const personPlace = currentStage?.personPlace.name;\n\n  const dateSoldDisplay = (vehicle?.dateSold && new Date(vehicle.dateSold));\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <FlexCenter flexDirection='column' className={classes.content}>\n          {vehicle?.status === 'sold'\n            ? <>\n              <Typography className={classes.sold} variant='h6'><strong>Sold</strong></Typography>\n              <Typography variant='subtitle1'>{dateSoldDisplay && dateSoldDisplay.toLocaleDateString()}</Typography>\n            </>\n            : currentStage?.status === 'complete'\n              ? <>\n                <Typography variant='h6' color='primary'><strong>Assign</strong></Typography>\n              </>\n              : <>\n                <Typography variant='h6' color='primary'><strong>{stage}</strong></Typography>\n                <Typography variant='h6'>{personPlace}</Typography>\n              </>\n          }\n          {vehicle?.status !== 'sold' && <Divider className={classes.flexDivider} flexItem />}\n        </FlexCenter>\n        {vehicle?.status === 'sold' ? <></>\n          : (stage === 'Assign' || currentStage?.status === 'complete')\n            ? <AssignStage vehicleDetailState={vehicleDetailState} />\n            : stage === 'For Sale'\n              ? <SellVehicleButtons vehicleDetailState={vehicleDetailState} />\n              // task list\n              : <>\n                {vehicle && vehicle.currentStage.tasks.length >= 1 && <FlexCenter sx={{ flexDirection: 'column', width: 'clamp(200px, 100%, 400px)' }}>\n                  <Typography sx={{ textAlign: 'center' }}>Tasks:</Typography>\n                  <List dense sx={{ paddingLeft: 3, paddingRight: 3 }}>\n                    {vehicle?.currentStage.tasks.map(task => <ListItem disablePadding key={task[0] + Math.random().toString()} sx={{ overflowWrap: 'break-word' }}>\n                      <ListItemIcon><ArrowRightRoundedIcon /></ListItemIcon>\n                      <ListItemText primary={task} />\n                    </ListItem>)}\n                  </List>\n                  <Divider flexItem />\n                </FlexCenter>}\n                <CompleteStageButton vehicleDetailState={vehicleDetailState} />\n              </>\n        }\n      </TabContent>\n    </ContentPaper >\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport HistoryIcon from '@mui/icons-material/History';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport VehicleChip from '../../../common/vehicles/VehicleChip';\nimport SoldVehicleChip from '../../../common/vehicles/SoldVehicleChip';\nimport FormatTime from '../../../common/FormatTime';\nimport { FlexSpaceEvenly } from '../../../common/flex';\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport { FlexCenter } from '../../../common/flex';\n// types\nimport { DetailedVehicle } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: 'clamp(200px, 100%, 400px)',\n  },\n  chip: {\n    minWidth: 95,\n  },\n}));\n\ninterface DurationStatsProps {\n  vehicle: DetailedVehicle;\n};\nexport default function DurationStats(props: DurationStatsProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicle } = props;\n  const { status, currentStage, dateAdded, reconditionTime, forSaleTime, dateOnLot, totalSellTime } = vehicle;\n  const stage = currentStage.stage.name;\n\n  const reconditionTimeLabel = (reconditionTime\n    ? <FormatTime milliseconds={reconditionTime} />\n    : <FormatTime milliseconds={Date.now() - dateAdded} />);\n\n  const stageTimeLabel = (currentStage.completeTime\n    ? <FormatTime milliseconds={currentStage.completeTime} />\n    : <FormatTime milliseconds={Date.now() - currentStage.dateAssigned} />);\n\n  const onLotTimeLabel = (forSaleTime && <FormatTime milliseconds={forSaleTime} />);\n\n  const totalSellTimeLabel = (totalSellTime && <FormatTime milliseconds={totalSellTime} />);\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <FlexCenter style={{ gap: 10 }}>\n          <HistoryIcon color='primary' />\n          <Typography variant='h6' color='primary'><strong>Duration Statistics:</strong></Typography>\n        </FlexCenter>\n        <TableContainer component={Paper} className={classes.table}>\n          <Table aria-label=\"stats table\">\n            <TableBody>\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\" align=\"left\">Total Reconditioning:</TableCell>\n                <TableCell align='right'>\n                  <VehicleChip\n                    className={classes.chip}\n                    // change the color label based on whether reconditioning was ever complete\n                    // (made it For Sale, hence has a dateOnLot property)\n                    color={dateOnLot ? 'primary' : 'default'}\n                    label={reconditionTimeLabel}\n                  />\n                </TableCell>\n              </TableRow>\n              {status !== 'sold'\n                ? <TableRow>\n                  <TableCell component=\"th\" scope=\"row\" align=\"left\">{stage}:</TableCell>\n                  <TableCell align='right'>\n                    <VehicleChip\n                      className={classes.chip}\n                      color={currentStage.status === 'complete' ? 'primary'\n                        : currentStage.stage.name === 'Assign' ? 'secondary' : 'default'}\n                      label={stageTimeLabel}\n                    />\n                  </TableCell>\n                </TableRow>\n                : forSaleTime\n                  ? <TableRow >\n                    <TableCell component=\"th\" scope=\"row\" align=\"left\">For Sale:</TableCell>\n                    <TableCell align='right'>\n                      <VehicleChip\n                        className={classes.chip}\n                        color='primary'\n                        label={onLotTimeLabel}\n                      />\n                    </TableCell>\n                  </TableRow>\n                  : <></>}\n              {status === 'sold' && <TableRow >\n                <TableCell component=\"th\" scope=\"row\" align=\"left\">Total Time to Sell:</TableCell>\n                <TableCell align='right'>\n                  <SoldVehicleChip\n                    className={classes.chip}\n                    color='primary'\n                    label={totalSellTimeLabel}\n                  />\n                </TableCell>\n              </TableRow>}\n              <TableRow>\n                <TableCell align=\"right\" size='small' colSpan={2} >\n                  <FlexSpaceEvenly>\n                    <Chip label='incomplete' size='small' />\n                    <Chip label='complete' size='small' color='primary' />\n                  </FlexSpaceEvenly>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </TabContent>\n    </ContentPaper>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Tabs from '@mui/material/Tabs';\n// THIS PROJECT\n// components\nimport DarkTab from '../../../common/DarkTab';\nimport CurrentStage from './CurrentStage';\nimport DurationStats from './DurationStats';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n};\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`stage-tabpanel-${index}`}\n      aria-labelledby={`stage-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <div>{children}</div>\n      )}\n    </div>\n  );\n};\n\nfunction a11yProps(index: any) {\n  return {\n    id: `stage-tab-${index}`,\n    'aria-controls': `vehicle-tabpanel-${index}`,\n  };\n};\n\ninterface StageTabsProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function StageTabs(props: StageTabsProps): React.ReactElement {\n  const { vehicleDetailState } = props;\n  const { vehicle } = vehicleDetailState;\n  const [tabValue, setTabValue] = useState<'current' | 'stats'>('current');\n\n  const changeTab = (event: React.ChangeEvent<{}>, newValue: 'current' | 'stats') => {\n    setTabValue(newValue);\n  };\n\n  return (\n    <div>\n      <Tabs\n        centered\n        value={tabValue}\n        indicatorColor='primary'\n        textColor='primary'\n        onChange={changeTab}\n        aria-label='current stage navigation'\n      >\n        <DarkTab label='Current Stage' value='current' {...a11yProps('current')} />\n        <DarkTab label='Duration Stats' value='stats' {...a11yProps('stats')} />\n      </Tabs>\n      <TabPanel value={tabValue} index='current'>\n        <CurrentStage vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='stats'>\n        {vehicle && <DurationStats vehicle={vehicle} />}\n      </TabPanel>\n    </div>\n  );\n}","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { FlexSpaceBtwn } from '../../../common/flex';\n// services\nimport { checkStock, updateVehicle as updateVehicleService } from '../../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { EditVehicleState } from '../../../../types/Vehicle';\nimport { Set } from '../../../../types/misc';\n\ninterface EditInfoButtonsProps {\n  editVehicleState: EditVehicleState;\n  setEdit: Set<boolean>;\n  className?: string;\n};\nexport default function EditInfoButtons(props: EditInfoButtonsProps): React.ReactElement {\n  const { editVehicleState, setEdit, className } = props;\n  const { delay } = useDemoContext();\n  const {\n    vehicleDetailsMounted,\n    mounted,\n    vehicleId,\n    stock,\n    stockOkay,\n    setStockError,\n    editStock,\n    year, editYear,\n    make, editMake,\n    model, editModel,\n    trim, editTrim,\n    dateAdded, editDateAdded,\n    dateSold, editDateSold,\n    editVehicleStatus, setEditVehicleStatus,\n    setVehicle\n  } = editVehicleState;\n\n  const updateVehicle = () => {\n    const updateVehicleDoc = {\n      stock: parseInt(editStock),\n      year: parseInt(editYear),\n      make: editMake,\n      model: editModel,\n      trim: editTrim,\n      dateAdded: editDateAdded,\n      dateSold: dateSold && editDateSold,\n    };\n    updateVehicleService(vehicleId, updateVehicleDoc)\n      .then(result => {\n        mounted.current && setEditVehicleStatus(result.status);\n        if (result.status === 'success') {\n          vehicleDetailsMounted.current && setVehicle(result.doc);\n          mounted && setEdit(false);\n        };\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setEditVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const updateVehicleClick = async () => {\n    setEditVehicleStatus('loading');\n    await delay();\n    if (stock === editStock) {\n      updateVehicle();\n    } else {\n      checkStock(editStock)\n        .then(result => {\n          if (mounted.current && result.data && result.data.exists) {\n            setEditVehicleStatus('');\n            setStockError('stk# already exists');\n          } else {\n            updateVehicle();\n          };\n        }, e => {\n          mounted.current && setEditVehicleStatus('failed');\n          console.error(e);\n        });\n    };\n  };\n\n  const cancelClick = () => setEdit(false);\n\n  let updateButton: JSX.Element;\n\n  const enabledUpdateButton = (\n    <Button variant='contained' color='primary' onClick={updateVehicleClick}>\n      Update\n    </Button>\n  );\n\n  const disabledUpdateButton = (\n    <Button variant='contained' color='primary' disabled>\n      Update\n    </Button>\n  );\n\n  if (editVehicleStatus === 'loading') {\n    updateButton = <CircularProgress size={25} />;\n  } else if (dateSold) {\n    if (\n      stock !== editStock\n      || year !== editYear\n      || make !== editMake\n      || model !== editModel\n      || trim !== editTrim\n      || dateAdded !== editDateAdded\n      || dateSold !== editDateSold\n    ) {\n      if (stockOkay && editYear && editMake.id && editModel.id && editDateAdded) {\n        updateButton = enabledUpdateButton;\n      } else {\n        updateButton = disabledUpdateButton;\n      };\n    } else {\n      updateButton = disabledUpdateButton;\n    };\n  } else if (\n    stock !== editStock\n    || year !== editYear\n    || make !== editMake\n    || model !== editModel\n    || trim !== editTrim\n    || dateAdded !== editDateAdded\n  ) {\n    if (stockOkay && editYear && editMake.id && editModel.id && editDateAdded) {\n      updateButton = enabledUpdateButton;\n    } else {\n      updateButton = disabledUpdateButton;\n    };\n  } else {\n    updateButton = disabledUpdateButton;\n  };\n\n  return (\n    <FlexSpaceBtwn className={className ? className : ''}>\n      <Button variant='contained' onClick={cancelClick}>Cancel</Button>\n      {updateButton}\n    </FlexSpaceBtwn>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// date-fns\nimport 'date-fns';\n// material-ui\n// import { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { LocalizationProvider } from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\n// THIS PROJECT\n// components\nimport StockField from '../../../common/vehicles/StockField';\nimport YearSelect from '../../../common/vehicles/YearSelect';\nimport MakeSelect from '../../../common/vehicles/MakeSelect';\nimport ModelSelect from '../../../common/vehicles/ModelSelect';\nimport TrimSelect from '../../../common/vehicles/TrimSelect';\nimport CenteredError from '../../../common/CenteredError';\nimport EditInfoButtons from './EditInfoButtons';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { DetailedVehicle, EditStockState, EditVehicleState } from '../../../../types/Vehicle';\nimport { IdName, Set } from '../../../../types/misc';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface EditInfoProps {\n  vehicleDetailsMounted: React.MutableRefObject<boolean>;\n  vehicle: DetailedVehicle;\n  setVehicle: Set<DetailedVehicle | null>;\n  setEdit: Set<boolean>;\n  inputFieldStyle?: string;\n}\nexport default function EditInfo(props: EditInfoProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { vehicleDetailsMounted, vehicle, setVehicle, setEdit, inputFieldStyle } = props;\n  const { id, stock, year, make, model, trim, dateAdded, dateSold } = vehicle;\n\n  const [editStock, setEditStock] = useState<string>(stock.toString());\n  const [stockOkay, setStockOkay] = useState<boolean>(true);\n  const [stockError, setStockError] = useState<string>('');\n  const [editYear, setEditYear] = useState<string>(year.toString());\n  const [editMake, setEditMake] = useState<IdName>(make);\n  const [editModel, setEditModel] = useState<IdName>({ id: '', name: '' });\n  const [editTrim, setEditTrim] = useState<IdName>({ id: '', name: '' });\n  const [editDateAdded, setEditDateAdded] = useState<number>(dateAdded);\n  const [editDateSold, setEditDateSold] = useState<number>(dateSold ? dateSold : 0);\n  const [editVehicleStatus, setEditVehicleStatus] = useState<PostRequestStatus>('');\n\n  // For setting the initial editModel value (since editMake must be set first)\n  // and clearing editModel when the editMake selection is changed\n  useEffect(() => {\n    if (editMake === make) {\n      setEditModel(model);\n    } else {\n      setEditModel({ id: '', name: '' });\n    };\n  }, [editMake, make, model]);\n\n  // For setting the initial editTrim value (since editModel must be set first)\n  // and clearing editTrim when the editModel selection is changed\n  useEffect(() => {\n    if (editModel === model) {\n      setEditTrim(trim);\n    } else {\n      setEditTrim({ id: '', name: '' });\n    };\n  }, [editModel, model, trim]);\n\n  const editStockState: EditStockState = {\n    stock: editStock, setStock: setEditStock,\n    stockOkay, setStockOkay,\n    stockError, setStockError,\n    addEditVehicleStatus: editVehicleStatus,\n  };\n\n  const editVehicleState: EditVehicleState = {\n    vehicleDetailsMounted,\n    mounted,\n    vehicleId: id,\n    stock: stock.toString(),\n    editStock,\n    stockOkay, setStockOkay,\n    setStockError,\n    year: year.toString(),\n    editYear,\n    make, editMake,\n    model, editModel,\n    trim, editTrim,\n    dateAdded, editDateAdded,\n    dateSold, editDateSold,\n    editVehicleStatus, setEditVehicleStatus,\n    setVehicle,\n  };\n\n  const handleDateAddedChange = (date: Date | null) => {\n    date && setEditDateAdded(date.getTime());\n  };\n\n  const handleDateSoldChange = (date: Date | null) => {\n    date && setEditDateSold(date.getTime());\n  };\n\n  if (editVehicleStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to update vehicle info' />;\n  };\n\n  return (\n    <>\n      <StockField className={inputFieldStyle} editStockState={editStockState} />\n      <YearSelect className={inputFieldStyle} year={editYear} setYear={setEditYear} />\n      <MakeSelect\n        className={inputFieldStyle}\n        parent={{ mounted, make: editMake, setMake: setEditMake }}\n        allowAddMake\n      />\n      <ModelSelect\n        className={inputFieldStyle}\n        parent={{ mounted, make: editMake, model: editModel, setModel: setEditModel }}\n        allowAddModel\n      />\n      <TrimSelect\n        className={inputFieldStyle}\n        parent={{ mounted, make: editMake, model: editModel, trim: editTrim, setTrim: setEditTrim }}\n        allowAddTrim\n      />\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        {/*Edit Date Added Input */}\n        <FormControl className={inputFieldStyle}>\n          <DatePicker\n            label='Date Added'\n            value={editDateAdded}\n            onChange={handleDateAddedChange}\n            renderInput={(params) => <TextField {...params} />}\n            maxDate={new Date()}\n          />\n        </FormControl>\n        {/* Edit Date Sold Input */}\n        {dateSold && dateSold > 0\n          && <FormControl className={inputFieldStyle}>\n            <DatePicker\n              label='Date Sold'\n              value={editDateSold}\n              onChange={handleDateSoldChange}\n              renderInput={(params) => <TextField {...params} />}\n              minDate={new Date(editDateAdded)}\n              maxDate={new Date()}\n            />\n          </FormControl>}\n      </LocalizationProvider>\n      <EditInfoButtons className={inputFieldStyle} editVehicleState={editVehicleState} setEdit={setEdit} />\n    </>\n  );\n}","// material-ui\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\n\nconst ReadonlyTextField = styled(TextField)<TextFieldProps>(({ theme }) => ({\n  '&.MuiTextField-root': {\n    '& .Mui-disabled': {\n      WebkitTextFillColor: 'black',\n      '& .label': {\n        WebkitTextFillColor: 'gray'\n      },\n    },\n  }\n}));\n\nexport default ReadonlyTextField;\n\n// text field still needs to be 'disabled' when used in order to become 'readonly'\n// the label must be assigne a <span /> element with a className of 'label'\n// e.g. <span className='label'>label</span>","// THIS PROJECT\n// components\nimport ReadonlyTextField from '../../../common/ReadonlyTextField';\n// types\nimport { DetailedVehicle } from '../../../../types/Vehicle';\n\ninterface ReadonlyInfoProps {\n  vehicle: DetailedVehicle;\n  inputFieldStyle?: string;\n};\nexport default function ReadonlyInfoTab(props: ReadonlyInfoProps): React.ReactElement {\n  const { vehicle, inputFieldStyle } = props;\n  const stock = vehicle.stock;\n  const year = vehicle.year;\n  const make = vehicle.make.name;\n  const model = vehicle.model.name;\n  const trim = vehicle.trim.name;\n  const dateAdded = new Date(vehicle.dateAdded).toLocaleDateString('en-us', { year: 'numeric', month: '2-digit', day: '2-digit' });\n  const dateSold = vehicle.dateSold && new Date(vehicle.dateSold).toLocaleDateString('en-us', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n  return (\n    <>\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Stock #</span>} value={stock > 0 ? stock : ' '} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Year</span>} value={year} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Make</span>} value={make} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Model</span>} value={model} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Trim</span>} value={trim ? trim : ' '} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Date Added</span>} value={dateAdded} />\n      {vehicle.dateSold && vehicle.dateSold > 0\n        && <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Date Sold</span>} value={dateSold} />}\n    </>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\n// THIS PROJECT\n// components\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport EditInfo from './EditInfo';\nimport ReadonlyInfo from './ReadonlyInfo';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  editButtonDiv: {\n    width: '100%',\n    marginTop: -25,\n    marginBottom: -10,\n  },\n  editButton: {\n    float: 'right',\n  },\n\n  inputField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 300px)',\n  },\n}));\n\ninterface InfoTabProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function InfoTab(props: InfoTabProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicleDetailState } = props;\n  const { mounted, vehicle, setVehicle, setDisableDoneButton } = vehicleDetailState;\n  const [edit, setEdit] = useState<boolean>(false);\n\n  const handleEditClick = () => {\n    edit ? setEdit(false) : setEdit(true);\n  };\n\n  useEffect(() => {\n    edit ? setDisableDoneButton(true) : setDisableDoneButton(false);\n    return () => setDisableDoneButton(false);\n  }, [edit, setDisableDoneButton]);\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <div className={classes.editButtonDiv} >\n          <IconButton\n            aria-label='edit'\n            className={classes.editButton}\n            onClick={handleEditClick}\n            color={edit ? 'primary' : 'inherit'}\n            size=\"large\">\n            <EditIcon />\n          </IconButton>\n        </div>\n        {edit\n          ? vehicle && <EditInfo\n            vehicleDetailsMounted={mounted}\n            vehicle={vehicle}\n            setVehicle={setVehicle}\n            setEdit={setEdit}\n            inputFieldStyle={classes.inputField}\n          />\n          : vehicle && <ReadonlyInfo vehicle={vehicle} inputFieldStyle={classes.inputField} />}\n      </TabContent>\n    </ContentPaper>\n  );\n}","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { FlexSpaceBtwn } from '../../../common/flex';\n// services\nimport { updateVehicle } from '../../../../services/vehicles';\n// contexts \nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { EditNotesState } from '../../../../types/Vehicle';\nimport { Set } from '../../../../types/misc';\n\ninterface EditNotesButtonsProps {\n  editNotesState: EditNotesState;\n  setEdit: Set<boolean>;\n  className?: string;\n};\nexport default function EditNotesButtons(props: EditNotesButtonsProps): React.ReactElement {\n  const { editNotesState, setEdit, className } = props;\n  const { delay } = useDemoContext();\n\n  const {\n    vehicleDetailsMounted,\n    mounted,\n    vehicleId,\n    notes,\n    editNotes,\n    editNotesStatus, setEditNotesStatus,\n    setVehicle\n  } = editNotesState;\n\n  const updateNotes = async () => {\n    setEditNotesStatus('loading');\n    await delay();\n    const updateVehicleDoc = { notes: editNotes };\n    updateVehicle(vehicleId, updateVehicleDoc)\n      .then(result => {\n        mounted.current && setEditNotesStatus(result.status);\n        if (result.status === 'success') {\n          vehicleDetailsMounted.current && setVehicle(result.doc);\n          mounted && setEdit(false);\n        };\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setEditNotesStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const cancelClick = () => setEdit(false);\n\n  let updateButton: JSX.Element;\n\n  const enabledUpdateButton = (\n    <Button variant='contained' color='primary' onClick={updateNotes}>\n      Update\n    </Button>\n  );\n\n  const disabledUpdateButton = (\n    <Button variant='contained' color='primary' disabled>\n      Update\n    </Button>\n  );\n\n  editNotesStatus === 'loading'\n    ? updateButton = <CircularProgress size={25} />\n    : notes !== editNotes\n      ? updateButton = enabledUpdateButton\n      : updateButton = disabledUpdateButton;\n\n  return (\n    <FlexSpaceBtwn className={className ? className : ''}>\n      <Button variant='contained' onClick={cancelClick}>Cancel</Button>\n      {updateButton}\n    </FlexSpaceBtwn>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\n// THIS PROJECT\n// components\nimport EditNotesButtons from './EditNotesButtons';\nimport CenteredError from '../../../common/CenteredError';\n// hooks\nimport { useCheckMounted } from \"../../../../hooks\";\n// types\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\nimport { Set } from \"../../../../types/misc\";\nimport { DetailedVehicle, EditNotesState } from \"../../../../types/Vehicle\";\n\ninterface EditNotesProps {\n  vehicleDetailsMounted: React.MutableRefObject<boolean>;\n  vehicle: DetailedVehicle;\n  setVehicle: Set<DetailedVehicle | null>;\n  setEdit: Set<boolean>;\n  inputFieldStyle?: string;\n};\nexport default function EditNotes(props: EditNotesProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { vehicleDetailsMounted, vehicle, setVehicle, setEdit, inputFieldStyle } = props;\n  const { id, notes } = vehicle;\n\n  const [editNotes, setEditNotes] = useState<string>(notes);\n  const [editNotesStatus, setEditNotesStatus] = useState<PostRequestStatus>('');\n\n  const editNotesState: EditNotesState = {\n    vehicleDetailsMounted,\n    mounted,\n    vehicleId: id,\n    notes,\n    editNotes,\n    editNotesStatus,\n    setEditNotesStatus,\n    setVehicle\n  };\n\n  const handleNotesChange = (e: React.ChangeEvent<{ value: unknown; }>): void => {\n    setEditNotes(e.target.value as string);\n  };\n\n  if (editNotesStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to update vehicle notes' />;\n  };\n\n  return <>\n    <FormControl className={inputFieldStyle}>\n      <TextField\n        onChange={handleNotesChange}\n        label='Notes'\n        value={editNotes}\n        variant='outlined'\n        multiline\n        maxRows={5}\n        autoFocus\n      />\n    </FormControl>\n    <EditNotesButtons className={inputFieldStyle} editNotesState={editNotesState} setEdit={setEdit} />\n  </>;\n}","// THIS PROJECT\n// components\nimport ReadonlyTextField from '../../../common/ReadonlyTextField';\n// types\nimport { DetailedVehicle } from '../../../../types/Vehicle';\n\ninterface ReadonlyInfoProps {\n  vehicle: DetailedVehicle;\n  inputFieldStyle?: string;\n};\nexport default function ReadonlyInfoTab(props: ReadonlyInfoProps): React.ReactElement {\n  const { vehicle, inputFieldStyle } = props;\n  const { notes } = vehicle;\n\n  return (\n    <ReadonlyTextField disabled label={notes === '' ? <span className='label'>...</span> : <span className='label'>Notes</span>} value={notes} className={inputFieldStyle} multiline maxRows={5} />\n  );\n};","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\n// THIS PROJECT\n// components\nimport TabContent from '../TabContent';\nimport EditNotes from './EditNotes';\nimport ReadonlyNotes from './ReadonlyNotes';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { ContentPaper } from '../../../common/cardContent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  editButtonDiv: {\n    width: '100%',\n    marginTop: -25,\n    marginBottom: -10,\n  },\n  editButton: {\n    float: 'right',\n  },\n  inputField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 400px)',\n  },\n}));\n\ninterface NotesTabProps {\n  vehicleDetailState: VehicleDetailState;\n}\nexport default function NotesTab(props: NotesTabProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicleDetailState } = props;\n  const { mounted, vehicle, setVehicle, setDisableDoneButton } = vehicleDetailState;\n  const [edit, setEdit] = useState<boolean>(false);\n\n  const handleEditClick = () => {\n    edit ? setEdit(false) : setEdit(true);\n  };\n\n  useEffect(() => {\n    edit ? setDisableDoneButton(true) : setDisableDoneButton(false);\n    return () => setDisableDoneButton(false);\n  }, [edit, setDisableDoneButton]);\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <div className={classes.editButtonDiv} >\n          <IconButton\n            aria-label='edit'\n            className={classes.editButton}\n            onClick={handleEditClick}\n            color={edit ? 'primary' : 'inherit'}\n            size=\"large\">\n            <EditIcon />\n          </IconButton>\n        </div>\n        {edit\n          ? vehicle && <EditNotes\n            vehicleDetailsMounted={mounted}\n            vehicle={vehicle}\n            setVehicle={setVehicle}\n            setEdit={setEdit}\n            inputFieldStyle={classes.inputField}\n          />\n          : vehicle && <ReadonlyNotes vehicle={vehicle} inputFieldStyle={classes.inputField} />}\n      </TabContent>\n    </ContentPaper>\n  );\n}","// react\nimport { useState } from \"react\";\n// material-ui\nimport IconButton from '@mui/material/IconButton';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../../../common/flex';\nimport { ContentTitle } from '../../../common/cardContent';\n// types\nimport { ListOrder, Set } from \"../../../../types/misc\";\n\ninterface HistoryTitleMenuProps {\n  order: ListOrder;\n  setOrder: Set<ListOrder>;\n};\nexport default function HistoryTitleMenu(props: HistoryTitleMenuProps): React.ReactElement {\n  const { order, setOrder } = props;\n\n  const [orderAnchor, setOrderAnchor] = useState<null | HTMLElement>(null);\n\n  const handleOrderClick = (e: React.MouseEvent<HTMLElement>) => {\n    setOrderAnchor(e.currentTarget);\n  };\n\n  const handleOrderClose = (order: ListOrder) => {\n    setOrderAnchor(null);\n    setOrder(order);\n  };\n\n  return (\n    <FlexCenter>\n      <ContentTitle variant='h6'>Stage History:</ContentTitle>\n      <IconButton\n        aria-controls=\"order-menu\"\n        aria-haspopup=\"true\"\n        onClick={handleOrderClick}\n        size=\"large\">\n        {order === 'asc' ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n      </IconButton>\n      <Menu\n        id=\"order-menu\"\n        anchorEl={orderAnchor}\n        keepMounted\n        open={Boolean(orderAnchor)}\n        onClose={() => handleOrderClose(order)}\n      >\n        <MenuItem onClick={() => { handleOrderClose('desc'); }}>Oldest First</MenuItem>\n        <MenuItem onClick={() => { handleOrderClose('asc'); }}>Newest First</MenuItem>\n      </Menu>\n    </FlexCenter>\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\n// THIS PROJECT\n// types\nimport { StageAssignment } from '../../../../types/StageAssignment';\n\nconst useStyles = makeStyles({\n  dialog: {\n    padding: 20,\n    textAlign: 'left',\n    width: 'clamp(200px, 80vw, 400px)',\n    marginTop: -50,\n  },\n  closeButton: {\n    float: 'right',\n  },\n  label: {\n    fontSize: 10,\n    float: 'left',\n    width: '100%',\n    marginTop: 10,\n  },\n\n});\n\ninterface StageDetailsDialogProps {\n  open: boolean;\n  onClose: () => void;\n  stageAssignment: StageAssignment;\n  timeElapsed: (dateAssigned: number, status: string, completeTime: number) => JSX.Element;\n};\nexport default function AddVehicleDialog(props: StageDetailsDialogProps): React.ReactElement {\n  const classes = useStyles();\n  const { onClose, open, stageAssignment, timeElapsed } = props;\n  const stage = stageAssignment.stage.name;\n  const personPlace = stageAssignment.personPlace.name;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  const formatDate = (dateAssigned: number) => {\n    const date: Date = new Date(dateAssigned);\n    interface DateTimeFormatOptions {\n      year: '2-digit',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit';\n    };\n    let options: DateTimeFormatOptions = {\n      year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'\n    };\n    return <span>{date.toLocaleDateString('en-US', options)}</span>;\n  };\n\n  return (\n    <Dialog onClose={handleClose} aria-labelledby=\"stage-details-dialog\" open={open}>\n      <div>\n        <IconButton className={classes.closeButton} onClick={handleClose} size=\"large\">\n          <CloseIcon />\n        </IconButton>\n      </div>\n      <div className={classes.dialog}>\n        <div className={classes.label}>Stage:</div>\n        <Typography variant=\"subtitle1\">{stage}</Typography>\n        <Divider />\n        <span className={classes.label}>Person/Place:</span>\n        <Typography variant=\"subtitle1\">{personPlace}</Typography>\n        <Divider />\n        <span className={classes.label}>Status:</span>\n        <Typography variant=\"subtitle1\">{stageAssignment.status}</Typography>\n        <Divider />\n        <span className={classes.label}>Tasks: </span>\n        <List>\n          {stageAssignment.tasks.map(task => <ListItem key={task + Math.random()}>{task}</ListItem>)}\n        </List>\n        <Divider />\n        <span className={classes.label}>Date Assigned:</span>\n        <Typography variant=\"subtitle1\">{formatDate(stageAssignment.dateAssigned)}</Typography>\n        <Divider />\n        {stageAssignment.dateCompleted > 0 && <>\n          <span className={classes.label}>Date Completed:</span>\n          <Typography variant=\"subtitle1\">{formatDate(stageAssignment.dateCompleted)}</Typography>\n        </>}\n        <Divider />\n        <span className={classes.label}>{stageAssignment.status === 'complete' ? 'Time to Complete' : 'Time Elapsed'}</span>\n        <Typography variant=\"subtitle1\">{timeElapsed(stageAssignment.dateAssigned, stageAssignment.status, stageAssignment.completeTime)}</Typography>\n        <Divider />\n      </div>\n    </Dialog >\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\n// THIS PROJECT\n// components\nimport FormatTime from '../../../common/FormatTime';\nimport StageDetailsDialog from './StageDetailsDialog';\n// types\nimport { StageAssignment } from '../../../../types/StageAssignment';\n\nconst useStyles = makeStyles({\n  tableContainer: {\n    width: 'clamp(200px, 100%, 600px)',\n  },\n  table: {\n    minWidth: 450,\n    backgroundColor: '#F9F9F9',\n  },\n  stageButton: {\n    width: 75,\n    textAlign: 'left',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n  },\n});\n\ninterface HistoryTableProps {\n  sortedStageHistory: StageAssignment[];\n};\nexport default function HistoryTable(props: HistoryTableProps): React.ReactElement {\n  const classes = useStyles();\n  const { sortedStageHistory } = props;\n\n  const formatDateAssigned = (dateAssigned: number) => {\n    const date: Date = new Date(dateAssigned);\n    interface DateTimeFormatOptions {\n      year: '2-digit',\n      month: '2-digit',\n      day: '2-digit',\n    };\n    let options: DateTimeFormatOptions = {\n      year: '2-digit', month: '2-digit', day: '2-digit'\n    };\n    return <span>{date.toLocaleDateString('en-US', options)}</span>;\n  };\n\n  const timeElapsed = (dateAssigned: number, status: string, completeTime: number) => {\n    if (status === 'complete') {\n      return <FormatTime color='primary' milliseconds={completeTime} />;\n    } else {\n      const difference: number = Date.now() - dateAssigned;\n      return <FormatTime color='secondary' milliseconds={difference} />;\n    };\n  };\n\n  const [openStageDetailsDialog, setOpenStageDetailsDialog] = useState<boolean>(false);\n  const [dialogStageAssignment, setDialogStageAssignment] = useState<StageAssignment | undefined>();\n\n  const handleStageDetailsClick = (stageAssignment: StageAssignment) => {\n    setDialogStageAssignment(stageAssignment);\n    setOpenStageDetailsDialog(true);\n  };\n\n  const handleCloseDialog = () => {\n    setOpenStageDetailsDialog(false);\n    setDialogStageAssignment(undefined);\n  };\n\n  return (\n    <>\n      <TableContainer className={classes.tableContainer} component={Paper}>\n        <Table className={classes.table} size='small' aria-label=\"stage history table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Stage</TableCell>\n              <TableCell>Time</TableCell>\n              <TableCell>Person/Place</TableCell>\n              <TableCell>Assigned</TableCell>\n              <TableCell>Completed</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {sortedStageHistory.map((stage) => (\n              <TableRow key={stage.dateAssigned}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Button\n                    size='small'\n                    color={stage.status === 'incomplete' ? 'secondary' : 'inherit'}\n                    onClick={() => handleStageDetailsClick(stage)}\n                  >\n                    <span className={classes.stageButton}>{stage.stage.name}</span>\n                  </Button>\n                </TableCell>\n                <TableCell>{timeElapsed(stage.dateAssigned, stage.status, stage.completeTime)}</TableCell>\n                <TableCell>{stage.personPlace.name}</TableCell>\n                <TableCell component=\"th\" scope=\"row\">{formatDateAssigned(stage.dateAssigned)}</TableCell>\n                <TableCell>{stage.dateCompleted > 0 && formatDateAssigned(stage.dateCompleted)}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      {dialogStageAssignment &&\n        <StageDetailsDialog\n          open={openStageDetailsDialog}\n          onClose={handleCloseDialog}\n          stageAssignment={dialogStageAssignment}\n          timeElapsed={timeElapsed}\n        />}\n    </>\n  );\n}","// react\nimport { useState, useEffect, useCallback } from \"react\";\n// material-ui\nimport Skeleton from '@mui/material/Skeleton';\n// THIS PROJECT\n// components\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport HistoryTitleMenu from './HistoryTitleMenu';\nimport HistoryTable from './HistoryTable';\n// services\nimport { getStageHistory as getStageHistoryService } from '../../../../services/stages';\n// contexts\nimport { useDemoContext } from \"../../../../contexts/DemoContext\";\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { GetRequestStatus } from '../../../../types/ServiceRequests';\nimport { StageAssignment } from \"../../../../types/StageAssignment\";\nimport { ListOrder } from \"../../../../types/misc\";\n\ninterface StageHistoryTabProps {\n  vehicleId: string;\n};\nexport default function StageHistoryTab(props: StageHistoryTabProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { vehicleId } = props;\n\n  const [stageHistory, setStageHistory] = useState<StageAssignment[]>([]);\n  const [getStageHistoryStatus, setGetStageHistoryStatus] = useState<GetRequestStatus>('');\n\n  const getStageHistory = useCallback(async () => {\n    setGetStageHistoryStatus('loading');\n    await delay();\n    getStageHistoryService(vehicleId)\n      .then(result => {\n        mounted.current && result.data && setStageHistory(result.data);\n        mounted.current && setGetStageHistoryStatus(result.status as GetRequestStatus);\n      }, e => { });\n\n  },\n    [mounted, delay, vehicleId]\n  );\n\n  useEffect(() => {\n    getStageHistory();\n  }, [getStageHistory]);\n\n  // Sort stages by dateAssigned\n  const [order, setOrder] = useState<ListOrder>('asc');\n  const sortedStageHistory = [...stageHistory].sort((a, b) => {\n    let aDate = a.dateAssigned;\n    let bDate = b.dateAssigned;\n    if (order === 'desc') {\n      if (aDate < bDate) {\n        return -1;\n      }\n      if (aDate > bDate) {\n        return 1;\n      }\n      return 0;\n    }\n    if (order === 'asc') {\n      if (aDate > bDate) {\n        return -1;\n      }\n      if (aDate < bDate) {\n        return 1;\n      }\n      return 0;\n    }\n    return 0;\n  });\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <HistoryTitleMenu order={order} setOrder={setOrder} />\n        {getStageHistoryStatus === 'loading'\n          ? <Skeleton variant=\"rectangular\" width={'100%'} height={200} />\n          : <HistoryTable sortedStageHistory={sortedStageHistory} />}\n      </TabContent>\n    </ContentPaper>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useQuery } from '../../../hooks';\n// material-ui\nimport Tabs from '@mui/material/Tabs';\n// THIS PPROJECT\n// components\nimport DarkTab from '../../common/DarkTab';\nimport StageTab from './stageTab/StageTab';\nimport InfoTab from './infoTab/InfoTab';\nimport NotesTab from './notesTab/NotesTab';\nimport StageHistoryTab from './stageHistoryTab/StageHistoryTab';\n// types\nimport { VehicleDetailState, VehicleStatus } from '../../../types/Vehicle';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n};\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vehicle-tabpanel-${index}`}\n      aria-labelledby={`vehicle-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <div>{children}</div>\n      )}\n    </div>\n  );\n};\n\nfunction a11yProps(index: any) {\n  return {\n    id: `vehicle-tab-${index}`,\n    'aria-controls': `vehicle-tabpanel-${index}`,\n  };\n};\n\ninterface VehicleTabsProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function VehicleTabs(props: VehicleTabsProps): React.ReactElement {\n  const history = useHistory();\n  const query = useQuery();\n  const { vehicleDetailState } = props;\n  const { vehicle } = vehicleDetailState;\n\n  interface ParamTypes {\n    status: VehicleStatus;\n    tab: 'stage' | 'info' | 'notes' | 'history';\n  };\n\n  let { tab } = useParams<ParamTypes>();\n  const [tabValue, setTabValue] = useState<any>(tab);\n\n  useEffect(() => setTabValue(tab), [tab]);\n\n  const changeTab = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setTabValue(newValue);\n    // check if we have a 'prev' query parameter,if we do set previous to the trimmed path, if not set it to ''\n    const previous = query.get('prev')\n      ? window.location.href.replace(/.*(?=prev=)(prev=)/, '')\n      : '';\n    history.push(`/vehicle-details/id/${vehicle?.id}/${newValue}?prev=${previous}`);\n  };\n\n  return (\n    <div>\n      <Tabs\n        centered\n        value={tabValue}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={changeTab}\n        aria-label=\"vehicle details navigation\"\n      >\n        <DarkTab label=\"Stage\" value='stage' {...a11yProps('stage')} />\n        <DarkTab label=\"Info\" value='info' {...a11yProps('info')} />\n        <DarkTab label=\"Notes\" value='notes' {...a11yProps('notes')} />\n        <DarkTab label=\"History\" value='history' {...a11yProps('history')} />\n      </Tabs>\n      <TabPanel value={tabValue} index='stage'>\n        <StageTab vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='info'>\n        <InfoTab vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='notes'>\n        <NotesTab vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='history'>\n        {vehicle && <StageHistoryTab vehicleId={vehicle.id} />}\n      </TabPanel>\n    </div>\n  );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// material-ui\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\n// THIS PROJECT\n// hooks\nimport { useQuery } from '../../hooks';\nimport { useAuthContext } from '../../contexts/AuthContext';\n// services\nimport { assignStage } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { PostRequestStatus } from '../../types/ServiceRequests';\nimport { Set } from '../../types/misc';\nimport { DetailedVehicle } from '../../types/Vehicle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  buttonContainer: {\n    width: '100%',\n    textAlign: 'right',\n  },\n  button: {\n    marginTop: theme.spacing(2),\n    marginRight: theme.spacing(2),\n    marginBottom: theme.spacing(1),\n  }\n}));\n\ninterface DetailsDoneButtonProps {\n  disableDoneButton: boolean;\n  mounted: React.MutableRefObject<boolean>;\n  vehicle: DetailedVehicle | null;\n  setUpdateVehicleStatus: Set<PostRequestStatus>;\n};\nexport default function DetailsDoneButton(props: DetailsDoneButtonProps): React.ReactElement {\n  const query = useQuery();\n  const history = useHistory();\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n  const { disableDoneButton, mounted, vehicle, setUpdateVehicleStatus } = props;\n\n  const { defaultStageAssignment } = useAuthContext().userPreferences;\n\n  // if vehicle stage is complete, and a new stage has not been assigned, we need to assign the default\n  // stage assignment when the done button is clicked\n  const doneButtonClick = async () => {\n    // check if we have a 'prev' query parameter,if we do set previous to the trimmed path, if not set it to ''\n    const previous = query.get('prev')\n      ? window.location.href.replace(/.*(?=prev=)(prev=)/, '')\n      : '';\n    const exit = () => {\n      previous\n        ? !previous.includes('vehicle-details')\n          ? history.push(`${previous}`)\n          : history.push(`/all-vehicles/active/asc/10/first/0`)\n        : history.push(`/all-vehicles/active/asc/10/first/0`);\n    };\n    if (vehicle && vehicle.currentStage.status === 'complete' && vehicle.status !== 'sold') {\n      setUpdateVehicleStatus('loading');\n      await delay();\n      assignStage({\n        vehicleId: vehicle.id,\n        stage: defaultStageAssignment.stage,\n        personPlace: defaultStageAssignment.personPlace,\n        tasks: [],\n        dateAssigned: Date.now()\n      }).then(result => {\n        result.status === 'success' && exit();\n        mounted.current && result.status === 'failed' && setUpdateVehicleStatus('failed');\n      }, e => {\n        mounted.current && setUpdateVehicleStatus('failed');\n        console.error(e);\n      });\n    } else {\n      exit();\n    }\n  };\n\n  return (\n    <div className={classes.buttonContainer}>\n      {!disableDoneButton\n        ? <Button\n          onClick={doneButtonClick}\n          className={classes.button}\n          color='primary'\n          variant='contained'\n        >\n          Done\n        </Button>\n        : <Button\n          disabled\n          className={classes.button}\n          color='primary'\n          variant='contained'\n        >\n          Done\n        </Button>\n      }\n    </div>\n  );\n}","// THIS PROJECT\nimport { LargeCard, LargeContent, ContentHeader, ContentTitle } from '../common/cardContent';\nimport CenteredError from '../common/CenteredError';\n\ninterface VehicleFailedProps {\n  errorMessage?: string;\n  retryAction?: () => void;\n};\nexport default function VehicleFailed(props: VehicleFailedProps): React.ReactElement {\n  const { errorMessage: errorMessagetmp, retryAction } = props;\n  const errorMessage = errorMessagetmp\n    ? errorMessagetmp\n    : 'failed to load vehicle details';\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <ContentTitle variant='h5'>Vehicle Details:</ContentTitle>\n        </ContentHeader>\n        <CenteredError errorMessage={errorMessage} retryAction={retryAction} />\n      </LargeContent>\n    </LargeCard>\n  );\n}","// react-router-dom\nimport { Link } from 'react-router-dom';\n// material-ui\nimport { Typography, Button } from '@mui/material';\n// THIS PROJECT\nimport { FlexCenter } from '../common/flex';\n\nexport default function TrashedMessage(): React.ReactElement {\n  return (\n    <FlexCenter style={{ marginTop: 10 }}>\n      <Typography>This vehicle has been moved to the </Typography>\n      <Button><Link to='/all-vehicles/trash/asc/10/first/0'>Trash List</Link></Button>\n    </FlexCenter>\n  );\n}","// material-ui\nimport Divider from '@mui/material/Divider';\nimport Skeleton from '@mui/material/Skeleton';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader } from '../common/cardContent';\nimport { FlexCenter } from '../common/flex';\n\nexport default function GetVehicleLoading(): React.ReactElement {\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <Skeleton />\n          <Skeleton />\n        </ContentHeader>\n        <Divider />\n        <FlexCenter flexDirection='column' sx={{ height: 300 }}>\n          <CircularProgress />\n          <Typography>Updating vehicle...</Typography>\n        </FlexCenter>\n      </LargeContent>\n    </LargeCard>\n  );\n}","// react\nimport { useState, useEffect, useCallback } from 'react';\n// react-router-dom\nimport { useParams } from 'react-router-dom';\n// material-ui\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader } from '../common/cardContent';\nimport { FlexCenter } from '../common/flex';\nimport GetVehicleLoading from './GetVehicleLoading';\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\nimport ActionMenu from './ActionMenu';\nimport VehicleTabs from './vehicleTabs/VehicleTabs';\nimport DetailsDoneButton from './DetailsDoneButton';\nimport VehicleFailed from './VehicleFailed';\nimport CenteredError from '../common/CenteredError';\nimport TrashedMessage from './TrashedMessage';\nimport UpdateVehicleLoading from './UpdateVehicleLoading';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { findVehicle as findVehicleService } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { DetailedVehicle, VehicleDetailState } from '../../types/Vehicle';\nimport { GetRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\n\nconst useStyles = makeStyles(theme => ({\n  vehicleTitle: {\n    maxWidth: '80%',\n  },\n}));\n\nexport default function VehicleDetails(): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  type IdParam = { searchCriteria: 'id' | 'stock', searchValue: string; };\n  const { searchCriteria, searchValue } = useParams<IdParam>();\n\n  // VEHICLE INFO\n  const [vehicle, setVehicle] = useState<DetailedVehicle | null>(null);\n  const [getVehicleStatus, setGetVehicleStatus] = useState<GetRequestStatus>('loading');\n  const [getVehicleError, setGetVehicleError] = useState<string>('');\n  const [updateVehicleStatus, setUpdateVehicleStatus] = useState<PostRequestStatus>('');\n  const [disableDoneButton, setDisableDoneButton] = useState<boolean>(false);\n\n  const vehicleDetailState: VehicleDetailState = {\n    mounted,\n    vehicle, setVehicle,\n    getVehicleStatus, setGetVehicleStatus,\n    updateVehicleStatus, setUpdateVehicleStatus,\n    setDisableDoneButton\n  };\n\n  const findVehicle = useCallback(async () => {\n    setGetVehicleError('');\n    setGetVehicleStatus('loading');\n    await delay();\n    findVehicleService(searchCriteria, searchValue)\n      .then(result => {\n        mounted.current && result.status === 'success' && !result.data\n          && setGetVehicleError(`No vehicles match ${searchCriteria === 'stock' ? 'stk#' : 'id'}: ${searchValue}`);\n        mounted.current && setGetVehicleStatus(result.status as GetRequestStatus);\n        mounted.current && setVehicle(result.data);\n      }, e => {\n        mounted.current && setGetVehicleStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, searchCriteria, searchValue, mounted]\n  );\n\n  useEffect(() => {\n    findVehicle();\n  }, [findVehicle]);\n\n  if (getVehicleStatus === 'loading') {\n    return <GetVehicleLoading />;\n  };\n\n  if (updateVehicleStatus === 'loading') {\n    return <UpdateVehicleLoading />;\n  }\n\n  if (getVehicleStatus === 'failed' || getVehicleError !== '') {\n    return <VehicleFailed errorMessage={getVehicleError} retryAction={() => window.location.reload()} />;\n  };\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <FlexCenter style={{ position: 'relative' }} >\n            <div className={classes.vehicleTitle}>{vehicle && <VehicleInfo vehicle={vehicle} variant='h6' />}</div>\n            <Box position='absolute' right={0}>\n              {vehicleDetailState.vehicle && <ActionMenu vehicleDetailState={vehicleDetailState} mounted={mounted} />}\n            </Box>\n          </FlexCenter>\n        </ContentHeader>\n        <Divider />\n        {updateVehicleStatus === 'failed'\n          ? <CenteredError errorMessage='Failed to update vehicle details' />\n          : vehicle?.status === 'trash'\n            ? <TrashedMessage />\n            : <>\n              <VehicleTabs vehicleDetailState={vehicleDetailState} />\n              <DetailsDoneButton\n                disableDoneButton={disableDoneButton}\n                mounted={mounted}\n                vehicle={vehicle}\n                setUpdateVehicleStatus={setUpdateVehicleStatus}\n              />\n            </>}\n      </LargeContent>\n    </LargeCard>\n  );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Accordion from '@mui/material/Accordion';\n\nconst AccordionPaper = styled(Accordion)({\n  marginTop: 5,\n  marginBottom: 5,\n  border: '.5pt solid #D0D0D0',\n  width: '100%',\n});\n\nexport default AccordionPaper;","// material-ui\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// types\nimport { VehiclePage } from '../../../types/Vehicle';\nimport { Page } from '../../../types/misc';\n\ninterface NavigateAccordianVehicleListProps {\n  vehiclePage: VehiclePage;\n  getVehicles: (page: Page, compare: number) => void;\n}\nexport default function NavigateAccordianVehicleList(props: NavigateAccordianVehicleListProps): React.ReactElement {\n  const { vehiclePage, getVehicles } = props;\n  const { docStartNumber, docEndNumber, totalDocs, vehicles } = vehiclePage;\n  const dateAddedValues: number[] = [];\n  vehicles.forEach(vehicle => dateAddedValues.push(vehicle.dateAdded));\n  const maxDateAdded = Math.max(...dateAddedValues);\n  const minDateAdded = Math.min(...dateAddedValues);\n\n\n  const firstPageClick = () => {\n    getVehicles('first', 0);\n  };\n\n  const prevPageClick = () => {\n    docStartNumber !== 1 && getVehicles('prev', minDateAdded);\n  };\n\n  const nextPageClick = () => {\n    docEndNumber !== totalDocs && getVehicles('next', maxDateAdded);\n  };\n\n  const lastPageClick = () => {\n    docEndNumber !== totalDocs && getVehicles('last', 0);\n  };\n\n  if (totalDocs > 5) {\n    return (\n      <FlexCenter>\n        <IconButton\n          aria-label='first-page'\n          onClick={firstPageClick}\n          disabled={docStartNumber === 1}\n          size=\"large\">\n          <FirstPageIcon />\n        </IconButton>\n        <IconButton\n          aria-label='previous-page'\n          onClick={prevPageClick}\n          disabled={docStartNumber === 1}\n          size=\"large\">\n          <NavigateBeforeIcon />\n        </IconButton>\n        <Typography align='center'>({docStartNumber.toLocaleString()}-{docEndNumber.toLocaleString()}) / {totalDocs.toLocaleString()}</Typography>\n        <IconButton\n          aria-label='next-page'\n          onClick={nextPageClick}\n          disabled={docEndNumber === totalDocs}\n          size=\"large\">\n          <NavigateNextIcon />\n        </IconButton>\n        <IconButton\n          aria-label='last-page'\n          onClick={lastPageClick}\n          disabled={docEndNumber === totalDocs}\n          size=\"large\">\n          <LastPageIcon />\n        </IconButton>\n      </FlexCenter>\n    );\n  } else {\n    return <></>;\n  }\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../common/vehicles/VehicleListItemButton';\nimport FormatTime from '../common/FormatTime';\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../common/vehicles/VehicleChipGroup';\nimport VehicleChip from '../common/vehicles/VehicleChip';\nimport NavigateStageVehicleList from '../common/vehicles/NavigateAccordianVehicleList';\nimport LoadingList from '../common/LoadingList';\nimport CenteredError from '../common/CenteredError';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getVehiclesPaged } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { DetailedVehicle } from '../../types/Vehicle';\nimport { VehiclePage } from '../../types/Vehicle';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { Page } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n  accordianDetails: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n  },\n  vehicleList: {\n    width: '100%',\n  },\n}));\n\ninterface StageVehicleListProps {\n  stageId: string;\n}\nexport default function StageVehicleList(props: StageVehicleListProps): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { stageId } = props;\n\n  const [vehiclePage, setVehiclePage] = useState<VehiclePage>({ docStartNumber: 0, docEndNumber: 0, totalDocs: 0, vehicles: [] });\n  const [getVehiclesStatus, setGetVehiclesStatus] = useState<GetRequestStatus>('loading');\n\n  const getVehicles = useCallback(\n    async (page: Page, compare: number) => {\n      setGetVehiclesStatus('loading');\n      await delay();\n      getVehiclesPaged('active', 'asc', 5, page, compare, `stageId=${stageId}`)\n        .then(result => {\n          mounted.current && setGetVehiclesStatus(result.status as GetRequestStatus);\n          result.status === 'success' && mounted.current && result.data && setVehiclePage(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetVehiclesStatus('failed');\n          console.error(e);\n        });\n    },\n    [delay, mounted, stageId]\n  );\n\n  useEffect(() => { getVehicles('first', 0); }, [getVehicles]);\n\n  let list: JSX.Element;\n  if (getVehiclesStatus === 'failed') {\n    list = <CenteredError errorMessage='Error loading vehicles...' />;\n  } else if (getVehiclesStatus === 'loading') {\n    list = <LoadingList skeletonCount={10} />;\n  } else {\n    list = <>\n      <List className={classes.vehicleList}>\n        {vehiclePage.vehicles.map(vehicle => <StageVehicle key={vehicle.id} vehicle={vehicle} />)}\n      </List>\n      <NavigateStageVehicleList vehiclePage={vehiclePage} getVehicles={getVehicles} />\n    </>;\n  }\n  return (\n    <AccordionDetails className={classes.accordianDetails}>\n      {list}\n    </AccordionDetails>\n  );\n}\n\nconst useVehicleStyles = makeStyles(theme => ({\n  vehicle: {\n    width: '100%',\n  },\n  vehicleDivider: {\n    width: '98%',\n  },\n}));\n\ninterface VehicleProps {\n  vehicle: DetailedVehicle;\n};\nfunction StageVehicle(props: VehicleProps): React.ReactElement {\n  const classes = useVehicleStyles();\n  const history = useHistory();\n  const { vehicle } = props;\n\n  const timeElapsed = (dateAssigned: number) => {\n    const difference: number = Date.now() - dateAssigned;\n    return <FormatTime milliseconds={difference} />;\n  };\n\n  const selectVehicle = (vehicleId: string | undefined) => {\n    history.push(`/vehicle-details/id/${vehicleId}/stage?prev=/stages`);\n  };\n\n  return (\n    <div key={vehicle.id} className={classes.vehicle}>\n      <Divider className={classes.vehicleDivider} />\n      <VehicleListItemButton onClick={() => selectVehicle(vehicle.id)}>\n        <VehicleInfo vehicle={vehicle} listItem />\n        <VehicleChipGroup>\n          <VehicleChip size='small' label={timeElapsed(vehicle.currentStage.dateAssigned)} />\n          <VehicleChip size='small' label={vehicle.currentStage.personPlace.name} color='primary' />\n        </VehicleChipGroup>\n      </VehicleListItemButton>\n      <Divider className={classes.vehicleDivider} />\n    </div>\n  );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../common/vehicles/VehicleListItemButton';\nimport FormatTime from '../common/FormatTime';\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../common/vehicles/VehicleChipGroup';\nimport VehicleChip from '../common/vehicles/VehicleChip';\nimport NavigateAccordianVehicleList from '../common/vehicles/NavigateAccordianVehicleList';\nimport LoadingList from '../common/LoadingList';\nimport CenteredError from '../common/CenteredError';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getVehiclesPaged } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { DetailedVehicle } from '../../types/Vehicle';\nimport { VehiclePage } from '../../types/Vehicle';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { Page } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n  accordianDetails: {\n    padding: theme.spacing(2),\n    paddingTop: 0,\n  },\n  vehicleList: {\n    width: '100%',\n  },\n}));\n\ninterface PersonPlaceVehicleListProps {\n  personPlaceId: string;\n}\nexport default function PresonPlaceVehicleList(props: PersonPlaceVehicleListProps): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n  const { personPlaceId } = props;\n\n  const [vehiclePage, setVehiclePage] = useState<VehiclePage>({ docStartNumber: 0, docEndNumber: 0, totalDocs: 0, vehicles: [] });\n  const [getVehiclesStatus, setGetVehiclesStatus] = useState<GetRequestStatus>('loading');\n\n  const getVehicles = useCallback(\n    async (page: Page, compare: number) => {\n      setGetVehiclesStatus('loading');\n      await delay();\n      getVehiclesPaged('active', 'asc', 5, page, compare, `personPlaceId=${personPlaceId}`)\n        .then(result => {\n          mounted.current && setGetVehiclesStatus(result.status as GetRequestStatus);\n          result.status === 'success' && mounted.current && result.data && setVehiclePage(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetVehiclesStatus('failed');\n          console.error(e);\n        });\n    },\n    [delay, mounted, personPlaceId]\n  );\n\n  useEffect(() => { getVehicles('first', 0); }, [getVehicles]);\n\n  let list: JSX.Element;\n  if (getVehiclesStatus === 'failed') {\n    list = <CenteredError errorMessage='Error loading vehicles...' />;\n  } else if (getVehiclesStatus === 'loading') {\n    list = <LoadingList skeletonCount={5} />;\n  } else {\n    list = <>\n      <List className={classes.vehicleList}>\n        {vehiclePage.vehicles.map(vehicle => <PersonPlaceVehicle key={vehicle.id} vehicle={vehicle} />)}\n      </List>\n      <NavigateAccordianVehicleList vehiclePage={vehiclePage} getVehicles={getVehicles} />\n    </>;\n  }\n  return (\n    <AccordionDetails className={classes.accordianDetails}>\n      {list}\n    </AccordionDetails>\n  );\n}\n\nconst useVehicleStyles = makeStyles(theme => ({\n  vehicle: {\n    width: '100%',\n  },\n  vehicleDivider: {\n    width: '98%',\n  },\n}));\n\ninterface VehicleProps {\n  vehicle: DetailedVehicle;\n};\nfunction PersonPlaceVehicle(props: VehicleProps): React.ReactElement {\n  const classes = useVehicleStyles();\n  const history = useHistory();\n  const { vehicle } = props;\n\n  const timeElapsed = (dateAssigned: number) => {\n    const difference: number = Date.now() - dateAssigned;\n    return <FormatTime milliseconds={difference} />;\n  };\n\n  const selectVehicle = (vehicleId: string | undefined) => {\n    history.push(`/vehicle-details/id/${vehicleId}/stage?prev=/people-places`);\n  };\n\n  return (\n    <div key={vehicle.id} className={classes.vehicle}>\n      <Divider className={classes.vehicleDivider} />\n      <VehicleListItemButton onClick={() => selectVehicle(vehicle.id)}>\n        <VehicleInfo vehicle={vehicle} listItem />\n        <VehicleChipGroup>\n          <VehicleChip size='small' label={timeElapsed(vehicle.currentStage.dateAssigned)} />\n          <VehicleChip size='small' label={vehicle.currentStage.stage.name} color='primary' />\n        </VehicleChipGroup>\n      </VehicleListItemButton>\n      <Divider className={classes.vehicleDivider} />\n    </div>\n  );\n}","// react-router-dom\nimport makeStyles from '@mui/styles/makeStyles';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport AccordionPaper from '../AccordionPaper';\nimport StageVehicleList from '../../stages/StageVehicleList';\nimport PersonPlaceVehicleList from '../../people-places/PersonPlaceVehicleList';\n// types\nimport { IdName } from '../../../types/misc';\nimport { StageVehicleCount, PersonPlaceVehicleCount } from '../../../types/Stage';\n\n// PeoplePlaceList\nconst useStyles = makeStyles(theme => ({\n  list: {\n    margin: 'auto',\n    width: 'clamp(290px, 100%, 500px)',\n  },\n  accordianDetails: {\n    padding: 0,\n  },\n  vehicleList: {\n    width: '100%',\n  },\n}));\n\ntype Variant = 'peoplePlaces' | 'stages';\ninterface AccordianListProps {\n  variant: Variant;\n  accordianTitles: StageVehicleCount[] | PersonPlaceVehicleCount[];\n};\nexport default function AccordianList(props: AccordianListProps): React.ReactElement {\n  const classes = useStyles();\n  const { variant, accordianTitles } = props;\n\n  const determineTitleColor = (count: number, title: IdName) => {\n    if (variant === 'peoplePlaces') {\n      return title.name !== 'Small Town Auto Sales'\n        ? count > 5\n          ? 'secondary'\n          : 'primary'\n        : 'primary';\n    } else if (variant === 'stages') {\n      return title.name !== 'For Sale' ?\n        count > 5 ? 'secondary'\n          : 'primary'\n        : 'primary';\n    };\n  };\n\n  return (\n    <div className={classes.list}>\n      {accordianTitles.filter(title => title.count).map(title => {\n        return (\n          <div key={title.id}>\n            <AccordionPaper>\n              <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                <Typography color={determineTitleColor(title.count, title)}>\n                  {title.name} ({title.count.toLocaleString()})\n                </Typography>\n              </AccordionSummary>\n              {variant === 'stages'\n                ? <StageVehicleList stageId={title.id} />\n                : <PersonPlaceVehicleList personPlaceId={title.id} />}\n            </AccordionPaper>\n          </div>);\n      })}\n    </div >\n  );\n};\n","// react\nimport { useEffect, useState, useCallback } from 'react';\n// materal-ui\nimport Divider from '@mui/material/Divider';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport AccordianVehicleList from '../common/vehicles/AccordianVehicleList';\n// services\nimport { getPersonPlaceVehicleCounts as getPersonPlaceVehicleCountsService } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// types\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { PersonPlaceVehicleCount } from '../../types/Stage';\n\nexport default function PeoplePlaces(): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n\n  // Get People/Places\n  const [peoplePlaces, setPeoplePlaces] = useState<PersonPlaceVehicleCount[]>([]);\n  const [getPeoplePlacesStatus, setGetPeoplePlacesStatus] = useState<GetRequestStatus>('loading');\n\n  const getPersonPlaceVehicleCounts = useCallback(\n    async () => {\n      setGetPeoplePlacesStatus('loading');\n      await delay();\n      getPersonPlaceVehicleCountsService()\n        .then(result => {\n          mounted.current && setGetPeoplePlacesStatus(result.status as GetRequestStatus);\n          mounted.current && result.status === 'success' && result.data && setPeoplePlaces(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetPeoplePlacesStatus('failed');\n          console.error(e);\n        });\n    }, [delay, mounted]\n  );\n\n  useEffect(() => { getPersonPlaceVehicleCounts(); }, [getPersonPlaceVehicleCounts]);\n\n  let list: JSX.Element;\n  if (getPeoplePlacesStatus === 'failed') {\n    list = <CenteredError errorMessage='Error loading People/Places view....' retryAction={() => window.location.reload()} />;\n  } else if (getPeoplePlacesStatus === 'loading') {\n    list = <LoadingList skeletonCount={10} />;\n  } else {\n    list = <AccordianVehicleList variant='peoplePlaces' accordianTitles={peoplePlaces} />;\n  };\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<VisibilityIcon color='primary' />} variant='h5'>People/Places</IconContentTitle>\n          <Divider />\n        </ContentHeader>\n        <br></br>\n        {list}\n      </LargeContent>\n    </LargeCard>\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// services\nimport { updateStageOrder } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { StageSummary, UpdatedStageOrder } from \"../../types/Stage\";\nimport { PostRequestStatus } from '../../types/ServiceRequests';\nimport { Set } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n  updateButtons: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 10,\n  },\n  updateButton: {\n    width: 100,\n  },\n}));\n\ninterface ReorderButtonsProps {\n  mounted: React.MutableRefObject<boolean>;\n  setReorderStages: Set<boolean>;\n  originalStageOrder: StageSummary[];\n  editStageOrder: StageSummary[];\n  setEditStageOrder: Set<StageSummary[]>;\n  setOrderStagesStatus: Set<PostRequestStatus>;\n  getStageVehicleCounts: () => void;\n};\nexport default function ReorderButtons(props: ReorderButtonsProps): React.ReactElement {\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n  const {\n    mounted,\n    setReorderStages,\n    originalStageOrder,\n    editStageOrder, setEditStageOrder,\n    setOrderStagesStatus,\n    getStageVehicleCounts,\n  } = props;\n\n  const compareOrders = (original: StageSummary[], edit: StageSummary[]) => {\n    for (let i = 0; i < original.length; ++i) {\n      if (original[i] !== edit[i]) return false;\n    };\n    return true;\n  };\n\n  const updateStageOrderClick = async () => {\n    let newStageOrder: UpdatedStageOrder[] = [];\n\n    editStageOrder.forEach((stage, index) => {\n      if (stage !== originalStageOrder[index]) {\n        newStageOrder.push({\n          id: stage.id,\n          order: index\n        });\n      };\n    });\n    setOrderStagesStatus('loading');\n    await delay();\n    updateStageOrder(newStageOrder)\n      .then(result => {\n        mounted && setOrderStagesStatus(result.status);\n        mounted && result.status === 'failed' && console.error(result);\n        result.status === 'success' && getStageVehicleCounts();\n        mounted && setReorderStages(false);\n      }, e => {\n        mounted && setOrderStagesStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const cancelClick = () => {\n    setReorderStages(false);\n    setEditStageOrder(originalStageOrder);\n  };\n\n  return (\n    <FormControl className={classes.updateButtons}>\n      <Button className={classes.updateButton} onClick={cancelClick}>cancel</Button>\n      {compareOrders(originalStageOrder, editStageOrder)\n        ? <Button disabled className={classes.updateButton}>update</Button>\n        : <Button className={classes.updateButton} onClick={updateStageOrderClick} color='primary'>update</Button>}\n    </FormControl>\n  );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// react-beautiful-dnd\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport ReorderButtons from './ReorderButtons';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getStages as getStagesService } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { StageSummary } from \"../../types/Stage\";\nimport { GetRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\nimport { Set } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n  stage: {\n    marginTop: 5,\n    marginBottom: 5,\n    border: '1pt solid #999999',\n  },\n  list: {\n    backgroundColor: '#F9F9F9',\n    padding: theme.spacing(1),\n  },\n}));\n\ninterface ReorderStagesProps {\n  setReorderStages: Set<boolean>;\n  getStageVehicleCounts: () => void;\n};\nexport default function ReorderStages(props: ReorderStagesProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const classes = useStyles();\n  const { delay } = useDemoContext();\n  const { setReorderStages, getStageVehicleCounts } = props;\n\n  const [originalStageOrder, setOriginalStageOrder] = useState<StageSummary[]>([]);\n  const [editStageOrder, setEditStageOrder] = useState<StageSummary[]>([]);\n  const [getStagesStatus, setGetStagesStatus] = useState<GetRequestStatus>('');\n  const [orderStagesStatus, setOrderStagesStatus] = useState<PostRequestStatus>('');\n\n  const getStages = useCallback(async () => {\n    setGetStagesStatus('loading');\n    await delay();\n    getStagesService()\n      .then(result => {\n        mounted.current && setGetStagesStatus(result.status as GetRequestStatus);\n        if (result.status === 'success' && mounted.current && result.data) {\n          setOriginalStageOrder(result.data);\n          setEditStageOrder(result.data);\n        }\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setGetStagesStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted]\n  );\n\n  useEffect(() => {\n    getStages();\n  }, [getStages]);\n\n  const handleOnDragEnd = (result: DropResult) => {\n    const newStageOrder = [...editStageOrder];\n    const [reorderedStage] = newStageOrder.splice(result.source.index, 1);\n    if (result.destination) {\n      newStageOrder.splice(result.destination.index, 0, reorderedStage);\n    };\n    setEditStageOrder(newStageOrder);\n  };\n\n  const defaultReturn = (\n    <>\n      <Accordion disabled className={classes.stage}>\n        <AccordionSummary>\n          <Typography>Assign</Typography>\n        </AccordionSummary>\n      </Accordion>\n      <DragDropContext onDragEnd={handleOnDragEnd}>\n        <Droppable droppableId='stages'>\n          {(provided) => (\n            <List className={classes.list} {...provided.droppableProps} ref={provided.innerRef}>\n              {editStageOrder.map((stage, index) => {\n                if (stage.name !== 'Assign' && stage.name !== 'For Sale') {\n                  return (\n                    <Draggable key={stage.id} draggableId={stage.id} index={index}>\n                      {(provided) => (\n                        <Accordion\n                          className={classes.stage}\n                          ref={provided.innerRef}\n                          {...provided.draggableProps}\n                          {...provided.dragHandleProps}\n                        >\n                          <AccordionSummary\n                            expandIcon={<DragIndicatorIcon />}\n                          >\n                            <Typography>{stage.name}</Typography>\n                          </AccordionSummary>\n                        </Accordion>\n                      )}\n                    </Draggable>\n                  );\n                } else return <span key={stage.id}></span>;\n              })}\n              {provided.placeholder}\n            </List>\n          )}\n        </Droppable>\n      </DragDropContext>\n      <Accordion disabled className={classes.stage}>\n        <AccordionSummary>\n          <Typography>For Sale</Typography>\n        </AccordionSummary>\n      </Accordion>\n      <ReorderButtons\n        mounted={mounted}\n        setReorderStages={setReorderStages}\n        originalStageOrder={originalStageOrder}\n        editStageOrder={editStageOrder}\n        setEditStageOrder={setEditStageOrder}\n        setOrderStagesStatus={setOrderStagesStatus}\n        getStageVehicleCounts={getStageVehicleCounts}\n      />\n    </>\n  );\n\n  switch (getStagesStatus) {\n    case ('failed'):\n      return <CenteredError errorMessage='Error loading Edit Stage Order' />;\n    case ('loading'):\n      return <LoadingList skeletonCount={10} />;\n    default:\n      switch (orderStagesStatus) {\n        case ('failed'):\n          return <CenteredError errorMessage='Error saving Edited Stage Order' />;\n        case ('loading'):\n          return <LoadingList skeletonCount={10} />;\n        default:\n          return defaultReturn;\n      }\n  }\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport ImportExportIcon from '@mui/icons-material/ImportExport';\nimport Visibility from '@mui/icons-material/Visibility';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport { FlexEnd } from '../common/flex';\nimport AccordianVehicleList from '../common/vehicles/AccordianVehicleList';\nimport ReorderStages from './ReorderStages';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getStageVehicleCounts as getStageVehicleCountsService } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { StageVehicleCount } from '../../types/Stage';\n\nexport default function Stages(): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n\n  // Get Stages\n  const [stages, setStages] = useState<StageVehicleCount[]>([]);\n  const [getStagesStatus, setGetStagesStatus] = useState<GetRequestStatus>('loading');\n\n  const getStageVehicleCounts = useCallback(\n    async () => {\n      setGetStagesStatus('loading');\n      await delay();\n      getStageVehicleCountsService()\n        .then(result => {\n          mounted.current && setGetStagesStatus(result.status as GetRequestStatus);\n          mounted.current && result.status === 'success' && result.data && setStages(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetStagesStatus('failed');\n          console.error(e);\n        });\n    }, [delay, mounted]\n  );\n\n  useEffect(() => { getStageVehicleCounts(); }, [getStageVehicleCounts]);\n\n  // for opening Reorder Stages \n  const [reorderStages, setReorderStages] = useState<boolean>(false);\n\n  const reorderClick = () => {\n    setReorderStages(reorderStages ? false : true);\n  };\n\n  let list: JSX.Element;\n  if (getStagesStatus === 'failed') {\n    list = <CenteredError errorMessage='Error loading Stages view...' retryAction={() => window.location.reload()} />;\n  } else if (getStagesStatus === 'loading') {\n    list = <LoadingList skeletonCount={10} />;\n  } else if (reorderStages) {\n    list = (\n      <ReorderStages\n        setReorderStages={setReorderStages}\n        getStageVehicleCounts={getStageVehicleCounts}\n      />\n    );\n  } else {\n    list = <AccordianVehicleList variant='stages' accordianTitles={stages} />;\n  };\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<Visibility color='primary' />} variant='h5'>Stages</IconContentTitle>\n          <Divider />\n        </ContentHeader>\n        <FlexEnd>\n          <Button\n            startIcon={<ImportExportIcon />}\n            onClick={reorderClick}\n          >\n            reorder\n          </Button>\n        </FlexEnd>\n        {list}\n      </LargeContent>\n    </LargeCard>\n  );\n}","export default function formatTimeText(milliseconds: number) {\n  if (milliseconds < (1000 * 60)) {\n    return `${Math.round(milliseconds / 1000)} secs`;\n  } else if (milliseconds < (1000 * 60 * 60)) {\n    return `${Math.round(milliseconds / (1000 * 60))} mins`;\n  } else if (milliseconds < (1000 * 60 * 60 * 24)) {\n    return `${Math.round(milliseconds / (1000 * 60 * 60))} hrs`;\n  } else {\n    // round days to one decimal point\n    return `${Math.round(milliseconds / (1000 * 60 * 60 * 24) * 10) / 10} days`;\n  };\n}","// react\nimport { useRef, useLayoutEffect } from 'react';\n// d3\nimport * as d3 from 'd3';\nimport { PieArcDatum } from 'd3-shape';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// types\nimport { NameValueData } from '../../types/Statistics';\n// utilities\nimport formatTimeText from '../../utilityFunctions/formatTimeText';\n\nconst useStyles = makeStyles({\n  donutChart: {\n    height: '100%',\n    width: '100%',\n  },\n});\n\ninterface DonutChartProps {\n  data: NameValueData[];\n  total: number;\n  totalLabel: string;\n};\nexport default function DonutChart(props: DonutChartProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { data, total, totalLabel } = props;\n\n  const d3Container = useRef(null);\n\n  useLayoutEffect(() => {\n    // functions and variables\n    const color = d3.scaleOrdinal()\n      .domain(data.map((d: NameValueData) => d.name))\n      .range(d3.schemeSet1);\n\n    const pie = d3.pie<NameValueData>()\n      .padAngle(0.005)\n      .sort(null)\n      .value(d => d.value);\n\n    const arcs = pie(data);\n\n    const width = 500;\n\n    const donutMarginSides = 50;\n    const donutMarginTop = 10;\n    const donutMarginBottom = 20;\n    const donutRadius = (width - (donutMarginSides * 2)) / 2;\n    const donutDiameter = donutRadius * 2;\n    const donutContainerHeight = donutDiameter + donutMarginTop + donutMarginBottom;\n\n    const legendItems = arcs.filter(d => (d.endAngle - d.startAngle) <= 0.25);\n    const legendItemRectSides = 20;\n    const legendItemRectMargin = 5;\n    const legendItemTotalHeight = legendItemRectSides + (legendItemRectMargin * 2);\n    const legendMarginTop = 0;\n    const legendMarginBottom = 10;\n    const legendMarginSides = 25;\n    const legendHeight = legendItems.length * legendItemTotalHeight + legendMarginTop + legendMarginBottom;\n\n\n    const height = donutContainerHeight + legendHeight;\n\n    const arc = () => {\n      return d3.arc<PieArcDatum<NameValueData>>().innerRadius(donutRadius * 0.7).outerRadius(donutRadius);\n    };\n\n    let fill = (d: d3.PieArcDatum<NameValueData>): string => color(d.data.name) as string;\n\n    const generateId = (name: string) => name.split(' ').join('');\n\n    // remove any old chart before appending a refreshed one\n    d3.select('#donut-chart').remove();\n\n    // full svg\n    const svg = d3.select(d3Container.current)\n      .append('svg')\n      .attr('id', 'donut-chart')\n      .attr(\"viewBox\", `0, 0, ${width}, ${height}`);\n\n    // shadow effect\n    const defs = svg.append('defs');\n\n    const filter = defs.append('filter')\n      .attr('id', 'drop-shadow')\n      .attr('height', '150%')\n      .attr('width', '150%');\n\n    filter.append('feGaussianBlur')\n      .attr('in', 'SourceAlpha')\n      .attr('stdDeviation', 2)\n      .attr('result', 'blur');\n\n    filter.append('feOffset')\n      .attr('in', 'blur')\n      .attr('dx', 3)\n      .attr('dy', 3)\n      .attr('result', 'offsetBlur');\n\n    const feMerge = filter.append('feMerge');\n\n    feMerge.append('feMergeNode')\n      .attr('in', 'offsetBlur');\n    feMerge.append('feMergeNode')\n      .attr('in', 'SourceGraphic');\n\n    // donut chart viewbox variables\n    const viewBoxY = legendHeight + donutMarginBottom - (height / 2);\n    const viewBoxX = - (width / 2);\n\n    // chart shadow\n    const shadowSvg = svg.append('svg')\n      .attr('viewBox', `${viewBoxX}, ${viewBoxY}, ${width} ,${donutDiameter}`);\n\n    shadowSvg.selectAll('path')\n      .data(pie([{ name: '', value: 1 }]))\n      .join('path')\n      .attr('fill', 'white')\n      .attr('d', arc())\n      .style('filter', 'url(#drop-shadow)');\n\n    // chart pieces\n    const chartSvg = svg.append('svg')\n      .attr('viewBox', `${viewBoxX}, ${viewBoxY}, ${width} ,${donutDiameter}`);\n\n    chartSvg.selectAll('path')\n      .data(arcs)\n      .join('path')\n      .attr('fill', fill)\n      .attr('d', arc())\n      .append('title')\n      .text(d => `${d.data.name}: ${formatTimeText(d.data.value)}`);\n\n    // labels\n    chartSvg.append('g')\n      .attr('id', 'labelG')\n      .attr('font-size', 14)\n      .attr('text-anchor', 'middle')\n      .selectAll('text')\n      .data(arcs)\n      .join('text')\n      .attr('id', d => generateId(d.data.name))\n      .attr('transform', d => `translate(${arc().centroid(d)})`)\n      .style('fill', 'white')\n      .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append('tspan')\n        .attr('y', '-0.4em')\n        .text(d => d.data.name))\n      .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append('tspan')\n        .attr('x', 0)\n        .attr('y', '0.7em')\n        .text(d => `${formatTimeText(d.data.value)}`));\n\n    // label boxes\n    const labelBoxPaddingSides = 5;\n    const labelBoxPaddingTopBottom = 5;\n\n    chartSvg.insert('g', '#labelG')\n      .selectAll('rect')\n      .data(arcs)\n      .join('rect')\n      .attr('x',\n        (d: d3.PieArcDatum<NameValueData>): number => {\n          const width = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().width;\n          const totalWidth = width && width + labelBoxPaddingSides * 2;\n          return (totalWidth && -(totalWidth / 2)) as number;\n        })\n      .attr('y',\n        (d: d3.PieArcDatum<NameValueData>): number => {\n          const height = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().height;\n          const totalHeight = height && height + labelBoxPaddingTopBottom * 2;\n          return (totalHeight && -(totalHeight / 2)) as number;\n        })\n      .attr('width',\n        (d: d3.PieArcDatum<NameValueData>): number => {\n          const width = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().width;\n          const totalWidth = width && width + labelBoxPaddingSides * 2;\n          return totalWidth as number;\n        })\n      .attr('height',\n        (d: d3.PieArcDatum<NameValueData>): number => {\n          const height = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().height;\n          const totalHeight = height && height + labelBoxPaddingTopBottom * 2;\n          return totalHeight as number;\n        })\n      .attr('fill', 'black')\n      .attr('fill-opacity', 0.5)\n      .attr('rx', 5)\n      .attr('transform', d => `translate(${arc().centroid(d)})`);\n\n    // center label\n    const totalGroup = chartSvg.append('g')\n      .append('text')\n      .attr('text-anchor', 'middle');\n\n    totalGroup\n      .append('tspan')\n      .text(total ? `${formatTimeText(total)}` : 'N/A')\n      .attr('font-size', 48);\n\n\n    totalGroup\n      .append('tspan')\n      .text(totalLabel)\n      .attr('y', 30)\n      .attr('x', 0);\n\n    // legend\n    const legend = svg.append('g');\n\n    const legendXStart = legendMarginSides;\n    const legendYStart = donutContainerHeight + legendMarginTop;\n\n    legend.selectAll('rect')\n      .data(legendItems)\n      .join('rect')\n      .attr('height', legendItemRectSides)\n      .attr('width', legendItemRectSides)\n      .attr('fill', fill)\n      .attr('stroke', 'black')\n      .attr('stroke-width', 0.5)\n      .attr('x', legendXStart)\n      .attr('y', (d, i) => legendYStart + (i * legendItemTotalHeight))\n      .style('filter', 'url(#drop-shadow)');\n\n    legend.selectAll('text')\n      .data(legendItems)\n      .join('text')\n      .attr('text-anchor', 'start')\n      .attr('font-size', 14)\n      .attr('x', legendXStart + legendItemTotalHeight)\n      .attr('y', (d, i) => legendYStart + (i * legendItemTotalHeight) + (legendItemRectSides * .75))\n      .text(d => `${d.data.name} / ${formatTimeText(d.data.value)}`);\n\n  }, [data, total, totalLabel]);\n\n  return (\n    <Paper ref={d3Container} className={classes.donutChart}></Paper>\n  );\n};\n","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport VehicleChip from '../../../common/vehicles/VehicleChip';\nimport SoldVehicleChip from '../../../common/vehicles/SoldVehicleChip';\nimport FormatTime from '../../../common/FormatTime';\n// types\nimport { VehicleTurnStats } from '../../../../types/Statistics';\n\nconst useStyles = makeStyles({\n  chip: {\n    minWidth: 95,\n  },\n});\n\ninterface OverviewDetailsTableProps {\n  turnStatistics: VehicleTurnStats;\n};\nexport default function OverviewDetailsTable(props: OverviewDetailsTableProps): React.ReactElement {\n  const classes = useStyles();\n  const { count, average, median, mode } = props.turnStatistics;\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"overview stats table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Overview</TableCell>\n            <TableCell align='center'>Average</TableCell>\n            <TableCell align='center'>Median</TableCell>\n            <TableCell align='center'>Mode (days)</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\" align=\"left\">\n              Become For Sale ({count.getForSale}):\n            </TableCell>\n            <TableCell align='center'>\n              <VehicleChip\n                className={classes.chip}\n                color='primary'\n                label={<FormatTime milliseconds={average.getForSale} />}\n              />\n            </TableCell>\n            <TableCell align='center'>\n              <VehicleChip\n                className={classes.chip}\n                color='primary'\n                label={<FormatTime milliseconds={median.getForSale} />}\n              />\n            </TableCell>\n            <TableCell align='center'>\n              <VehicleChip\n                className={classes.chip}\n                color='primary'\n                label={`${mode.getForSale} / ${mode.getForSalePercent}%`}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\" align=\"left\">\n              To Be Sold ({count.getSold}):\n            </TableCell>\n            <TableCell align='center'>\n              <SoldVehicleChip\n                className={classes.chip}\n                label={<FormatTime milliseconds={average.getSold} />}\n              />\n            </TableCell>\n            <TableCell align='center'>\n              <SoldVehicleChip\n                className={classes.chip}\n                label={<FormatTime milliseconds={median.getSold} />}\n              />\n            </TableCell>\n            <TableCell align='center'>\n              <SoldVehicleChip\n                className={classes.chip}\n                label={`${mode.getSold} / ${mode.getSoldPercent}%`}\n              />\n            </TableCell>\n          </TableRow>\n          <TableRow>\n            <TableCell component=\"th\" scope=\"row\" align=\"left\">\n              Total Turn Time ({count.total}):\n            </TableCell>\n            <TableCell align='center'>\n              <VehicleChip\n                className={classes.chip}\n                label={<FormatTime milliseconds={average.total} />}\n              />\n            </TableCell>\n            <TableCell align='center'>\n              <VehicleChip\n                className={classes.chip}\n                label={<FormatTime milliseconds={median.total} />}\n              />\n            </TableCell>\n            <TableCell align='center'>\n              <VehicleChip\n                className={classes.chip}\n                label={`${mode.total} / ${mode.totalPercent}%`}\n              />\n            </TableCell>\n          </TableRow>\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}","// react\nimport { useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Collapse from '@mui/material/Collapse';\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    marginTop: theme.spacing(2),\n  },\n}));\n\ninterface DetailsButtonProps {\n  children: React.ReactChild | React.ReactChild[];\n};\nexport default function DetailsButton(props: DetailsButtonProps): React.ReactElement {\n  const classes = useStyles();\n  const { children } = props;\n  const [showDetails, setShowDetails] = useState<boolean>(false);\n\n  const toggleShowDetails = () => {\n    showDetails && setShowDetails(false);\n    !showDetails && setShowDetails(true);\n  };\n\n  return (\n    <>\n      <Button\n        startIcon={!showDetails ? <AddIcon /> : <RemoveIcon />}\n        onClick={toggleShowDetails}\n        size='large'\n        className={classes.button}\n      >\n        Details\n      </Button>\n      <Collapse in={showDetails} timeout='auto' style={{ width: '100%' }}>\n        {children}\n      </Collapse>\n    </>\n  );\n}","// material-ui\nimport Skeleton from '@mui/material/Skeleton';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../../../common/flex';\nimport DonutChart from '../../../common/DonutChart';\nimport CenteredError from '../../../common/CenteredError';\nimport OverviewDetailsTable from './OverviewDetailsTable';\nimport DetailsButton from '../DetailsButton';\n// types\nimport { VehicleTurnStats, NameValueData } from '../../../../types/Statistics';\nimport { GetRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface OverviewStatisticsProps {\n  turnStatistics: VehicleTurnStats | null;\n  getTurnStatsStatus: GetRequestStatus;\n};\nexport default function OverviewStatistics(props: OverviewStatisticsProps): React.ReactElement {\n  const { turnStatistics, getTurnStatsStatus } = props;\n  const count = turnStatistics?.count;\n  const average = turnStatistics?.average;\n  const median = turnStatistics?.median;\n  const mode = turnStatistics?.mode;\n\n  const chartData: NameValueData[] = average\n    ? [\n      { name: 'Recondition Time', value: average.getForSale },\n      { name: 'To Get Sold', value: average.getSold }\n    ]\n    : [];\n\n  if (getTurnStatsStatus === 'loading') {\n    return (\n      <Paper>\n        <FlexCenter flexDirection='column' sx={{ height: 500 }}>\n          <Skeleton variant='rectangular' height={'90%'} width={'90%'} style={{ margin: 'auto' }} />\n        </FlexCenter>\n      </Paper>\n    );\n  } else if (getTurnStatsStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to load statistics...' retryAction={() => window.location.reload()} />;\n  } else {\n    return (\n      <>\n        {turnStatistics && count && average && median && mode\n          ? <FlexCenter flexDirection='column'>\n            <DonutChart\n              data={chartData}\n              total={average.total}\n              totalLabel='avg total time to be sold'\n            />\n            <DetailsButton>\n              <OverviewDetailsTable turnStatistics={turnStatistics} />\n            </DetailsButton>\n          </FlexCenter>\n          : <></>}\n      </>\n    );\n  };\n}","// material-ui\nimport Dialog from '@mui/material/Dialog';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n  dialog: {\n    padding: 10,\n  },\n});\n\ninterface FullNameDialogProps {\n  open: boolean;\n  selectedValue: string;\n  onClose: () => void;\n};\nexport default function FullNameDialog(props: FullNameDialogProps): React.ReactElement {\n  const classes = useStyles();\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  return (\n    <Dialog onClose={handleClose} open={open}>\n      <Paper className={classes.dialog}>\n        <Typography variant='subtitle1'>{selectedValue}</Typography>\n      </Paper>\n    </Dialog>\n  );\n}","// react\nimport { useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n// THIS PROJECT\n// components\nimport AccordionPaper from '../../common/AccordionPaper';\nimport FormatTime from '../../common/FormatTime';\nimport FullNameDialog from './FullNameDialog';\nimport { FlexStart } from '../../common/flex';\n// types\nimport { DetailedAssignmentStats } from '../../../types/Statistics';\n\nconst useStyles = makeStyles({\n  list: {\n    width: '100%',\n  },\n  accordionDetails: {\n    padding: 0,\n  },\n  shortData: {\n    minWidth: 50,\n    textAlign: 'left',\n  },\n  longData: {\n    minWidth: 50,\n  },\n  personPlaceLabel: {\n    width: 'clamp(150px, 50vw, 200px)',\n    whiteSpace: 'nowrap',\n  },\n  subLabel: {\n    maxWidth: 175,\n    maxHeight: 20,\n    overflowWrap: 'break-word',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis',\n    cursor: 'pointer',\n    marginRight: 4,\n  },\n  timeDifferenceLabel: {\n    fontSize: 10,\n  },\n  tableContainer: {\n    width: '100%',\n  },\n  table: {\n    minWidth: 450,\n  },\n});\n\ninterface StatisticDetailsProps {\n  statistics: DetailedAssignmentStats[];\n};\nexport default function StatisticDetails(props: StatisticDetailsProps): React.ReactElement {\n  const classes = useStyles();\n  const { statistics } = props;\n\n  const [openFullNameDialog, setOpenFullNameDialog] = useState(false);\n  const [selectedValue, setSelectedValue] = useState('');\n\n  const handleClickFullName = (value: string): void => {\n    setOpenFullNameDialog(true);\n    setSelectedValue(value);\n  };\n\n  const handleClose = () => {\n    setOpenFullNameDialog(false);\n    setSelectedValue('');\n  };\n\n  return (\n    <>\n      <List className={classes.list}>\n        {statistics.map((doc: DetailedAssignmentStats) => {\n          return <div key={doc.name}>\n            <AccordionPaper>\n              <AccordionSummary\n                expandIcon={<ExpandMoreIcon />}\n              >\n                <Typography>{doc.name} ({doc.count})</Typography>\n              </AccordionSummary>\n              <AccordionDetails className={classes.accordionDetails}>\n                <TableContainer className={classes.tableContainer} component={Paper}>\n                  <Table className={classes.table} size='small' aria-label='stage statistics table'>\n                    <TableHead>\n                      <TableRow>\n                        <TableCell>Person/Place</TableCell>\n                        <TableCell>Avg</TableCell>\n                        <TableCell>Median</TableCell>\n                        <TableCell>Mode  <span className={classes.timeDifferenceLabel}>(days)</span></TableCell>\n                      </TableRow>\n                    </TableHead>\n                    <TableBody>\n                      <TableRow>\n                        <TableCell component='th' scope='row'>All ({doc.count})</TableCell>\n                        <TableCell>\n                          <div className={classes.shortData}>\n                            <FormatTime milliseconds={doc.average} />\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className={classes.shortData}>\n                            <FormatTime milliseconds={doc.median} />\n                          </div>\n                        </TableCell>\n                        <TableCell>\n                          <div className={classes.longData}>\n                            {doc.mode} / {doc.modePercent}%\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                      {doc.portions.map(doc => {\n                        return <TableRow key={doc.name}>\n                          <TableCell component='th' scope='row' onClick={() => handleClickFullName(doc.name)}>\n                            <div className={classes.personPlaceLabel}>\n                              <FlexStart whiteSpace='nowrap'>\n                                <div className={classes.subLabel}>{doc.name} </div>\n                                <div> ({doc.count})</div>\n                              </FlexStart>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className={classes.shortData}>\n                              <FormatTime milliseconds={doc.average} />\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className={classes.shortData}>\n                              <FormatTime milliseconds={doc.median} />\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className={classes.longData}>\n                              {doc.mode} / {doc.modePercent}%\n                            </div>\n                          </TableCell>\n                        </TableRow>;\n                      })}\n                    </TableBody>\n                  </Table>\n                </TableContainer>\n              </AccordionDetails>\n            </AccordionPaper>\n          </div>;\n        })}\n      </List>\n      <FullNameDialog selectedValue={selectedValue} open={openFullNameDialog} onClose={handleClose} />\n    </>\n  );\n}","// types\nimport { FailedResult, GetSuccess } from '../types/ServiceResults';\nimport { VehicleTurnStats, StageAssignmentStats, StageAssignmentStatsInclPercentile } from '../types/Statistics';\n\nconst statistics = 'http://localhost:7000/api/statistics';\n\nexport async function getVehicleTurnStats(): Promise<GetSuccess<VehicleTurnStats> | FailedResult> {\n  const response = await fetch(statistics + '/vehicle-turn-statistics');\n  const json = await response.json();\n  return json;\n};\n\nexport async function getStagesStatistics(): Promise<GetSuccess<StageAssignmentStats> | FailedResult> {\n  const response = await fetch(statistics + '/stages-statistics');\n  const json = await response.json();\n  return json;\n};\n\nexport async function getPeoplePlacesStatistics(): Promise<GetSuccess<StageAssignmentStatsInclPercentile> | FailedResult> {\n  const response = await fetch(statistics + '/people-places-statistics');\n  const json = await response.json();\n  return json;\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Skeleton from '@mui/material/Skeleton';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport DonutChart from '../../common/DonutChart';\nimport CenteredError from '../../common/CenteredError';\nimport { FlexCenter } from '../../common/flex';\nimport StatisticDetails from './StatisticDetails';\nimport DetailsButton from './DetailsButton';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { getStagesStatistics as getStagesStatisticsService } from '../../../services/statistics';\n// types\nimport { NameValueData, DetailedAssignmentStats } from '../../../types/Statistics';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface StageStatisticsProps {\n  forSaleAvg: number,\n};\nexport default function StagesStatistics(props: StageStatisticsProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { forSaleAvg } = props;\n  const { delay } = useDemoContext();\n\n  const [getStatsStatus, setGetStatsStatus] = useState<GetRequestStatus>('loading');\n\n  const [chartData, setChartData] = useState<NameValueData[] | null>(null);\n  const [statistics, setStatistics] = useState<DetailedAssignmentStats[] | null>(null);\n\n  const getStagesStatistics = useCallback(async () => {\n    setGetStatsStatus('loading');\n    await delay();\n    getStagesStatisticsService()\n      .then(result => {\n        mounted.current && setGetStatsStatus(result.status as GetRequestStatus);\n        if (result.status === 'success' && mounted.current && result.data) {\n          setChartData(result.data.avgOverview.filter(doc => doc.name !== 'For Sale'));\n          setStatistics(result.data.details);\n        }\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setGetStatsStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted]\n  );\n\n  useEffect(() => {\n    getStagesStatistics();\n  }, [getStagesStatistics]);\n\n  if (getStatsStatus === 'loading') {\n    return (\n      <Paper>\n        <FlexCenter flexDirection='column' sx={{ height: 500 }}>\n          <Skeleton variant='rectangular' height={'90%'} width={'90%'} style={{ margin: 'auto' }} />\n        </FlexCenter>\n      </Paper>\n    );\n  };\n  if (getStatsStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to load statistics...' retryAction={() => window.location.reload()} />;\n  };\n  return (\n    <>\n      {chartData && statistics\n        ? <FlexCenter flexDirection='column'>\n          <DonutChart\n            data={chartData}\n            total={forSaleAvg}\n            totalLabel='avg time to get \"For Sale\"'\n          />\n          <DetailsButton>\n            <StatisticDetails statistics={statistics} />\n          </DetailsButton>\n        </FlexCenter>\n        : <></>}\n    </>\n  );\n}","// react\nimport { useRef, useLayoutEffect } from 'react';\n// d3\nimport * as d3 from 'd3';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// types\nimport { NameValueDataInclPercentile } from '../../types/Statistics';\n// utilities\nimport formatTimeText from '../../utilityFunctions/formatTimeText';\n\nconst useStyles = makeStyles({\n  chart: {\n    height: '100%',\n    width: '100%'\n  }\n});\n\ninterface VerticalBarChartProps {\n  data: NameValueDataInclPercentile[];\n};\nexport default function VerticalBarChart(props: VerticalBarChartProps): React.ReactElement {\n  const classes = useStyles();\n\n  const { data } = props;\n\n  const d3Container = useRef(null);\n\n  useLayoutEffect(() => {\n    // functions and variables\n    const barHeight = 20;\n    const barMargin = 30;\n    const paddingBottom = 20;\n\n    const height = (barHeight + barMargin) * data.length + paddingBottom;\n    const width = 500;\n    const padding = 20;\n\n    const sortedData = [...data].sort((a, b) => b.value - a.value);\n\n    const xScale = d3.scaleLinear()\n      .domain([0, d3.max(data.map(d => d.value))] as [number, number])\n      .range([0, width - (padding * 2) - 75]);\n\n    // const fill = (d: NameValueDataInclPercentile) => color(d.name);\n\n    const fill = (d: NameValueDataInclPercentile) => {\n      if (d.avgPercentile >= 90) {\n        return '#9500ae';\n      } else if (d.avgPercentile >= 80) {\n        return '#d500f9';\n      } else if (d.avgPercentile >= 60) {\n        return '#dd33fa';\n      } else if (d.avgPercentile >= 40) {\n        return '#757de8';\n      } else if (d.avgPercentile >= 20) {\n        return '#3f51b5';\n      } else {\n        return '#002984';\n      }\n    };\n\n    // remove any old chart before appending a refreshed one;\n    d3.select('#bar-chart').remove();\n\n    // full svg\n    const svg = d3.select(d3Container.current)\n      .append('svg')\n      .attr('id', 'bar-chart')\n      .attr(\"viewBox\", `0, 0, ${width}, ${height}`);\n\n    // shadow effect\n    const defs = svg.append('defs');\n\n    const filter = defs.append('filter')\n      .attr('id', 'drop-shadow')\n      .attr('height', '150%')\n      .attr('width', '150%');\n\n    filter.append('feGaussianBlur')\n      .attr('in', 'SourceAlpha')\n      .attr('stdDeviation', 2)\n      .attr('result', 'blur');\n\n    filter.append('feOffset')\n      .attr('in', 'blur')\n      .attr('dx', 3)\n      .attr('dy', 3)\n      .attr('result', 'offsetBlur');\n\n    const feMerge = filter.append('feMerge');\n\n    feMerge.append('feMergeNode')\n      .attr('in', 'offsetBlur');\n    feMerge.append('feMergeNode')\n      .attr('in', 'SourceGraphic');\n\n    // chart rectangles\n    svg.selectAll('rect')\n      .data(sortedData)\n      .join('rect')\n      .attr('fill', fill)\n      .attr('x', padding)\n      .attr('y', (d, i) => i * (barHeight + barMargin) + barMargin)\n      .attr('height', barHeight)\n      .attr('width', d => xScale(d.value))\n      .attr('stroke', 'black')\n      .attr('stroke-width', 0.25)\n      .attr('rx', 5)\n      .style('filter', 'url(#drop-shadow)');\n\n    // labels\n    svg.append('g')\n      .attr('font-size', 14)\n      .selectAll('text')\n      .data(sortedData)\n      .join('text')\n      .attr('transform',\n        (d, i) => `translate(${padding}, ${i * (barHeight + barMargin) + (barMargin * 0.9)})`)\n      .call(text => text.append('tspan')\n        .text(d => d.name)\n        .attr('font-family', 'roboto')\n        .attr('font-size', 16)\n        .attr('y', -3))\n      .call(text => text.append('tspan')\n        .attr('x', d => xScale(d.value) + 15)\n        .attr('y', barHeight)\n        .attr('font-style', 'normal')\n        .text(d => `(${formatTimeText(d.value)})`));\n  }, [data]);\n\n  return (\n    <Paper ref={d3Container} className={classes.chart}></Paper>\n  );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Skeleton from '@mui/material/Skeleton';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport VerticalBarChart from '../../common/VerticalBarChart';\nimport CenteredError from '../../common/CenteredError';\nimport { FlexCenter } from '../../common/flex';\nimport { DetailedAssignmentStats, NameValueDataInclPercentile } from '../../../types/Statistics';\nimport StatisticDetails from './StatisticDetails';\nimport DetailsButton from './DetailsButton';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { getPeoplePlacesStatistics as getPeoplePlacesStatisticsService } from '../../../services/statistics';\n// types\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\nexport default function PeoplePlacesStatistics(): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n\n  const [getStatsStatus, setGetStatsStatus] = useState<GetRequestStatus>('loading');\n\n  const [chartData, setChartData] = useState<NameValueDataInclPercentile[] | null>(null);\n  const [statistics, setStatistics] = useState<DetailedAssignmentStats[] | null>(null);\n\n  const getPeoplePlaceStatistics = useCallback(async () => {\n    setGetStatsStatus('loading');\n    await delay();\n    getPeoplePlacesStatisticsService()\n      .then(result => {\n        mounted.current && setGetStatsStatus(result.status as GetRequestStatus);\n        if (result.status === 'success' && mounted.current && result.data) {\n          setChartData(result.data.avgOverview.filter(doc => doc.name !== 'For Sale'));\n          setStatistics(result.data.details);\n        }\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setGetStatsStatus('failed');\n        console.error(e);\n      });\n  },\n    [delay, mounted]\n  );\n\n  useEffect(() => {\n    getPeoplePlaceStatistics();\n  }, [getPeoplePlaceStatistics]);\n\n  if (getStatsStatus === 'loading') {\n    return (\n      <Paper>\n        <FlexCenter flexDirection='column' sx={{ height: 500 }}>\n          <Skeleton variant='rectangular' height={'90%'} width={'90%'} style={{ margin: 'auto' }} />\n        </FlexCenter>\n      </Paper>\n    );\n  };\n  if (getStatsStatus === 'failed') {\n    return <CenteredError errorMessage='Failed to load statistics...' retryAction={() => window.location.reload()} />;\n  };\n  return (\n    <>\n      {chartData && statistics\n        ? <FlexCenter flexDirection='column'>\n          <VerticalBarChart data={chartData} />\n          <DetailsButton>\n            <StatisticDetails statistics={statistics} />\n          </DetailsButton>\n        </FlexCenter>\n        : <></>}\n    </>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory, useParams } from 'react-router-dom';\n// material-ui\nimport Tabs from '@mui/material/Tabs';\n// THIS PROJECT\n// components\nimport DarkTab from '../../common/DarkTab';\nimport OverviewStats from './overview/OverviewStats';\nimport StagesStats from './StagesStats';\nimport PeoplePlacesStats from './PeoplePlacesStats';\n// types\nimport { VehicleTurnStats } from '../../../types/Statistics';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n};\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`analytics-tabpanel-${index}`}\n      aria-labelledby={`analytics-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <div>{children}</div>\n      )}\n    </div>\n  );\n};\n\nfunction a11yProps(index: any) {\n  return {\n    id: `analytics-tab-${index}`,\n    'aria-controls': `analytics-tabpanel-${index}`,\n  };\n};\n\ninterface AnalyticsTabsProps {\n  turnStatistics: VehicleTurnStats | null;\n  getTurnStatsStatus: GetRequestStatus;\n};\nexport default function AnalyticsTabs(props: AnalyticsTabsProps): React.ReactElement {\n  const history = useHistory();\n\n  const { turnStatistics, getTurnStatsStatus } = props;\n\n  interface ParamTypes {\n    tab: 'overview' | 'stages' | 'peoplePlaces';\n  };\n\n  let { tab } = useParams<ParamTypes>();\n  const [tabValue, setTabValue] = useState<any>(tab);\n\n  useEffect(() => setTabValue(tab), [tab]);\n\n  const changeTab = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setTabValue(newValue);\n    history.push(`/analytics/${newValue}`);\n  };\n\n  return (\n    <div>\n      <Tabs\n        centered\n        value={tabValue}\n        indicatorColor='primary'\n        textColor='primary'\n        onChange={changeTab}\n        aria-label='vehicle details navigation'\n      >\n        <DarkTab label='Overview' value='overview' {...a11yProps('overview')} />\n        <DarkTab label='Stages' value='stages' {...a11yProps('stages')} />\n        <DarkTab label='People/Places' value='peoplePlaces' {...a11yProps('peoplePlaces')} />\n      </Tabs>\n      <TabPanel value={tabValue} index='overview'>\n        <OverviewStats turnStatistics={turnStatistics} getTurnStatsStatus={getTurnStatsStatus} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='stages'>\n        <StagesStats forSaleAvg={turnStatistics ? turnStatistics.average.getForSale : 0} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='peoplePlaces'>\n        <PeoplePlacesStats />\n      </TabPanel>\n    </div>\n  );\n};\n","// react\nimport { useState, useEffect, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport { VehicleTurnStats } from '../../types/Statistics';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport AnalyticsTabs from './analyticsTabs/AnalyticsTabs';\n// services\nimport { getVehicleTurnStats as getVehicleTurnStatsService } from '../../services/statistics';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n\nexport default function Statistics(): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n\n  const [vehicleTurnStats, setVehicleTurnStats] = useState<VehicleTurnStats | null>(null);\n  const [getTurnStatsStatus, setGetTurnStatsStatus] = useState<GetRequestStatus>('');\n\n  const getVehicleTurnStats = useCallback(\n    async () => {\n      setGetTurnStatsStatus('loading');\n      await delay();\n      getVehicleTurnStatsService()\n        .then(result => {\n          mounted.current && setGetTurnStatsStatus(result.status as GetRequestStatus);\n          result.status === 'success' && mounted.current && result.data && setVehicleTurnStats(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetTurnStatsStatus('failed');\n          console.error(e);\n        });\n    },\n    [delay, mounted]\n  );\n\n  useEffect(() => { getVehicleTurnStats(); }, [getVehicleTurnStats]);\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<EqualizerIcon color='primary' />} variant='h5'>Analytics</IconContentTitle>\n        </ContentHeader>\n        <Divider />\n        <AnalyticsTabs turnStatistics={vehicleTurnStats} getTurnStatsStatus={getTurnStatsStatus} />\n      </LargeContent>\n    </LargeCard>\n  );\n}","// material-ui\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\n// THIS PROJECT\n// types\nimport { DemoState } from '../../types/Demo';\n\ninterface ActionListProps {\n  demoState: DemoState;\n};\nexport default function ActionList(props: ActionListProps): React.ReactElement {\n  const {\n    clearDatabase,\n    addVehicleDescriptors,\n    addStages,\n    generateVehicles,\n  } = props.demoState;\n\n  const clearDatabaseLi: JSX.Element = (\n    <ListItem>\n      <ListItemIcon><DeleteForeverIcon color='secondary' /></ListItemIcon>\n      <ListItemText primary='Clear Database' />\n    </ListItem>\n  );\n\n  const addVehicleDescriptorsLi: JSX.Element = (\n    <ListItem>\n      <ListItemIcon><CreateNewFolderIcon color='primary' /></ListItemIcon>\n      <ListItemText primary='Add Vehicle Descriptors' />\n    </ListItem>\n  );\n\n  const addStagesLi: JSX.Element = (\n    <ListItem>\n      <ListItemIcon><CreateNewFolderIcon color='primary' /></ListItemIcon>\n      <ListItemText primary='Add Stages and People/Places' />\n    </ListItem>\n  );\n\n  const generateVehiclesLi: JSX.Element = (\n    <ListItem>\n      <ListItemIcon><CreateNewFolderIcon color='primary' /></ListItemIcon>\n      <ListItemText primary='Generate Demo Vehicles' />\n    </ListItem>\n  );\n\n  return (\n    <List id='demo-dialog-description'>\n      {clearDatabase && clearDatabaseLi}\n      {addVehicleDescriptors && addVehicleDescriptorsLi}\n      {addStages && addStagesLi}\n      {generateVehicles && generateVehiclesLi}\n    </List>\n  );\n}","// material-ui\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n// THIS PROJECT\n// components\nimport ActionList from './ActionList';\n// services\nimport {\n  clearDatabase as clearDatabaseService,\n  addVehicleDescriptors as addVehicleDescriptorsService,\n  addStages as addStagesService,\n  generateVehicles as generateVehiclesService,\n} from '../../services/demo';\n// contexts\nimport { useAuthContext } from '../../contexts/AuthContext';\n// types\nimport { DemoState } from '../../types/Demo';\nimport { Set } from '../../types/misc';\nimport { DeleteRequestStatus } from '../../types/ServiceRequests';\n\ninterface DemoDialogProps {\n  demoState: DemoState;\n  open: boolean;\n  setOpen: Set<boolean>;\n};\nexport default function DemoDialog(props: DemoDialogProps): React.ReactElement {\n  const { getUserPreferences } = useAuthContext();\n  const { demoState, open, setOpen } = props;\n\n  const {\n    mounted,\n    setLoading,\n    clearDatabase,\n    setClearDatabaseStatus,\n    addVehicleDescriptors,\n    setAddVehicleDescriptorsStatus,\n    addStages,\n    setAddStagesStatus,\n    generateVehicles,\n    setGenerateVehiclesStatus,\n    vehiclesAmount,\n    months\n  } = demoState;\n\n  const clearDatabaseClick = async () => {\n    if (!clearDatabase) { return; } else {\n      setClearDatabaseStatus('loading');\n      await clearDatabaseService()\n        .then(result => {\n          mounted.current && setClearDatabaseStatus(result.status as DeleteRequestStatus);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setClearDatabaseStatus('failed');\n          console.error(e);\n        });\n      return;\n    };\n  };\n\n  const addVehicleDescriptorsClick = async () => {\n    if (!addVehicleDescriptors) { return; } else {\n      setAddVehicleDescriptorsStatus('loading');\n      await addVehicleDescriptorsService()\n        .then(result => {\n          mounted.current && setAddVehicleDescriptorsStatus(result.status);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setAddVehicleDescriptorsStatus('failed');\n          console.error(e);\n        });\n    };\n  };\n\n  const addStagesClick = async () => {\n    if (!addStages) { return; } else {\n      setAddStagesStatus('loading');\n      await addStagesService()\n        .then(result => {\n          mounted.current && setAddStagesStatus(result.status);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setAddStagesStatus('failed');\n          console.error(e);\n        });\n    };\n  };\n\n  const generateVehiclesClick = async () => {\n    if (!generateVehicles) { return; } else {\n      setGenerateVehiclesStatus('loading');\n      await generateVehiclesService(vehiclesAmount, months)\n        .then(result => {\n          mounted.current && setGenerateVehiclesStatus(result.status);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGenerateVehiclesStatus('failed');\n          console.error(e);\n        });\n    }\n  };\n\n  const continueClick = async () => {\n    setLoading(true);\n    await clearDatabaseClick();\n    await Promise.all([\n      addVehicleDescriptorsClick(),\n      addStagesClick()\n    ]);\n    await generateVehiclesClick();\n    setLoading(false);\n    getUserPreferences();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby='demo-dialog-title'\n      aria-describedby='demo-dialog-description'\n    >\n      <DialogTitle id='demo-dialog-title'>Continue with the following <strong>PERMANENT</strong> action(s)?</DialogTitle>\n      <DialogContent>\n        <ActionList demoState={demoState} />\n      </DialogContent>\n      <DialogActions>\n        <Button color='primary' onClick={() => setOpen(false)}>\n          go back\n        </Button>\n        <Button color='primary' onClick={continueClick}>\n          continue\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","// react\nimport { useEffect, useState } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport DemoDialog from './DemoDialog';\n// types\nimport { DemoState } from '../../types/Demo';\n\ninterface DemoContinueButtonProps {\n  demoState: DemoState;\n};\nexport default function DemoContinueButton(props: DemoContinueButtonProps): React.ReactElement {\n  const { demoState } = props;\n\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n\n  const {\n    loading,\n    clearDatabase,\n    addVehicleDescriptors,\n    addStages,\n    generateVehicles,\n    vehiclesAmountError,\n    monthsError\n  } = demoState;\n\n  useEffect(() => { loading && setOpenDialog(false); }, [loading]);\n  return (\n    <>\n      <Button\n        color='primary'\n        variant='outlined'\n        onClick={() => setOpenDialog(true)}\n        disabled={(!clearDatabase && !addVehicleDescriptors && !addStages && !generateVehicles) || (vehiclesAmountError !== '' || monthsError !== '')}\n      >\n        continue\n      </Button>\n      <DemoDialog demoState={demoState} open={openDialog} setOpen={setOpenDialog} />\n    </>\n  );\n}","// material-ui\nimport TextField from '@mui/material/TextField';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\n// types\nimport { Set } from '../../types/misc';\n\ninterface GenerateDemoVehiclesProps {\n  generateVehicles: boolean;\n  vehiclesAmountInput: string;\n  setVehiclesAmountInput: Set<string>;\n  vehiclesAmountError: string;\n  setVehiclesAmountError: Set<string>;\n  setVehiclesAmount: Set<string>;\n  months: string;\n  setMonths: Set<string>;\n  monthsError: string;\n  setMonthsError: Set<string>;\n}\nexport default function GenerateDemoVehicles(props: GenerateDemoVehiclesProps): React.ReactElement {\n  const {\n    generateVehicles,\n    vehiclesAmountInput, setVehiclesAmountInput,\n    vehiclesAmountError, setVehiclesAmountError,\n    setVehiclesAmount,\n    months, setMonths,\n    monthsError, setMonthsError\n  } = props;\n\n  const changeVehiclesAmount = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const vehiclesAmountInputTmp = e.target.value.trim()\n      // remove all non digit inputs \n      .replace(/[^0-9]/g, '')\n      // add comma seperators\n      .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n    setVehiclesAmountInput(vehiclesAmountInputTmp);\n    const vehiclesAmountTmp = vehiclesAmountInputTmp.replace(',', '');\n    setVehiclesAmount(vehiclesAmountTmp);\n    const formatTest = /^\\d+$/;\n    if (!formatTest.test(vehiclesAmountTmp)) {\n      setVehiclesAmountError('Vehice Amount must be a whole number');\n    } else if (parseInt(vehiclesAmountTmp) > 10000) {\n      setVehiclesAmountError('Vehicle Amount must be less than 10,000');\n    } else {\n      setVehiclesAmountError('');\n    }\n  };\n\n  const changeMonths = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const monthsTmp = e.target.value.trim().replace(/[^0-9]/g, '');\n    setMonths(monthsTmp);\n    const formatTest = /^\\d+$/;\n    if (!formatTest.test(monthsTmp)) {\n      setMonthsError('Months must be a whole number');\n    } else if (parseInt(monthsTmp) > 36) {\n      setMonthsError('Months must be less than or equal to 36');\n    } else {\n      setMonthsError('');\n    }\n  };\n\n  return (\n    <Collapse in={generateVehicles}>\n      <FlexCenter flexDirection='column'>\n        <TextField\n          size='small'\n          margin='normal'\n          id='vehicle-amount'\n          label='Amount of Vehicles to Add'\n          variant='outlined'\n          value={vehiclesAmountInput}\n          onChange={changeVehiclesAmount}\n          error={vehiclesAmountError ? true : false}\n          helperText={vehiclesAmountError}\n        />\n        <TextField\n          size='small'\n          margin='normal'\n          id='months'\n          label='Amount of Months to Go Back'\n          variant='outlined'\n          value={months}\n          onChange={changeMonths}\n          error={monthsError ? true : false}\n          helperText={monthsError}\n        />\n      </FlexCenter>\n    </Collapse>\n  );\n}\n","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { styled } from '@mui/system';\nimport Dialog from '@mui/material/Dialog';\nimport { Typography } from '@mui/material';\n// THIS PROJECT\n// components\nimport { FlexCenter, FlexSpaceAround } from '../common/flex';\n// types\nimport { GetRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\n\nconst LoadingFlexSpaceAround = styled(FlexSpaceAround)(({ theme }) => ({\n  height: 200,\n}));\n\ninterface LoadingDemoActionsProps {\n  loading: boolean;\n  clearDatabaseStatus: GetRequestStatus;\n  addVehicleDescriptorsStatus: PostRequestStatus;\n  addStagesStatus: PostRequestStatus;\n  generateVehiclesStatus: PostRequestStatus;\n}\nexport default function LoadingDemoActions(props: LoadingDemoActionsProps): React.ReactElement {\n  const {\n    loading,\n    clearDatabaseStatus,\n    addVehicleDescriptorsStatus,\n    addStagesStatus,\n    generateVehiclesStatus\n  } = props;\n\n  return (\n    <Dialog open={loading} fullWidth={true} >\n      <LoadingFlexSpaceAround flexDirection='column'>\n        <CircularProgress />\n        <FlexCenter flexDirection='column' sx={{ textAlign: 'center' }}>\n          {clearDatabaseStatus === 'loading' && <Typography>...Clearing Database</Typography>}\n          {addVehicleDescriptorsStatus === 'loading' && <Typography>...Adding Vehicle Descriptors</Typography>}\n          {addStagesStatus === 'loading' && <Typography>...Adding Stages/People/Places</Typography>}\n          {generateVehiclesStatus === 'loading' && <>\n            <Typography>...Generating Vehicles</Typography>\n            <Typography>(this could take several minutes)</Typography>\n          </>}\n        </FlexCenter>\n      </LoadingFlexSpaceAround>\n    </Dialog>\n  );\n}","// react\nimport React, { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// material-ui\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\nimport DemoContinueButton from './DemoContinueButton';\nimport CenteredError from '../common/CenteredError';\nimport GenerateDemoVehicles from './GenerateDemoVehicles';\nimport LoadingDemoActions from './LoadingDemoActions';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// types\nimport { DemoState } from '../../types/Demo';\nimport { DeleteRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function ActionCheckBoxes(): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [clearDatabase, setClearDatabase] = useState<boolean>(false);\n  const [clearDatabaseStatus, setClearDatabaseStatus] = useState<DeleteRequestStatus>('');\n  const [addVehicleDescriptors, setAddVehicleDescriptors] = useState<boolean>(false);\n  const [addVehicleDescriptorsStatus, setAddVehicleDescriptorsStatus] = useState<PostRequestStatus>('');\n  const [addStages, setAddStages] = useState<boolean>(false);\n  const [addStagesStatus, setAddStagesStatus] = useState<PostRequestStatus>('');\n  const [generateVehicles, setGenerateVehicles] = useState<boolean>(false);\n  const [generateVehiclesStatus, setGenerateVehiclesStatus] = useState<PostRequestStatus>('');\n\n  // generate vehicles state\n  const [vehiclesAmountInput, setVehiclesAmountInput] = useState<string>('300');\n  const [vehiclesAmountError, setVehiclesAmountError] = useState<string>('');\n  const [vehiclesAmount, setVehiclesAmount] = useState<string>('300');\n  const [months, setMonths] = useState<string>('12');\n  const [monthsError, setMonthsError] = useState<string>('');\n\n  const demoState: DemoState = {\n    mounted,\n    loading, setLoading,\n    error, setError,\n    clearDatabase, setClearDatabase,\n    clearDatabaseStatus, setClearDatabaseStatus,\n    addVehicleDescriptors, setAddVehicleDescriptors,\n    addVehicleDescriptorsStatus, setAddVehicleDescriptorsStatus,\n    addStages, setAddStages,\n    addStagesStatus, setAddStagesStatus,\n    generateVehicles, setGenerateVehicles,\n    generateVehiclesStatus, setGenerateVehiclesStatus,\n    vehiclesAmount,\n    vehiclesAmountError,\n    months,\n    monthsError\n  };\n\n  // rules for which actions must also be selected if a certain action is selected\n  useEffect(() => {\n    if (generateVehicles) {\n      setClearDatabase(true);\n      setAddVehicleDescriptors(true);\n      setAddStages(true);\n    } else if (addVehicleDescriptors || addStages) {\n      setClearDatabase(true);\n    }\n  }, [generateVehicles, addVehicleDescriptors, addStages]);\n\n  // reroute to 'all-vehicles' if actions are successful\n  useEffect(() => {\n    if (!loading) {\n      const statuses = [\n        { check: clearDatabase, status: clearDatabaseStatus },\n        { check: addVehicleDescriptors, status: addVehicleDescriptorsStatus },\n        { check: addStagesStatus, status: addStagesStatus },\n        { check: generateVehicles, status: generateVehiclesStatus }\n      ];\n      if (statuses.find(status => status.status !== '')) {\n        const statusesCheck = statuses.map(status => status.check === true ? status.status === 'success' : true);\n        if (statusesCheck.find(check => !check) === undefined) {\n          setClearDatabase(false);\n          setClearDatabaseStatus('');\n          setAddVehicleDescriptors(false);\n          setAddVehicleDescriptorsStatus('');\n          setAddStages(false);\n          setAddStagesStatus('');\n          setGenerateVehicles(false);\n          setGenerateVehiclesStatus('');\n          history.push(`/all-vehicles/active/asc/10/first/0`);\n        } else {\n          setError(true);\n        }\n      };\n    };\n  }, [\n    loading,\n    clearDatabase, clearDatabaseStatus,\n    addVehicleDescriptors, addVehicleDescriptorsStatus,\n    addStages, addStagesStatus,\n    generateVehicles, generateVehiclesStatus,\n    history\n  ]);\n\n  if (error) {\n    return <CenteredError errorMessage='An error occured in 1 or more demo actions....' />;\n  }\n\n  return (\n    <>\n      <LoadingDemoActions\n        loading={loading}\n        clearDatabaseStatus={clearDatabaseStatus}\n        addVehicleDescriptorsStatus={addVehicleDescriptorsStatus}\n        addStagesStatus={addStagesStatus}\n        generateVehiclesStatus={generateVehiclesStatus}\n      />\n      <FlexCenter flexDirection='column'>\n        <FormControl component={Paper} className={classes.formControl}>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  disabled={addVehicleDescriptors || addStages || generateVehicles}\n                  checked={clearDatabase}\n                  onChange={() => clearDatabase ? setClearDatabase(false) : setClearDatabase(true)}\n                />\n              }\n              label=\"Clear Database\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  disabled={generateVehicles}\n                  checked={addVehicleDescriptors}\n                  onChange={() => addVehicleDescriptors ? setAddVehicleDescriptors(false) : setAddVehicleDescriptors(true)}\n                />\n              }\n              label=\"Add Vehicle Descriptors\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  disabled={generateVehicles}\n                  checked={addStages}\n                  onChange={() => addStages ? setAddStages(false) : setAddStages(true)}\n                />\n              }\n              label=\"Add Stages and People/Places\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  checked={generateVehicles}\n                  onChange={() => generateVehicles ? setGenerateVehicles(false) : setGenerateVehicles(true)}\n                />\n              }\n              label=\"Generate Demo Vehicles\"\n            />\n            <GenerateDemoVehicles\n              generateVehicles={generateVehicles}\n              vehiclesAmountInput={vehiclesAmountInput} setVehiclesAmountInput={setVehiclesAmountInput}\n              vehiclesAmountError={vehiclesAmountError} setVehiclesAmountError={setVehiclesAmountError}\n              setVehiclesAmount={setVehiclesAmount}\n              months={months} setMonths={setMonths}\n              monthsError={monthsError} setMonthsError={setMonthsError}\n            />\n          </FormGroup>\n        </FormControl>\n        <DemoContinueButton demoState={demoState} />\n      </FlexCenter>\n    </>\n  );\n}","// material-ui\nimport LaptopIcon from '@mui/icons-material/Laptop';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport ActionCheckBoxes from './ActionCheckBoxes';\n\nexport default function DemoActions(): React.ReactElement {\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<LaptopIcon color='primary' />} variant='h5'>Demo Actions</IconContentTitle>\n          <Divider />\n        </ContentHeader>\n        <ActionCheckBoxes />\n      </LargeContent>\n    </LargeCard>\n  );\n}","// react\nimport { useEffect, useState } from 'react';\n// mui\nimport Settings from '@mui/icons-material/Settings';\nimport TextField from '@mui/material/TextField';\nimport { Select, Typography, FormControl, MenuItem, SelectChangeEvent } from '@mui/material';\nimport { styled } from '@mui/system';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle, ContentPaper } from '../common/cardContent';\nimport { FlexEnd, FlexSpaceBtwn } from '../common/flex';\n// context\nimport { useDemoContext } from '../../contexts/DemoContext';\nimport React from 'react';\nimport { DbSelection } from '../../types/Demo';\n\n// all of this complicated looking code is to resolve a typescript error.\n// basically we couldn't assign variant 'outlined' to the LoadingDelayField because \n// typescript wasn't recognizing that 'outlined' was assignable to {type 'filled'} | {type: 'outlined'}\ninterface NumberInputProps {\n  variant?: 'outlined';\n}\nconst NumberInput = styled(TextField, {\n  shouldForwardProp: (prop) =>\n    prop !== 'variant',\n  name: 'LoadingDelayField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [\n    styles.root,\n    props.variant === 'outlined' && styles.outlined,\n  ]\n})<NumberInputProps>(({ theme }) => ({\n  width: '150px',\n  marginLeft: theme.spacing(2),\n  '&.MuiTextField-root': {\n    textAlign: 'center',\n  }\n}));\n\nconst ButtonFlex = styled(FlexEnd)(({ theme }) => ({\n  margin: theme.spacing(2),\n}));\n\nexport default function DemoSettings(): React.ReactElement {\n  const { loadingTime, saveLoadingTime, db, saveDb } = useDemoContext();\n  const [loadingTimeInput, setLoadingTimeInput] = useState<string>(loadingTime.toLocaleString('en-US'));\n  // need a separate state variable for the actual loadingTime number variable, not the input string\n  const [loadingTimeNum, setLoadingTimeNum] = useState<number>(loadingTime);\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeLoadingTime = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const loadingTimeStringTmp = e.target.value.trim().replace(/[^0-9]/g, '');\n    const loadingTimeNumTmp = parseInt(loadingTimeStringTmp);\n    if (loadingTimeNumTmp > 10000) {\n      setInputError('cannot exceed 10 seconds');\n    } else {\n      setInputError('');\n      loadingTimeStringTmp ? setLoadingTimeNum(parseInt(loadingTimeStringTmp)) : setLoadingTimeNum(0);\n      const loadingTimeString = loadingTimeStringTmp\n        // delete leading zeros\n        .replace(/^0+(?!$)/g, '')\n        // add comma seperators\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      setLoadingTimeInput(loadingTimeString);\n    }\n  };\n\n  const onBlurLoadingTime = () => {\n    if (loadingTimeNum > 10000) {\n      setLoadingTimeInput('0');\n      setInputError('cannot exceed 10 seconds');\n    } else {\n      setInputError('');\n    }\n  };\n\n  const [dbInput, setDbInput] = useState<DbSelection | null>(db);\n\n  const handleDbChange = (event: SelectChangeEvent) => {\n    setDbInput(event.target.value as DbSelection);\n  };\n\n  // necessary to change the loadingTimeInput state variable whenever it is reset in the context,\n  // since the value of our input comes from this state variable and not directly from the context\n  useEffect(() => {\n    const loadingTimeString = loadingTime.toLocaleString('en-US');\n    setLoadingTimeInput(loadingTimeString);\n  }, [loadingTime]);\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<Settings color='primary' />} variant='h5'>Demo Settings</IconContentTitle>\n        </ContentHeader>\n        <ContentPaper>\n          <FlexSpaceBtwn>\n            <Typography>Simulated Loading Delay (milliseconds):</Typography>\n            <NumberInput\n              value={loadingTimeInput}\n              onChange={changeLoadingTime}\n              onBlur={onBlurLoadingTime}\n              size='small'\n              inputProps={{ sx: { textAlign: 'right' } }}\n              error={inputError ? true : false}\n              helperText={inputError}\n            />\n          </FlexSpaceBtwn>\n          <ButtonFlex>\n            <Button\n              disabled={loadingTime === loadingTimeNum}\n              onClick={() => saveLoadingTime(loadingTimeNum)}>Save</Button>\n          </ButtonFlex>\n          <FlexSpaceBtwn>\n            <Typography>Database:</Typography>\n            <FormControl>\n              <Select\n                value={dbInput ? dbInput : ''}\n                onChange={handleDbChange}\n                sx={{ width: '150px' }}\n                size='small'\n              >\n                <MenuItem value='mongodb'>MongoDB</MenuItem>\n                <MenuItem value='mysql'>MySQL</MenuItem>\n              </Select>\n            </FormControl>\n          </FlexSpaceBtwn>\n          <ButtonFlex>\n            <Button\n              disabled={db === dbInput}\n              onClick={() => saveDb(dbInput)}\n            >\n              Save\n            </Button>\n          </ButtonFlex>\n        </ContentPaper>\n      </LargeContent>\n    </LargeCard>\n  );\n}\n","// CSS\nimport './App.css';\n// react\nimport React from 'react';\n// react-router-dom\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport Nav from '../nav/Nav';\nimport PrivateRoute from './PrivateRoute';\nimport LogIn from '../log-in/LogIn';\nimport AllVehicles from '../all-vehicles/AllVehicles';\nimport AddVehicle from '../add-vehicle/AddVehicle';\nimport VehicleDetails from '../vehicle-details/VehicleDetails';\nimport PeoplePlaces from '../people-places/PeoplePlaces';\nimport Stages from '../stages/Stages';\nimport Analytics from '../analytics/Analytics';\nimport DemoActions from '../demo-actions/DemoActions';\nimport DemoSettings from '../demo-settings/DemoSettings';\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    fontFamily: 'Roboto',\n    backgroundColor: '#404040',\n    minHeight: '100vh',\n    minWidth: '100vw',\n    position: 'absolute',\n    left: '0',\n    top: '0',\n  },\n}));\n\nexport default function App(): React.ReactElement {\n  const classes = useStyles();\n  const { currentUser } = useAuthContext();\n\n  return (\n    <div className={classes.app}>\n      <Router>\n        {currentUser && <Nav />}\n        <Switch>\n          <Route exact path='/'>\n            <Redirect to='/all-vehicles/active/asc/10/first/0' />\n          </Route>\n          <Route path='/log-in' component={LogIn} />\n          <PrivateRoute path='/all-vehicles/:statusParam/:sortParam/:perPageParam/:pageParam/:compareParam' component={AllVehicles} />\n          <PrivateRoute path='/add-vehicle' component={AddVehicle} />\n          <PrivateRoute path='/vehicle-details/:searchCriteria/:searchValue/:tab' component={VehicleDetails} />\n          <PrivateRoute path='/people-places' component={PeoplePlaces} />\n          <PrivateRoute path='/stages' component={Stages} />\n          <PrivateRoute path='/analytics/:tab' component={Analytics} />\n          <PrivateRoute path='/demo-actions' component={DemoActions} />\n          <PrivateRoute path='/demo-settings' component={DemoSettings} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\n","import { createTheme } from '@mui/material/styles';\n\ndeclare module '@mui/material/styles/createTheme' {\n  interface Theme {\n    mainMenu: {\n      width: string;\n    };\n    titleColor: {\n      lightBlue: string;\n      darkBlue: string;\n    };\n  }\n  interface ThemeOptions {\n    mainMenu?: {\n      width?: string;\n    };\n    titleColor?: {\n      lightBlue?: string;\n      darkBlue?: string;\n    };\n  }\n};\n\nexport const theme = createTheme({\n  mainMenu: {\n    width: '250px',\n  },\n  titleColor: {\n    lightBlue: '#aab6fe',\n    darkBlue: '#49599a',\n  },\n});","// react\nimport { ReactChild, ReactChildren } from 'react';\n// react-cookie\nimport { CookiesProvider } from 'react-cookie';\n// material-ui\nimport { ThemeProvider, Theme, StyledEngineProvider } from '@mui/material/styles';\n// THIS PROJECT\n// contexts\nimport { AuthProvider } from './AuthContext';\nimport { DemoProvider } from './DemoContext';\n// theme\nimport { theme } from '../theme';\n\ndeclare module '@mui/styles/defaultTheme' {\n  interface DefaultTheme extends Theme { }\n}\n\ninterface GlobalContextProps {\n  children: ReactChild | ReactChildren;\n}\nexport default function GlobalContext(props: GlobalContextProps): React.ReactElement {\n  return (\n    <CookiesProvider>\n      <StyledEngineProvider injectFirst>\n        <ThemeProvider theme={theme}>\n          <DemoProvider>\n            <AuthProvider>\n              {props.children}\n            </AuthProvider>\n          </DemoProvider>\n        </ThemeProvider>\n      </StyledEngineProvider>\n    </CookiesProvider>\n  );\n}","import ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport '@fontsource/roboto';\nimport GlobalContext from './contexts/GlobalContext';\n\nReactDOM.render(\n  // <React.StrictMode>\n  <GlobalContext>\n    <App />\n  </GlobalContext>\n  //   </React.StrictMode>\n  ,\n  document.getElementById('root')\n);"],"sourceRoot":""}