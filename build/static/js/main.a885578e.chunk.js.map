{"version":3,"sources":["components/nav/MainMenu.tsx","components/nav/StockSearchBar.tsx","components/common/flex.tsx","components/common/LoadingFullPage.tsx","hooks.ts","services/demo.ts","components/common/CenteredError.tsx","contexts/DemoContext.tsx","contexts/AuthContext.tsx","components/nav/UserMenu.tsx","components/nav/Nav.tsx","components/app/PrivateRoute.tsx","components/common/cardContent.tsx","components/log-in/LogIn.tsx","components/all-vehicles/StatusFilter.tsx","components/all-vehicles/VehicleOrder.tsx","components/all-vehicles/AddVehicleButton.tsx","components/common/SelectDialog.tsx","components/common/CustomSelect.tsx","components/common/SelectListItem.tsx","components/common/vehicles/YearSelect.tsx","components/common/AddListItem.tsx","types/ServiceResults.ts","services/vehicles.ts","components/common/vehicles/AddMake.tsx","components/common/vehicles/MakeSelect.tsx","components/common/vehicles/AddModel.tsx","components/common/vehicles/ModelSelect.tsx","components/common/vehicles/AddTrim.tsx","components/common/vehicles/TrimSelect.tsx","components/all-vehicles/vehicleListFilters/VehicleDetailFilters.tsx","components/common/DateRangeSelect.tsx","components/common/vehicles/DateAddedSelect.tsx","components/common/vehicles/DateSoldSelect.tsx","components/all-vehicles/vehicleListFilters/DateRangeFilters.tsx","components/all-vehicles/vehicleListFilters/ShowForSaleFilter.tsx","components/all-vehicles/vehicleListFilters/VehicleListFilters.tsx","components/common/LoadingList.tsx","components/common/vehicles/VehicleListItemButton.tsx","components/common/vehicles/VehicleInfo.tsx","components/common/vehicles/VehicleChipGroup.tsx","components/common/vehicles/VehicleChip.tsx","components/all-vehicles/vehicleSummary/ActiveVehicle.tsx","components/common/FormatTime.tsx","components/common/vehicles/SoldVehicleChip.tsx","components/all-vehicles/vehicleSummary/SoldVehicle.tsx","components/common/vehicles/VehicleListItem.tsx","components/all-vehicles/vehicleSummary/DeleteVehicleDialog.tsx","components/all-vehicles/vehicleSummary/TrashedVehicle.tsx","components/all-vehicles/vehicleSummary/VehicleSummary.tsx","components/all-vehicles/ListNavigation.tsx","components/all-vehicles/VehicleList.tsx","components/all-vehicles/ViewFiltersButton.tsx","components/all-vehicles/AllVehicles.tsx","components/common/vehicles/NextStockButton.tsx","components/common/vehicles/StockField.tsx","components/add-vehicle/VehicleInfoInputs.tsx","services/stages.ts","components/common/stages/AddStage.tsx","components/common/stages/StageSelect.tsx","components/common/ShowMoreListItem.tsx","components/common/stages/AddPersonPlace.tsx","components/common/stages/PersonPlaceSelect.tsx","components/common/stages/TaskListInput.tsx","components/add-vehicle/StageAssignInputs.tsx","components/add-vehicle/NotesInput.tsx","components/add-vehicle/AddVehicleButton.tsx","components/add-vehicle/AddVehicleSuccessDialog.tsx","components/add-vehicle/AddVehicleFailureDialog.tsx","components/add-vehicle/AddVehicleInputs.tsx","components/add-vehicle/AddVehicle.tsx","components/vehicle-details/GetVehicleLoading.tsx","components/vehicle-details/ActionMenu.tsx","components/common/DarkTab.tsx","components/vehicle-details/vehicleTabs/stageTab/AssignStageButton.tsx","components/vehicle-details/vehicleTabs/stageTab/AssignStage.tsx","components/vehicle-details/vehicleTabs/stageTab/SellVehicleButtons.tsx","components/vehicle-details/vehicleTabs/stageTab/CompleteStageButton.tsx","components/vehicle-details/vehicleTabs/TabContent.tsx","components/vehicle-details/vehicleTabs/stageTab/CurrentStage.tsx","components/vehicle-details/vehicleTabs/stageTab/DurationStats.tsx","components/vehicle-details/vehicleTabs/stageTab/StageTab.tsx","components/vehicle-details/vehicleTabs/infoTab/EditInfoButtons.tsx","components/vehicle-details/vehicleTabs/infoTab/EditInfo.tsx","components/common/ReadonlyTextField.tsx","components/vehicle-details/vehicleTabs/infoTab/ReadonlyInfo.tsx","components/vehicle-details/vehicleTabs/infoTab/InfoTab.tsx","components/vehicle-details/vehicleTabs/notesTab/EditNotesButtons.tsx","components/vehicle-details/vehicleTabs/notesTab/EditNotes.tsx","components/vehicle-details/vehicleTabs/notesTab/ReadonlyNotes.tsx","components/vehicle-details/vehicleTabs/notesTab/NotesTab.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/HistoryTitleMenu.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/StageDetailsDialog.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/HistoryTable.tsx","components/vehicle-details/vehicleTabs/stageHistoryTab/StageHistoryTab.tsx","components/vehicle-details/vehicleTabs/VehicleTabs.tsx","components/vehicle-details/DetailsDoneButton.tsx","components/vehicle-details/VehicleFailed.tsx","components/vehicle-details/TrashedMessage.tsx","components/vehicle-details/UpdateVehicleLoading.tsx","components/vehicle-details/VehicleDetails.tsx","components/common/AccordionPaper.tsx","components/common/vehicles/NavigateAccordianVehicleList.tsx","components/stages/StageVehicleList.tsx","components/people-places/PersonPlaceVehicleList.tsx","components/common/vehicles/AccordianVehicleList.tsx","components/people-places/PeoplePlaces.tsx","components/stages/ReorderButtons.tsx","components/stages/ReorderStages.tsx","components/stages/Stages.tsx","utilityFunctions/formatTimeText.ts","components/common/DonutChart.tsx","components/analytics/analyticsTabs/overview/OverviewDetailsTable.tsx","components/analytics/analyticsTabs/DetailsButton.tsx","components/analytics/analyticsTabs/overview/OverviewStats.tsx","components/analytics/analyticsTabs/FullNameDialog.tsx","components/analytics/analyticsTabs/StatisticDetails.tsx","services/statistics.ts","components/analytics/analyticsTabs/StagesStats.tsx","components/common/VerticalBarChart.tsx","components/analytics/analyticsTabs/PeoplePlacesStats.tsx","components/analytics/analyticsTabs/AnalyticsTabs.tsx","components/analytics/Analytics.tsx","components/demo-actions/ActionList.tsx","components/demo-actions/DemoDialog.tsx","components/demo-actions/DemoContinueButton.tsx","components/demo-actions/GenerateDemoVehicles.tsx","components/demo-actions/LoadingDemoActions.tsx","components/demo-actions/ActionCheckBoxes.tsx","components/demo-actions/DemoActions.tsx","components/demo-settings/DemoSettings.tsx","components/app/App.tsx","theme.ts","contexts/GlobalContext.tsx","index.tsx"],"names":["useStyles","makeStyles","theme","title","flexGrow","fontFamily","color","titleColor","darkBlue","menuItems","width","mainMenu","link","textDecoration","menuButton","marginRight","spacing","breakpoints","up","display","MainMenu","props","window","classes","location","useLocation","useState","openMenu","setOpenMenu","container","undefined","document","body","toggleDrawer","open","event","type","key","selection","setSelection","useEffect","match","pathname","className","role","onClick","onKeyDown","Hidden","lgUp","to","ListItem","button","Typography","variant","component","Divider","selected","ListItemIcon","ListItemText","IconButton","edge","size","implementation","Drawer","anchor","onClose","lgDown","StyledInputAdornment","styled","InputAdornment","lightBlue","opacity","search","paddingLeft","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginLeft","inputRoot","StockSearchBar","history","useHistory","stockFormatTest","searchStk","setSearchStk","stockError","setStockError","TextField","placeholder","error","helperText","inputProps","InputProps","startAdornment","root","value","onChange","e","target","previous","test","push","FlexCenter","Box","p","justifyContent","alignItems","FlexSpaceBtwn","FlexSpaceEvenly","FlexStart","FlexEnd","FlexSpaceAround","flexCenter","top","left","height","zIndex","LoadingFullPage","CircularProgress","useCheckMounted","mounted","useRef","current","useQuery","URLSearchParams","useVehiclePage","useParams","demo","dbSelection","a","options","method","headers","JSON","stringify","fetch","response","json","getDefaults","clearDatabase","addVehicleDescriptors","addStages","generateVehicles","vehicleAmount","months","CenteredError","errorMessage","retryAction","flexDirection","Button","DemoContext","createContext","useDemoContext","useContext","DemoProvider","useCookies","cookies","setCookie","loading","setLoading","loadingTime","setLoadingTime","dbReady","setDbReady","db","setDb","setError","saveDb","useCallback","path","Promise","resolve","setTimeout","demoLoadingTime","parseInt","demoDb","selectDatabase","selectDatabaseService","then","console","delay","saveLoadingTime","loadingTimeNum","Provider","children","AuthContext","useAuthContext","AuthProvider","removeCookie","user","currentUser","setCurrentUser","name","defaultStageAssignment","stage","id","personPlace","userPreferences","setUserPreferences","getUserPreferences","result","status","data","logIn","logOut","UserMenu","anchorUserEl","setAnchorUserEl","openUserMenu","Boolean","currentTarget","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","disabled","margin","appBar","Nav","CssBaseline","AppBar","Toolbar","PrivateRoute","Component","renderComponent","exact","LargeCard","Card","paddingBottom","SmallCard","ExtraSmallCard","ContentHeader","padding","textAlign","ContentTitle","IconContentTitle","style","gap","icon","LargeContent","CardContent","SmallContent","ContentPaper","Paper","outerFlex","x","y","card","nameField","marginTop","LogIn","setName","label","autoComplete","length","trash","secondary","main","sold","success","active","primary","StatusFilter","filterDisplay","statusParam","sortParam","perPageParam","filterAnchor","setFilterAnchor","handleFilterClose","newStatus","startIcon","VehicleOrder","sort","setSort","query","toString","newSort","addButton","right","AddVehicleButton","Fab","dialog","dialogContent","maxWidth","maxHeight","SelectDialog","setOpen","flex","Dialog","DialogContent","CustomSelect","TextFieldProps","ButtonProps","endAdornment","readOnly","cursor","listItem","emphasized","fontStyle","SelectListItem","textVal","selectCondition","emphasize","YearSelect","year","setYear","currentYear","Date","getFullYear","years","i","unshift","handleYearSelect","List","map","yeartmp","AddListItem","Result","this","SuccessResult","GetSuccess","vehicles","getVehiclesPaged","perPage","page","compare","findVehicle","field","getNextStock","checkStock","stock","exists","getMakes","addMake","make","getModels","makeId","addModel","model","getTrims","modelId","addTrim","trim","addVehicle","addVehicleParam","initialStageParam","dateAdded","now","updateVehicle","vehicleId","updateDoc","sellVehicle","stageAssignmentId","dateSold","deleteVehicle","addButtons","AddMake","makeSelectParent","ms","makeSelect","addMakeStatus","setAddMakeStatus","addMakeInput","setAddMakeInput","openRef","handleAddMake","doc","setMake","setAddMake","setMakes","Collapse","in","timeout","unmountOnExit","autoFocus","fullWidth","toUpperCase","MakeSelect","parent","allowAddMake","pMounted","handleMakeSelect","maketmp","makes","getMakesStatus","setGetMakesStatus","getMakesService","AddModel","modelSelectParent","modelSelect","addModelStatus","setAddModelStatus","addModelInput","setAddModelInput","handleAddModel","setModel","setAddModel","setModels","allowAddModel","handleModelSelect","modeltmp","models","getModelsStatus","setGetModelsStatus","getModelsService","AddTrim","trimSelectParent","ts","trimSelect","addTrimStatus","setAddTrimStatus","addTrimInput","setAddTrimInput","handleAddTrim","patch","setTrim","setAddTrim","setTrims","TrimSelect","allowAddTrim","handleTrimSelect","trimtmp","trims","getTrimsStatus","setGetTrimsStatus","getTrimsService","select","VehicleDetailFilters","vehicleDetailFilterState","yearFilterTmp","setYearFilterTmp","makeFilterTmp","setMakeFilterTmp","modelFilterTmp","setModelFilterTmp","trimFilterTmp","setTrimFilterTmp","flexWrap","dialogTitle","datePicker","DateRangeSelect","buttonLabel","after","setAfter","before","setBefore","openDialog","setOpenDialog","afterTmp","setAfterTmp","beforeTmp","setBeforeTmp","DialogTitle","LocalizationProvider","dateAdapter","AdapterDateFns","FormControl","DatePicker","clearable","newValue","renderInput","params","minDate","DialogActions","getTime","DateAddedSelect","afterDate","toLocaleDateString","beforeDate","DateRangeFilters","dateRangeFilterState","addedAfterFilterTmp","setAddedAfterFilterTmp","addedBeforeFilterTmp","setAddedBeforeFilterTmp","soldAfterFilterTmp","setSoldAfterFilterTmp","soldBeforeFilterTmp","setSoldBeforeFilterTmp","ShowForSaleFilter","showForSaleTmp","setShowForSaleTmp","FormControlLabel","control","Checkbox","checked","sx","fontSize","filterActions","VehicleListFilters","setViewFilters","setFilterCount","yearFilter","setYearFilter","makeFilter","setMakeFilter","modelFilter","setModelFilter","trimFilter","setTrimFilter","addedAfterFilter","setAddedAfterFilter","addedBeforeFilter","setAddedBeforeFilter","soldAfterFilter","setSoldAfterFilter","soldBeforeFilter","setSoldBeforeFilter","showForSale","setShowForSale","yearQuery","get","makeQuery","modelQuery","trimQuery","addedAfterQuery","addedBeforeQuery","soldAfterQuery","soldBeforeQuery","showForSaleQuery","makeTmp","split","modelTmp","parseFloat","showForSaleQueryTmp","trimTmp","disableApplyFilters","forEach","filter","calculate","queries","queryString","join","skeleton","LoadingList","list","skeletonCount","Skeleton","VehicleListItemButton","ListItemButton","marginBottom","textContainer","stockLi","vehicleTextLi","whiteSpace","overflow","textOverflow","vehicleText","VehicleInfo","vehicle","VehicleChipGroup","float","VehicleChip","Chip","ActiveVehicle","currentStage","defaultStage","defaultPersonPlace","timeDifferenceLabel","FormatTime","milliseconds","Math","round","SoldVehicleChip","contrastText","SoldVehicle","totalSellTime","VehicleListItem","DeleteVehicleDialog","buttons","getVehicles","deleteVehicleStatus","setDeleteVehicleStatus","deleteVehicleService","ButtonGroup","disableEscapeKeyDown","trashButtons","TrashedVehicle","updateVehicleStatus","setUpdateVehicleStatus","activateVehicle","openDeleteDialog","setOpenDeleteDialog","toggleDeleteDialog","VehicleSummary","pageParam","compareParam","vehicleClick","ListNavigation","vehiclePage","docStartNumber","docEndNumber","totalDocs","dateAddedValues","maxDateAdded","max","minDateAdded","min","align","toLocaleString","VehicleList","vehicleListState","getVehiclesStatus","reload","StyledBadge","withStyles","createStyles","badge","border","background","paper","Badge","ViewFiltersButton","viewFilters","filterCount","badgeContent","listControls","AllVehicles","statusFilter","setStatusFilter","setVehiclePage","setGetVehiclesStatus","setFilter","nextStockButton","NextStockButton","editStockState","setStock","addEditVehicleStatus","nextStock","setNextStock","getNextStockStatus","setGetNextStockStatus","getNextStockService","StockField","stockOkay","setStockOkay","onBlur","VehicleInfoInputs","addVehicleState","addVehicleStatus","form","inputField","stages","getStageVehicleCounts","getPersonPlaceVehicleCounts","getStages","addStage","getPeoplePlaces","stageId","getAllPeoplePlaces","addPersonPlace","assignStage","assignStageParam","previousStage","completeStageAssignment","dateCompleted","getStageHistory","updateStageOrder","newStageOrder","updates","AddStage","stageSelectParent","ss","stageSelect","addStageStatus","setAddStageStatus","addStageInput","setAddStageInput","handleAddStage","setStage","setAddStage","setStages","StageSelect","allowAddStage","handleStageSelect","stagetmp","getStagesStatus","setGetStagesStatus","getStagesService","ShowMoreListItem","AddPersonPlace","personPlaceSelectParent","pps","personPlaceSelect","addPersonPlaceStatus","setAddPersonPlaceStatus","addPersonPlaceInput","setAddPersonPlaceInput","handleAddPersonPlace","setPersonPlace","setAddPersonPlace","setAllPeoplePlaces","allPeoplePlaces","allowAddPersonPlace","handlePersonPlaceSelect","personPlacetmp","peoplePlaces","setPeoplePlaces","getPeoplePlacesStatus","setGetPeoplePlacesStatus","getPeoplePlacesService","getAllPeoplePlacesStatus","setGetAllPeoplePlacesStatus","getAllPeoplePlacesService","showMorePeoplePlaces","setShowMorePeoplePlaces","find","personPlacetmp2","taskList","outline","wordWrap","TaskListInput","taskListComponent","taskAddButton","setTaskList","task","setTask","index","taskListTmp","splice","removeTask","random","StageAssignInputs","showStageInputs","setShowStageInputs","NotesInput","notes","setNotes","showNotesInput","setShowNotesInput","multiline","maxRows","addVehicleClick","AddVehicleSuccessDialog","setAddVehicleStatus","addedVehicle","AddVehicleFailureDialog","AddVehicleInputs","setAddedVehicle","tasks","openSuccessDialog","setOpenSuccessDialog","openFailureDialog","setOpenFailureDialog","FormHelperText","AddVehicle","GetVehicleLoading","ActionMenu","vehicleDetailState","setVehicle","anchorMenu","setAnchorMenu","trashVehicle","sellVehicleClick","DarkTab","Tab","AssignStageButton","assignStageState","dateOnLot","assignStageStatus","setAssignStageStatus","assignStageClick","dateAssigned","assignButton","disableElevation","disabledAssignButton","AssignStage","sellButton","dark","reassignButton","SellVehicleButtons","sellVehicleStatus","setSellVehicleStatus","completeStageStatus","setCompleteStageStatus","reassignClick","m","CompleteStageButton","completeStageClick","TabContent","alignContent","minHeight","content","flexDivider","CurrentStage","dateSoldDisplay","flexItem","dense","paddingRight","disablePadding","overflowWrap","table","chip","minWidth","DurationStats","reconditionTime","forSaleTime","reconditionTimeLabel","stageTimeLabel","completeTime","onLotTimeLabel","totalSellTimeLabel","TableContainer","Table","TableBody","TableRow","TableCell","scope","colSpan","TabPanel","other","hidden","a11yProps","StageTabs","tabValue","setTabValue","Tabs","centered","indicatorColor","textColor","EditInfoButtons","updateButton","editVehicleState","setEdit","vehicleDetailsMounted","editStock","editYear","editMake","editModel","editTrim","editDateAdded","editDateSold","editVehicleStatus","setEditVehicleStatus","updateVehicleDoc","updateVehicleService","updateVehicleClick","enabledUpdateButton","disabledUpdateButton","EditInfo","inputFieldStyle","setEditStock","setEditYear","setEditMake","setEditModel","setEditTrim","setEditDateAdded","setEditDateSold","date","maxDate","ReadonlyTextField","WebkitTextFillColor","ReadonlyInfoTab","month","day","editButtonDiv","editButton","InfoTab","setDisableDoneButton","edit","EditNotesButtons","editNotesState","editNotes","editNotesStatus","setEditNotesStatus","updateNotes","EditNotes","setEditNotes","NotesTab","HistoryTitleMenu","order","setOrder","orderAnchor","setOrderAnchor","handleOrderClose","closeButton","AddVehicleDialog","stageAssignment","timeElapsed","handleClose","formatDate","hour","minute","tableContainer","stageButton","HistoryTable","sortedStageHistory","formatDateAssigned","difference","openStageDetailsDialog","setOpenStageDetailsDialog","dialogStageAssignment","setDialogStageAssignment","TableHead","StageHistoryTab","stageHistory","setStageHistory","getStageHistoryStatus","setGetStageHistoryStatus","getStageHistoryService","b","aDate","bDate","VehicleTabs","tab","href","replace","buttonContainer","DetailsDoneButton","disableDoneButton","doneButtonClick","exit","VehicleFailed","errorMessagetmp","TrashedMessage","vehicleTitle","VehicleDetails","searchCriteria","searchValue","getVehicleStatus","setGetVehicleStatus","getVehicleError","setGetVehicleError","findVehicleService","AccordionPaper","Accordion","NavigateAccordianVehicleList","accordianDetails","paddingTop","vehicleList","StageVehicleList","StageVehicle","AccordionDetails","useVehicleStyles","vehicleDivider","PresonPlaceVehicleList","personPlaceId","PersonPlaceVehicle","AccordianList","accordianTitles","determineTitleColor","count","AccordionSummary","expandIcon","PeoplePlaces","getPersonPlaceVehicleCountsService","updateButtons","ReorderButtons","setReorderStages","originalStageOrder","editStageOrder","setEditStageOrder","setOrderStagesStatus","updateStageOrderClick","original","compareOrders","ReorderStages","setOriginalStageOrder","orderStagesStatus","defaultReturn","onDragEnd","source","reorderedStage","destination","droppableId","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","Stages","getStageVehicleCountsService","reorderStages","formatTimeText","donutChart","DonutChart","total","totalLabel","d3Container","useLayoutEffect","d3","domain","d","range","pie","padAngle","arcs","legendItems","endAngle","startAngle","legendHeight","legendItemRectSides","donutDiameter","arc","innerRadius","donutRadius","outerRadius","fill","generateId","remove","svg","append","attr","feMerge","viewBoxY","selectAll","chartSvg","text","centroid","call","insert","querySelector","getBoundingClientRect","totalWidth","labelBoxPaddingSides","totalHeight","labelBoxPaddingTopBottom","totalGroup","legend","donutContainerHeight","legendXStart","OverviewDetailsTable","turnStatistics","average","median","mode","getForSale","getForSalePercent","getSold","getSoldPercent","totalPercent","DetailsButton","showDetails","setShowDetails","OverviewStatistics","getTurnStatsStatus","chartData","FullNameDialog","selectedValue","accordionDetails","shortData","longData","personPlaceLabel","subLabel","StatisticDetails","statistics","openFullNameDialog","setOpenFullNameDialog","setSelectedValue","modePercent","portions","getVehicleTurnStats","getStagesStatistics","getPeoplePlacesStatistics","StagesStatistics","forSaleAvg","getStatsStatus","setGetStatsStatus","setChartData","setStatistics","getStagesStatisticsService","avgOverview","details","chart","VerticalBarChart","sortedData","xScale","avgPercentile","barMargin","PeoplePlacesStatistics","getPeoplePlaceStatistics","getPeoplePlacesStatisticsService","AnalyticsTabs","Statistics","vehicleTurnStats","setVehicleTurnStats","setGetTurnStatsStatus","getVehicleTurnStatsService","ActionList","demoState","clearDatabaseLi","addVehicleDescriptorsLi","addStagesLi","generateVehiclesLi","DemoDialog","setClearDatabaseStatus","setAddVehicleDescriptorsStatus","setAddStagesStatus","setGenerateVehiclesStatus","vehiclesAmount","clearDatabaseClick","clearDatabaseService","addVehicleDescriptorsClick","addVehicleDescriptorsService","addStagesClick","addStagesService","generateVehiclesClick","generateVehiclesService","continueClick","all","DemoContinueButton","vehiclesAmountError","monthsError","GenerateDemoVehicles","vehiclesAmountInput","setVehiclesAmountInput","setVehiclesAmountError","setVehiclesAmount","setMonths","setMonthsError","vehiclesAmountInputTmp","vehiclesAmountTmp","monthsTmp","LoadingFlexSpaceAround","LoadingDemoActions","clearDatabaseStatus","addVehicleDescriptorsStatus","addStagesStatus","generateVehiclesStatus","formControl","ActionCheckBoxes","setClearDatabase","setAddVehicleDescriptors","setAddStages","setGenerateVehicles","statuses","check","FormGroup","DemoActions","NumberInput","shouldForwardProp","prop","slot","overridesResolver","styles","outlined","ButtonFlex","DemoSettings","loadingTimeInput","setLoadingTimeInput","setLoadingTimeNum","inputError","setInputError","dbInput","setDbInput","loadingTimeString","loadingTimeStringTmp","Select","app","App","Analytics","createTheme","GlobalContext","CookiesProvider","StyledEngineProvider","injectFirst","ThemeProvider","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a885578e.chunk.js","sourcesContent":["// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { Link, useLocation } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Hidden from '@mui/material/Hidden';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Drawer from '@mui/material/Drawer';\nimport Divider from '@mui/material/Divider';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport AddIcon from '@mui/icons-material/Add';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\nimport LaptopIcon from '@mui/icons-material/Laptop';\nimport SettingsIcon from '@mui/icons-material/Settings';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        flexGrow: 1,\n        fontFamily: 'Lobster',\n        color: theme.titleColor.darkBlue,\n    },\n    menuItems: {\n        width: theme.mainMenu.width,\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'black'\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        [theme.breakpoints.up('lg')]: {\n            display: 'none',\n        },\n    },\n}));\n\n// React automatically includes window prop, so we don't need to include it as a prop when we call this component\ninterface MainMenuProps {\n    window?: () => Window;\n};\nexport default function MainMenu(props: MainMenuProps): React.ReactElement {\n    const { window } = props;\n    const classes = useStyles();\n    const location = useLocation();\n\n    //OPENING THE MENU\n    const [openMenu, setOpenMenu] = useState(false);\n    const container = window !== undefined ? () => window().document.body : undefined;\n\n    const toggleDrawer = (open: any) => (event: any) => {\n        if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n            return;\n        };\n\n        setOpenMenu(open);\n    };\n\n    // DISPLAYING SELECTION\n    type Selection = '/all-vehicles' | '/add-vehicle' | '/stages' | '/people-places' | '/analytics' | '/demo-actions' | '/demo-settings';\n    const [selection, setSelection] = useState<Selection>('/all-vehicles');\n\n    useEffect(() => {\n        const regex = /(\\/[\\w-]+)/;\n        const match = location!.pathname.match(regex);\n        match && setSelection(match[1] as Selection);\n    }, [location, setSelection]);\n\n    // MENU ITEMS\n    const menuItems = (\n        <div\n            className={classes.menuItems}\n            role=\"presentation\"\n            onClick={toggleDrawer(false)}\n            onKeyDown={toggleDrawer(false)}\n        >\n            <Hidden lgUp>\n                <Link className={classes.link} to='/'>\n                    <ListItem button>\n                        <Typography variant=\"h6\" component=\"h2\" className={classes.title}>\n                            AutoFlow\n                        </Typography>\n                    </ListItem>\n                </Link>\n            </Hidden>\n            <Divider />\n            <Link className={classes.link} to='/all-vehicles/active/asc/10/first/0'>\n                <ListItem\n                    button\n                    selected={selection === '/all-vehicles'}\n                >\n                    <ListItemIcon><VisibilityIcon /></ListItemIcon>\n                    <ListItemText>All Vehicles</ListItemText>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/add-vehicle'>\n                <ListItem\n                    button\n                    selected={selection === '/add-vehicle'}\n                >\n                    <ListItemIcon><AddIcon /></ListItemIcon>\n                    <ListItemText>Add Vehicle</ListItemText>\n                </ListItem>\n            </Link>\n            <Divider />\n            <Link className={classes.link} to='/stages'>\n                <ListItem\n                    button\n                    selected={selection === '/stages'}\n                >\n                    <ListItemIcon><VisibilityIcon /></ListItemIcon>\n                    <ListItemText>Stages</ListItemText>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/people-places'>\n                <ListItem\n                    button\n                    selected={selection === '/people-places'}\n                >\n                    <ListItemIcon><VisibilityIcon /></ListItemIcon>\n                    <ListItemText>People/Places</ListItemText>\n                </ListItem>\n            </Link>\n            <Divider />\n            <Link className={classes.link} to='/analytics/overview'>\n                <ListItem\n                    button\n                    selected={selection === '/analytics'}\n                >\n                    <ListItemIcon><EqualizerIcon /></ListItemIcon>\n                    <ListItemText>Analytics</ListItemText>\n                </ListItem>\n            </Link>\n            <Divider />\n            <Link className={classes.link} to='/demo-actions'>\n                <ListItem\n                    button\n                    selected={selection === '/demo-actions'}\n                >\n                    <ListItemIcon><LaptopIcon /></ListItemIcon>\n                    <ListItemText>Demo Actions</ListItemText>\n                </ListItem>\n            </Link>\n            <Link className={classes.link} to='/demo-settings'>\n                <ListItem\n                    button\n                    selected={selection === '/demo-settings'}\n                >\n                    <ListItemIcon><SettingsIcon /></ListItemIcon>\n                    <ListItemText>Demo Settings</ListItemText>\n                </ListItem>\n            </Link>\n            <Divider />\n        </div >\n    );\n\n    return <>\n        <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n            onClick={toggleDrawer(true)}\n            size=\"large\">\n            <MenuIcon />\n        </IconButton>\n        <nav>\n            <Hidden lgUp implementation='css'>\n                <Drawer container={container} anchor={'left'} open={openMenu} onClose={toggleDrawer(false)}>\n                    {menuItems}\n                </Drawer>\n            </Hidden>\n            <Hidden lgDown implementation='css'>\n                <Drawer variant='permanent' open>\n                    {menuItems}\n                </Drawer>\n            </Hidden>\n        </nav>\n    </>;\n};;","// react\nimport { useState } from 'react';\n// react-router-dom\nimport { useHistory, useLocation } from 'react-router-dom';\n// material-ui\nimport SearchIcon from '@mui/icons-material/Search';\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\nimport { Theme, alpha } from '@mui/material/styles';\nimport { styled } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst StyledInputAdornment = styled(InputAdornment)(({ theme }) => ({\n    color: theme.titleColor.lightBlue,\n    opacity: '50%',\n\n}));\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    search: {\n        paddingLeft: theme.spacing(.5),\n        display: 'flex',\n        position: 'relative',\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: alpha(theme.palette.common.white, 0.15),\n        '&:hover': {\n            backgroundColor: alpha(theme.palette.common.white, 0.25),\n        },\n        marginLeft: theme.spacing(2),\n        [theme.breakpoints.up('sm')]: {\n            marginLeft: theme.spacing(3),\n            width: 'auto',\n        },\n    },\n    inputRoot: {\n        color: 'inherit',\n    },\n}));\n\nexport default function StockSearchBar(): React.ReactElement {\n    const classes = useStyles();\n    const history = useHistory();\n    const location = useLocation();\n\n    const stockFormatTest = /^[0-9]{5}$/;\n\n    // STOCK SEARCH\n    const [searchStk, setSearchStk] = useState<string>('');\n    const [stockError, setStockError] = useState<string>('');\n\n    const handleChangeSearch = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setSearchStk(e.target.value);\n    };\n\n    const handleSearchKeyPress = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n        const previous = location.pathname;\n        if (e.key === 'Enter') {\n            if (searchStk !== '') {\n                if (!stockFormatTest.test(searchStk)) {\n                    setStockError('must be 5 digits');\n                } else {\n                    history.push(`/vehicle-details/stock/${searchStk}/stage?prev=${previous}`);\n                    setSearchStk('');\n                }\n            }\n        } else {\n            setStockError('');\n        };\n    };\n\n    return (\n        < TextField className={classes.search}\n            size='small'\n            placeholder=\"Stk#\"\n            error={stockError ? true : false}\n            helperText={stockError}\n            inputProps={{ 'aria-label': 'search' }\n            }\n            InputProps={{\n                startAdornment: (\n                    <StyledInputAdornment position='start'>\n                        <SearchIcon color='inherit' />\n                    </StyledInputAdornment>\n                ),\n                classes: {\n                    root: classes.inputRoot\n                }\n            }}\n            value={searchStk}\n            onChange={handleChangeSearch}\n            onKeyDown={handleSearchKeyPress}\n        />\n    );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\n\nexport const FlexCenter = styled(Box)({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'center',\n    alignItems: 'center'\n});\n\nexport const FlexSpaceBtwn = styled(Box)({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n});\n\nexport const FlexSpaceEvenly = styled(Box)({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'space-evenly',\n    alignItems: 'center'\n});\n\nexport const FlexStart = styled(Box)({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'start',\n    alignItems: 'center'\n});\n\nexport const FlexEnd = styled(Box)({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'flex-end',\n    alignItems: 'center'\n});\n\nexport const FlexSpaceAround = styled(Box)({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'space-around',\n    alignItems: 'center'\n});","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from './flex';\n\nconst useStyles = makeStyles({\n    flexCenter: {\n        position: 'fixed',\n        top: 0,\n        left: 0,\n        height: '100vh',\n        width: '100vw',\n        backgroundColor: 'black',\n        opacity: 0.5,\n        zIndex: 100,\n    },\n});\n\nexport default function LoadingFullPage(): React.ReactElement {\n    const classes = useStyles();\n\n    return (\n        <FlexCenter className={classes.flexCenter}>\n            <CircularProgress />\n        </FlexCenter>\n    );\n}","// react\nimport { useEffect, useRef } from 'react';\n// react-router\nimport { useLocation, useParams } from 'react-router-dom';\n// THIS PROJECT\n// types\nimport { VehicleStatus } from './types/Vehicle';\nimport { ListOrder, Page } from './types/misc';\n\nexport function useCheckMounted() {\n  const mounted = useRef(true);\n\n  useEffect(() => {\n    mounted.current = true;\n    return () => { mounted.current = false; };\n  });\n\n  return mounted;\n}\n\nexport function useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nexport function useVehiclePage() {\n  interface ParamTypes {\n    statusParam: VehicleStatus;\n    sortParam: ListOrder;\n    perPageParam: string;\n    pageParam: Page;\n    compareParam: string;\n  }\n  return useParams<ParamTypes>();\n}\n\n","// types\nimport { FailedResult, DeleteSuccess, GetSuccess, SuccessResult } from \"../types/ServiceResults\";\nimport { DbSelection, Defaults } from '../types/Demo';\n\nconst demo = 'http://localhost:7000/api/demo';\n\nexport async function selectDatabase(dbSelection: DbSelection): Promise<SuccessResult | FailedResult> {\n  // const dbSelectionJSON = JSON.stringify(dbSelection);\n  const body = { dbSelection };\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(body)\n  };\n  const response = await fetch('http://localhost:7001/api/demo/select-db', options);\n  const json = await response.json();\n  return json;\n}\n\n// gets the default stage assignment, i.e. 'stage: Assign, personPlace: Inventory Manager'\nexport async function getDefaults(): Promise<GetSuccess<Defaults> | FailedResult> {\n  const response = await fetch(demo + '/get-defaults');\n  const json = await response.json();\n  return json;\n};\n\nexport async function clearDatabase(): Promise<DeleteSuccess | FailedResult> {\n  const options = {\n    method: 'DELETE',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + '/clear-database', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function addVehicleDescriptors(): Promise<SuccessResult | FailedResult> {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + '/add-vehicle-descriptors', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function addStages(): Promise<SuccessResult | FailedResult> {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + '/add-stages', options);\n  const json = await response.json();\n  return json;\n};\n\nexport async function generateVehicles(vehicleAmount: string, months: string): Promise<SuccessResult | FailedResult> {\n  const options = {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n  };\n  const response = await fetch(demo + `/generate-vehicles/${vehicleAmount}/${months}`, options);\n  const json = await response.json();\n  return json;\n}","// material-ui\nimport SentimentVeryDissatisfiedIcon from '@mui/icons-material/SentimentVeryDissatisfied';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\n\ninterface CenteredErrorProps {\n    errorMessage: string;\n    retryAction?: () => void;\n};\nexport default function CenteredError(props: CenteredErrorProps): React.ReactElement {\n    const { errorMessage, retryAction } = props;\n\n    return (\n        <FlexCenter flexDirection='column'>\n            <SentimentVeryDissatisfiedIcon />\n            <p>{errorMessage}</p>\n            <Divider />\n            {retryAction\n                && <Button onClick={retryAction}>\n                    Retry\n                </Button>}\n        </FlexCenter>\n    );\n}","// react\nimport { createContext, useContext, useState, ReactChild, ReactChildren, useCallback, useEffect } from 'react';\n// reat-cookie\nimport { useCookies } from 'react-cookie';\n// THIS PROJECT\n// components\nimport LoadingFullPage from '../components/common/LoadingFullPage';\nimport CenteredError from '../components/common/CenteredError';\n// services\nimport { selectDatabase as selectDatabaseService } from '../services/demo';\nimport { DbSelection } from '../types/Demo';\n// types\nimport { Set } from '../types/misc';\n\ninterface DemoContextInterface {\n  loadingTime: number;\n  setLoadingTime: Set<number>;\n  db: DbSelection | null;\n  setDb: Set<DbSelection | null>;\n  dbReady: boolean;\n  delay: () => Promise<void>;\n  saveLoadingTime: (loadingTimeNum: number) => void;\n  saveDb: (dbSelection: DbSelection | null) => void;\n  selectDatabase: (dbSelection: DbSelection) => void;\n}\n\nconst DemoContext = createContext({}); // creating with an initial blank context, this is okay since we will never be using this context without a provider\n\nexport function useDemoContext(): DemoContextInterface {\n  return useContext(DemoContext) as DemoContextInterface;\n}\n\ninterface DemoProviderProps {\n  children: ReactChild | ReactChildren;\n}\n\nexport function DemoProvider(props: DemoProviderProps): React.ReactElement {\n  const [cookies, setCookie] = useCookies(['demoLoadingTime', 'demoDb']);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [loadingTime, setLoadingTime] = useState<number>(0); // milliseconds\n  const [dbReady, setDbReady] = useState<boolean>(false);\n  const [db, setDb] = useState<DbSelection | null>(null);\n  const [error, setError] = useState<boolean>(false);\n\n  const saveDb = useCallback((dbSelection: DbSelection | null) => {\n    setCookie('demoDb', dbSelection, { path: '/' });\n  }, [setCookie]);\n\n  useEffect(() => {\n    cookies.demoLoadingTime ? setLoadingTime(parseInt(cookies.demoLoadingTime)) : setLoadingTime(500); //set 500 default if cookie is undefined\n    cookies.demoDb ? setDb(cookies.demoDb) : saveDb('mongodb'); //set 500 default if cookie is undefined\n  }, [cookies.demoLoadingTime, cookies.demoDb, saveDb]);\n\n  function saveLoadingTime(loadingTimeNum: number) {\n    setCookie('demoLoadingTime', loadingTimeNum, { path: '/' });\n  }\n\n  async function delay() {\n    await new Promise(resolve => setTimeout(resolve, loadingTime));\n  }\n\n  const selectDatabase = useCallback((dbSelection: DbSelection) => {\n    setDbReady(false);\n    setLoading(true);\n    selectDatabaseService(dbSelection)\n      .then(() => {\n        setDbReady(true);\n        setLoading(false);\n      }, e => {\n        console.error(e);\n        setError(true);\n        setDbReady(false);\n        setLoading(false);\n      });\n  }, []);\n\n  useEffect(() => {\n    db && selectDatabase(db);\n  }, [selectDatabase, db]);\n\n  const value: DemoContextInterface = {\n    loadingTime, setLoadingTime, db, setDb, dbReady, delay, saveLoadingTime, saveDb, selectDatabase\n  };\n  return (\n    <DemoContext.Provider value={value}>\n      {loading ? <LoadingFullPage /> : error ? <CenteredError errorMessage={`Failed to connect to server. Ensure that 'Selection Server' is listening on localhost:7001 and refresh`} /> : props.children}\n    </DemoContext.Provider>\n  );\n}\n","// react\nimport { createContext, useContext, useState, useEffect, ReactChild, ReactChildren, useCallback } from 'react';\n// react-cookie\nimport { useCookies } from 'react-cookie';\n// THIS PROJECT\n// components\nimport LoadingFullPage from '../components/common/LoadingFullPage';\n// hooks\nimport { useCheckMounted } from '../hooks';\n// services\nimport { getDefaults } from '../services/demo';\n// contexts\nimport { useDemoContext } from './DemoContext';\n// types\nimport { Set } from '../types/misc';\nimport { Defaults } from '../types/Demo';\n\ninterface AuthContextInterface {\n  currentUser: string | null;\n  loading: boolean;\n  logIn: (name: string) => void;\n  logOut: () => void;\n  userPreferences: Defaults;\n  setUserPreferences: Set<Defaults>;\n  getUserPreferences: () => Promise<void>;\n};\n\nconst AuthContext = createContext({});  // creating with an initial blank context, this is okay since we will never be using this context without a provider\n\n\nexport function useAuthContext(): AuthContextInterface {\n  if (AuthContext === null) {\n    console.error('AuthContext is null, make sure to only use AuthContext within an AuthProvider');\n  }\n  return useContext(AuthContext) as AuthContextInterface;\n}\n\ninterface AuthProviderProps {\n  children: ReactChild | ReactChildren;\n}\nexport function AuthProvider(props: AuthProviderProps): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { dbReady, delay } = useDemoContext();\n  const { children } = props;\n  const [cookies, setCookie, removeCookie] = useCookies(['user', 'demoDb', 'demoLoadingTime']);\n  const [currentUser, setCurrentUser] = useState<string | null>(cookies.user);\n  const [loading, setLoading] = useState(true);\n\n  async function logIn(name: string) {\n    mounted.current && setLoading(true);\n    await delay();\n    setCookie('user', name, { path: '/' });\n    mounted.current && setLoading(false);\n  };\n\n  async function logOut() {\n    mounted.current && setLoading(true);\n    await delay();\n    removeCookie('user', { path: '/' });\n    removeCookie('demoDb', { path: '/' });\n    removeCookie('demoLoadingTime', { path: '/' });\n    mounted.current && setLoading(false);\n  };\n\n  const [userPreferences, setUserPreferences] = useState<Defaults>({\n    defaultStageAssignment: {\n      stage: {\n        id: '',\n        name: ''\n      },\n      personPlace: {\n        id: '',\n        name: ''\n      }\n    }\n  });\n\n  const getUserPreferences = useCallback(async () => {\n    mounted.current && setLoading(true);\n    getDefaults()\n      .then(result => {\n        mounted.current && setLoading(false);\n        mounted.current && result.status === 'success' && result.data && setUserPreferences(result.data);\n      }, e => {\n        mounted.current && setLoading(false);\n        mounted.current && console.error(e);\n      });\n\n  }, [mounted]);\n\n  useEffect(() => {\n    dbReady && getUserPreferences();\n  }, [getUserPreferences, dbReady]);\n\n  useEffect(() => {\n    setCurrentUser(cookies.user);\n  }, [cookies.user]);\n\n  const value: AuthContextInterface = {\n    currentUser,\n    loading,\n    logIn,\n    logOut,\n    userPreferences,\n    setUserPreferences,\n    getUserPreferences,\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {loading ? <LoadingFullPage /> : children}\n    </AuthContext.Provider>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport IconButton from '@mui/material/IconButton';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// THIS PROJECT\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\nexport default function UserMenu(): React.ReactElement {\n    const { currentUser, logOut } = useAuthContext();\n    const [anchorUserEl, setAnchorUserEl] = useState<null | HTMLElement>(null);\n    const openUserMenu = Boolean(anchorUserEl);\n\n    const toggleUserMenu = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorUserEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorUserEl(null);\n    };\n\n    return <>\n        <IconButton\n            aria-label=\"account of current user\"\n            aria-controls=\"menu-appbar\"\n            aria-haspopup=\"true\"\n            onClick={toggleUserMenu}\n            color=\"inherit\"\n            size=\"large\">\n            <AccountCircle />\n        </IconButton>\n        <Menu\n            id=\"menu-appbar\"\n            anchorEl={anchorUserEl}\n            anchorOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            keepMounted\n            transformOrigin={{\n                vertical: 'top',\n                horizontal: 'right',\n            }}\n            open={openUserMenu}\n            onClose={handleClose}\n        >\n            <MenuItem disabled>{currentUser}</MenuItem>\n            <MenuItem onClick={logOut}>LOG OUT</MenuItem>\n        </Menu>\n    </>;\n};\n","// react-router-dom\nimport { Link } from 'react-router-dom';\n// material-ui\nimport CssBaseline from '@mui/material/CssBaseline';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport MainMenu from './MainMenu';\nimport StockSearchBar from './StockSearchBar';\nimport UserMenu from './UserMenu';\n\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    root: {\n        position: 'relative',\n        color: theme.titleColor.lightBlue,\n        margin: theme.spacing(7.5),\n        left: '0',\n        top: '0',\n        zIndex: 100,\n    },\n    title: {\n        flexGrow: 1,\n        fontFamily: 'Lobster',\n    },\n    link: {\n        textDecoration: 'none',\n        color: theme.titleColor.lightBlue,\n    },\n    appBar: {\n        backgroundColor: '#101010',\n        [theme.breakpoints.up('lg')]: {\n            width: `calc(100% - ${theme.mainMenu.width})`,\n        },\n    },\n}));\n\nexport default function Nav(): React.ReactElement {\n    const classes = useStyles();\n\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <AppBar className={classes.appBar} color='transparent' position=\"fixed\">\n                <Toolbar>\n                    <MainMenu />\n                    <Typography variant=\"h6\" component=\"h1\" className={classes.title}>\n                        <Link className={classes.link} to='/'>AutoFlow</Link>\n                    </Typography>\n                    <StockSearchBar />\n                    <UserMenu />\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n}\n","// react\nimport { FunctionComponent } from 'react';\n// react-router-dom\nimport { Route, Redirect } from 'react-router-dom';\n// THIS PROJECT\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\ninterface PrivateRouteProps {\n    exact?: boolean,\n    path: string,\n    component: FunctionComponent,\n};\nexport default function PrivateRoute(props: PrivateRouteProps): React.ReactElement {\n    const { currentUser } = useAuthContext();\n    let Component: FunctionComponent = props.component;\n\n    let renderComponent: JSX.Element = (<div></div>);\n    if (currentUser) {\n        renderComponent = (\n            <Component />\n        );\n    } else if (!currentUser) {\n        renderComponent = (\n            <Redirect to='/log-in' />\n        );\n    };\n\n    return (\n        <Route\n            {...props.exact}\n            path={props.path}\n        >\n            {renderComponent}\n        </Route >\n    );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Card from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport CardContent from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport { FlexCenter } from './flex';\n\nexport const LargeCard = styled(Card)(({\n    theme\n}) => ({\n    width: 'clamp(300px, 98vw, 750px)',\n    margin: 'auto',\n    paddingBottom: theme.spacing(5),\n    backgroundColor: 'white',\n}));\n\nexport const SmallCard = styled(Card)(({\n    theme\n}) => ({\n    width: 'clamp(300px, 98vw, 500px)',\n    margin: 'auto',\n    paddingBottom: theme.spacing(2),\n    backgroundColor: 'white',\n}));\n\nexport const ExtraSmallCard = styled(Card)(({\n    theme\n}) => ({\n    width: 'clamp(200px, 50vw, 300px)',\n    margin: 'auto',\n    paddingBottom: theme.spacing(2),\n    backgroundColor: 'white',\n}));\n\nexport const ContentHeader = styled('div')(({\n    theme\n}) => ({\n    padding: theme.spacing(1),\n    width: '100%',\n    textAlign: 'center',\n}));\n\nexport const ContentTitle = styled(Typography)(({\n    theme\n}) => ({\n    color: theme.titleColor.darkBlue,\n}));\n\ninterface IconContentTitleProps {\n    icon: JSX.Element;\n    children: React.ReactChild | React.ReactChild[];\n    variant?: 'h1'\n    | 'h2'\n    | 'h3'\n    | 'h4'\n    | 'h5'\n    | 'h6'\n    | 'subtitle1'\n    | 'subtitle2'\n    | 'body1'\n    | 'body2'\n    | 'caption'\n    | 'button'\n    | 'overline'\n    | 'inherit';\n};\nexport function IconContentTitle(props: IconContentTitleProps): React.ReactElement {\n    return (\n        <FlexCenter style={{ gap: 10 }}>\n            {props.icon}\n            <ContentTitle variant={props.variant}>{props.children}</ContentTitle>\n        </FlexCenter>\n    );\n};\n\nexport const LargeContent = styled(CardContent)({\n    width: 'clamp(300px, 98vw, 600px)',\n    padding: 10,\n    margin: '0px auto 0px auto',\n    backgroundColor: 'white'\n});\n\nexport const SmallContent = styled(CardContent)({\n    width: 'clamp(300px, 98vw, 450px)',\n    padding: 10,\n    margin: 'auto',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column',\n});\n\nexport const ContentPaper = styled(Paper)(({\n    theme\n}) => ({\n    padding: theme.spacing(2),\n    margin: theme.spacing(1),\n}));","// react\nimport { useState } from 'react';\n// react-router-dom\nimport { Redirect } from 'react-router-dom';\n// material-ui\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport Divider from '@mui/material/Divider';\nimport TextField from '@mui/material/TextField';\n// THIS PROJECT\n// components\nimport { ExtraSmallCard, ContentHeader, ContentTitle } from '../common/cardContent';\nimport { FlexCenter } from '../common/flex';\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    outerFlex: {\n        height: '80vh',\n        width: '100vw',\n        position: 'fixed',\n        x: 0,\n        y: 0\n    },\n    card: {\n        padding: theme.spacing(3),\n    },\n    nameField: {\n        marginTop: 0,\n        margin: theme.spacing(2),\n    },\n    title: {\n        fontFamily: 'Lobster',\n    }\n}));\n\nexport default function LogIn(): React.ReactElement {\n    const classes = useStyles();\n    const { currentUser, logIn } = useAuthContext();\n\n    const [name, setName] = useState<string>('');\n\n    const changeName = (e: React.ChangeEvent<{ value: unknown; }>): void => {\n        setName(e.target.value as string);\n    };\n\n    const submit = () => logIn(name);\n\n    return (\n        <>\n            <FlexCenter className={classes.outerFlex}>\n                <ExtraSmallCard className={classes.card}>\n                    <ContentHeader>\n                        <FlexCenter>\n                            <ContentTitle className={classes.title} variant='h5'>AutoFlow</ContentTitle>\n                        </FlexCenter>\n                        <Divider />\n                    </ContentHeader>\n                    <FlexCenter flexDirection='column'>\n                        <TextField id='user-name' label=\"Name\" variant='outlined' size='small'\n                            className={classes.nameField} onChange={changeName} value={name} autoComplete='off' />\n                        <Button onClick={submit} color='primary' variant='contained'\n                            disabled={name.length > 0 ? false : true}>\n                            Log In\n                        </Button>\n                    </FlexCenter>\n                </ExtraSmallCard>\n            </FlexCenter>\n            {currentUser && <Redirect to='/' />}\n        </>\n    );\n}","// react\nimport { useState } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// material-ui\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport Button from '@mui/material/Button';\nimport FilterListIcon from '@mui/icons-material/FilterList';\n// THS PROJECT\n// hooks\nimport { useVehiclePage } from '../../hooks';\n// types\nimport { VehicleStatus } from '../../types/Vehicle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    trash: {\n        color: theme.palette.secondary.main,\n    },\n    sold: {\n        color: theme.palette.success.main,\n    },\n    active: {\n        color: theme.palette.primary.main,\n    },\n}));\n\ninterface StatusFilterProps {\n    filter: VehicleStatus;\n    setFilter: (filter: VehicleStatus) => void;\n}\nexport default function StatusFilter(props: StatusFilterProps): React.ReactElement {\n    const classes = useStyles();\n    const history = useHistory();\n    const { statusParam, sortParam, perPageParam } = useVehiclePage();\n\n    const [filterAnchor, setFilterAnchor] = useState<null | HTMLElement>(null);\n\n    const handleFilterClick = (e: React.MouseEvent<HTMLElement>) => {\n        setFilterAnchor(e.currentTarget);\n    };\n\n    const handleFilterClose = (newStatus: VehicleStatus) => {\n        setFilterAnchor(null);\n        history.push(`/all-vehicles/${newStatus}/${sortParam}/${perPageParam}/first/0`);\n    };\n\n    let filterDisplay: JSX.Element;\n\n    if (statusParam === 'trash') {\n        filterDisplay = <span className={classes.trash}>TRASH</span>;\n    } else if (statusParam === 'sold') {\n        filterDisplay = <span className={classes.sold}>SOLD</span>;\n    } else {\n        filterDisplay = <span className={classes.active}>ACTIVE</span>;\n    };\n\n    return (\n        <>\n            <Button size='small' startIcon={<FilterListIcon />} aria-controls='filter-menu' aria-haspopup='true' onClick={handleFilterClick}>\n                {filterDisplay}\n            </Button>\n            <Menu\n                id=\"filter-menu\"\n                anchorEl={filterAnchor}\n                keepMounted\n                open={Boolean(filterAnchor)}\n                onClose={() => handleFilterClose(statusParam)}\n            >\n                <MenuItem onClick={() => handleFilterClose('active')}>Active</MenuItem>\n                <MenuItem onClick={() => handleFilterClose('sold')}>Sold</MenuItem>\n                <MenuItem onClick={() => handleFilterClose('trash')}>Trash</MenuItem>\n            </Menu>\n        </>\n    );\n}\n","// react-router-dom\nimport { useHistory } from 'react-router';\n// material-ui\nimport Button from '@mui/material/Button';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\n// THIS PROJECT\n// hooks\nimport { useVehiclePage, useQuery } from '../../hooks';\n// types\nimport { ListOrder } from '../../types/misc';\n\ninterface VehicleOrderProps {\n    sort: ListOrder;\n    setSort: (sort: ListOrder) => void;\n};\nexport default function VehicleOrder(props: VehicleOrderProps): React.ReactElement {\n    const history = useHistory();\n    const { sort, setSort } = props;\n    const { statusParam, perPageParam } = useVehiclePage();\n    const query = useQuery().toString();\n\n    const vehicleOrderClick = () => {\n        let newSort: ListOrder;\n        sort === 'asc' ? newSort = 'desc' : newSort = 'asc';\n        setSort(newSort);\n        history.push(`/all-vehicles/${statusParam}/${newSort}/${perPageParam}/first/0?${query}`);\n    };\n\n    return (\n        <Button\n            size='small'\n            startIcon={<ArrowDownwardIcon />}\n            aria-controls='sort-menu'\n            aria-haspopup='true'\n            onClick={vehicleOrderClick}\n        >\n            {sort === 'asc' ? 'oldest' : 'recent'}\n        </Button>\n    );\n}","// react-router-dom\nimport { Link } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Box from '@mui/material/Box';\nimport Fab from '@mui/material/Fab';\nimport AddIcon from '@mui/icons-material/Add';\n\nconst useStyles = makeStyles({\n    addButton: {\n        position: 'absolute',\n        right: 5,\n        top: 5,\n    },\n});\n\nexport default function AddVehicleButton(): React.ReactElement {\n    const classes = useStyles();\n\n    return (\n        <Box className={classes.addButton}>\n            <Link to='/add-vehicle'>\n                <Fab size='small' color=\"primary\" aria-label=\"add\">\n                    <AddIcon />\n                </Fab>\n            </Link>\n        </Box>\n    );\n}","// material-ui\nimport Dialog from '@mui/material/Dialog';\nimport DialogContent from '@mui/material/DialogContent';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n    dialog: {\n        margin: 'auto',\n    },\n    dialogContent: {\n        width: '80vw',\n        maxWidth: 400,\n        maxHeight: '90vh',\n    },\n}));\n\ninterface SelectDialogProps {\n    open: boolean;\n    setOpen: (val: boolean) => void;\n    children: JSX.Element;\n    flex?: boolean;\n};\nexport default function SelectDialog(props: SelectDialogProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { open, setOpen, children, flex } = props;\n\n    return (\n        <Dialog className={classes.dialog} open={open} onClose={() => setOpen(false)}>\n            <DialogContent className={classes.dialogContent}\n                style={flex ? { display: 'flex', justifyContent: 'center', alignItems: 'center' } : {}}\n            >\n                {children}\n            </DialogContent>\n        </Dialog>\n    );\n};\n","// material-ui\nimport Button from '@mui/material/Button';\nimport TextField from '@mui/material/TextField';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\n\ninterface CustomSelectProps {\n    label: string;\n    id: string;\n    value: string;\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n    disabled?: boolean;\n    className?: string,\n    button?: boolean,\n    TextFieldProps?: any,\n    ButtonProps?: any;\n};\nexport default function CustomSelect(props: CustomSelectProps): React.ReactElement {\n    const { label, id, value, setOpen, disabled, className, button, TextFieldProps, ButtonProps } = props;\n\n    if (button) {\n        return (\n            <Button\n                id={id}\n                className={className && className}\n                onClick={() => { !disabled && setOpen(true); }}\n                variant='outlined'\n                size='small'\n                color={!value ? 'inherit' : 'primary'}\n                {...ButtonProps}\n                disabled={disabled ? true : false}\n            >\n                {value ? value : label}\n            </Button>\n        );\n    } else {\n        return (\n            <TextField\n                className={className && className}\n                label={label}\n                id={id}\n                value={value}\n                variant='outlined'\n                InputProps={{\n                    endAdornment: <ExpandMore />,\n                    readOnly: true,\n                    style: {\n                        cursor: 'pointer'\n                    }\n                }}\n                inputProps={{\n                    style: {\n                        cursor: 'pointer'\n                    }\n                }}\n                onClick={() => { !disabled && setOpen(true); }}\n                {...TextFieldProps}\n                disabled={disabled ? true : false}\n            />\n        );\n    };\n}","// material-ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport RadioButtonUncheckedIcon from '@mui/icons-material/RadioButtonUnchecked';\nimport RadioButtonCheckedIcon from '@mui/icons-material/RadioButtonChecked';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n    listItem: {\n        paddingLeft: theme.spacing(2),\n    },\n    emphasized: {\n        fontStyle: 'italic',\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\ninterface SelectListItemProps {\n    onClick: (selection: unknown) => void;\n    textVal: string;\n    selectCondition: boolean;\n    emphasize?: boolean;\n};\nexport default function SelectListItem(props: SelectListItemProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { onClick, textVal, selectCondition, emphasize } = props;\n\n    return (\n        <ListItem button onClick={onClick} className={emphasize ? classes.emphasized : classes.listItem}>\n            <ListItemText primary={textVal} />\n            {selectCondition\n                ? <RadioButtonCheckedIcon color='primary' />\n                : <RadioButtonUncheckedIcon />}\n        </ListItem>\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\n// types\nimport { Set } from '../../../types/misc';\n\ninterface YearSelectProps {\n    year: string;\n    setYear: Set<string>;\n    className?: string;\n    button?: boolean;\n    TextFieldProps?: any;\n    ButtonProps?: any;\n};\nexport default function YearSelect(props: YearSelectProps): React.ReactElement {\n    const { year, setYear, className, button, TextFieldProps, ButtonProps } = props;\n\n    const currentDate = new Date();\n    const currentYear = currentDate.getFullYear();\n    let years = [];\n    for (let i = 1980; i <= currentYear; i++) {\n        years.unshift(i.toString());\n    };\n\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleYearSelect = (year: string) => {\n        setYear(year);\n        setOpen(false);\n    };\n\n    return (\n        <>\n            <CustomSelect\n                label={button ? 'year' : 'Year*'}\n                id='year-select'\n                value={year}\n                setOpen={setOpen}\n                className={className}\n                button={button ? true : false}\n                TextFieldProps={TextFieldProps}\n                ButtonProps={ButtonProps}\n            />\n            <SelectDialog open={open} setOpen={setOpen}>\n                <List>\n                    <SelectListItem\n                        onClick={() => handleYearSelect('')}\n                        textVal={''}\n                        selectCondition={year === ''}\n                    />\n                    <Divider />\n                    {years.map(yeartmp =>\n                        <div key={yeartmp}>\n                            <SelectListItem\n                                onClick={() => handleYearSelect(yeartmp)}\n                                textVal={yeartmp}\n                                selectCondition={yeartmp === year}\n                            />\n                            <Divider />\n                        </div>)}\n                </List>\n            </SelectDialog >\n        </>\n    );\n}","// material-ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport AddIcon from '@mui/icons-material/Add';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n    emphasized: {\n        fontStyle: 'italic',\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\ninterface AddListItemProps {\n    onClick: () => void;\n    textVal: string;\n};\nexport default function AddListItem(props: AddListItemProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { onClick, textVal } = props;\n\n    return (\n        <ListItem button onClick={onClick} className={classes.emphasized}>\n            <ListItemText primary={textVal} />\n            <AddIcon />\n        </ListItem>\n    );\n}","type ResultStatus = 'success' | 'exists' | 'failed';\n\nexport abstract class Result {\n  status: ResultStatus;\n  constructor(status: ResultStatus) {\n    this.status = status;\n  }\n};\n\nexport class SuccessResult extends Result {\n  constructor() {\n    super('success');\n  }\n};\n\nexport class GetSuccess<Return> extends SuccessResult {\n  data: Return;\n\n  constructor(data: Return) {\n    super();\n    this.data = data;\n  };\n};\n\nexport class PostSuccess<Doc, Data = void> extends SuccessResult {\n  id: string;\n  doc: Doc;\n  data?: Data;\n\n  constructor(id: string, addedDoc: Doc, data?: Data,) {\n    super();\n    this.id = id;\n    this.doc = addedDoc;\n    this.data = data;\n  };\n};\n\nexport class PostExists extends Result {\n  field: string;\n  value: string;\n  patch: null = null;\n  doc: null = null;\n  data: null = null;\n\n  constructor(field: string, value: string) {\n    super('exists');\n    this.field = field;\n    this.value = value;\n  };\n};\n\nexport class PatchSuccess<Patch, Doc, Data = void> extends PostSuccess<Doc, Data> {\n  patch: Patch;\n\n  constructor(id: string, patch: Patch, doc: Doc, data?: Data) {\n    super(id, doc, data);\n    this.patch = patch;\n  };\n};\n\nexport class PatchManyResult<Return> extends Result {\n  constructor(\n    public status: 'success' | 'failed',\n    public patches: (PatchSuccess<unknown, unknown> | FailedResult)[],\n    public data: Return\n  ) { super(status); }\n}\n\nexport class DeleteSuccess extends SuccessResult { };\n\nexport class FailedResult extends Result {\n  patch = null;\n  doc = null;\n  data = null;\n  error?: string;\n  requestBody?: object;\n  details?: string;\n\n  constructor(error?: string, requestBody?: object, details?: string) {\n    super('failed');\n    this.error = error;\n    this.requestBody = requestBody;\n    this.details = details;\n  };\n}","// types\nimport { VehiclePage, AddVehicleParam, VehicleStatus, DetailedVehicle, NextStock, CheckStock, ModelDoc } from '../types/Vehicle';\nimport { GetSuccess, PostSuccess, PatchSuccess, PostExists, FailedResult, DeleteSuccess } from '../types/ServiceResults';\nimport { IdName, ListOrder, Page } from '../types/misc';\n\nconst vehicles = 'http://localhost:7000/api/vehicles';\n\nexport async function getVehiclesPaged(status: VehicleStatus, sort: ListOrder, perPage: number, page: Page, compare: number, query: string): Promise<GetSuccess<VehiclePage> | FailedResult> {\n    const response = await fetch(`${vehicles}/get-vehicles-paged/${status}/${sort}/${perPage}/${page}/${compare}?${query}`);\n    const json = await response.json();\n    return json;\n}\n\nexport async function getVehiclesByStatus(statusArray: VehicleStatus[]): Promise<GetSuccess<DetailedVehicle[]> | FailedResult> {\n    const queryParams = statusArray.map(status => `status=${status}`).join('&');\n    const response = await fetch(vehicles + `?${queryParams}`);\n    const json = await response.json();\n    return json;\n}\n\nexport async function findVehicle(field: 'id' | 'stock', value: string): Promise<GetSuccess<DetailedVehicle> | FailedResult> {\n    const response = await fetch(`${vehicles}/find?field=${field}&value=${value}`);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getNextStock(): Promise<GetSuccess<NextStock> | FailedResult> {\n    const response = await fetch(vehicles + '/next-stock');\n    const json = await response.json();\n    return json;\n};\n\nexport async function checkStock(stock: string): Promise<GetSuccess<CheckStock> | FailedResult> {\n    if (!stock) return new GetSuccess({ exists: false });\n    const response = await fetch(`${vehicles}/check-stock?stock=${stock}`);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getMakes(): Promise<GetSuccess<IdName[]> | FailedResult> {\n    const response = await fetch(vehicles + '/makes');\n    const json = await response.json();\n    return json;\n};\n\nexport async function addMake(make: string): Promise<PostSuccess<IdName, IdName[]> | PostExists | FailedResult> {\n    const body = { make };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/add-make', options);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getModels(makeId: string): Promise<GetSuccess<IdName[]> | FailedResult> {\n    const response = await fetch(`${vehicles}/models?makeId=${makeId}`);\n    const json = await response.json();\n    return json;\n};\n\nexport async function addModel(makeId: string, model: string): Promise<PostSuccess<ModelDoc, IdName[]> | PostExists | FailedResult> {\n    const body = { makeId, model };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/add-model', options);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getTrims(modelId: string): Promise<GetSuccess<IdName[]> | FailedResult> {\n    const response = await fetch(`${vehicles}/trims?modelId=${modelId}`);\n    const json = await response.json();\n    return json;\n}\n\nexport async function addTrim(modelId: string, trim: string): Promise<PatchSuccess<IdName, ModelDoc, IdName[]> | PostExists | FailedResult> {\n    const body = { modelId, trim };\n    const options = {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/add-trim', options);\n    const json = await response.json();\n    return json;\n}\n\nexport async function addVehicle(addVehicleParam: AddVehicleParam, initialStageParam: any): Promise<PostSuccess<DetailedVehicle> | PostExists | FailedResult> {\n    const body = {\n        addVehicleParam: JSON.stringify({ ...addVehicleParam, dateAdded: Date.now() }),\n        initialStageParam: JSON.stringify(initialStageParam),\n    };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/add', options);\n    const json = await response.json();\n    return json;\n}\n\nexport async function updateVehicle(vehicleId: string, updateDoc: object): Promise<PatchSuccess<object, DetailedVehicle> | FailedResult> {\n    const body = {\n        vehicleId,\n        updateDoc: JSON.stringify(updateDoc),\n    };\n    const options = {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/update', options);\n    const json = await response.json();\n    return json;\n}\n\nexport async function sellVehicle(vehicleId: string, stageAssignmentId: string, dateSold: number): Promise<PatchSuccess<object, DetailedVehicle> | FailedResult> {\n    const body = {\n        vehicleId,\n        stageAssignmentId,\n        dateSold,\n    };\n    const options = {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/sell', options);\n    const json = await response.json();\n    return json;\n}\n\nexport async function deleteVehicle(vehicleId: string): Promise<DeleteSuccess | FailedResult> {\n    const body = { vehicleId };\n    const options = {\n        method: 'DELETE',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(vehicles + '/delete', options);\n    const json = await response.json();\n    return json;\n}","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addMake } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\n\nconst useStyles = makeStyles((theme) => ({\n    addButtons: {\n        marginLeft: 'auto',\n    },\n}));\n\ninterface AddMakeProps {\n    makeSelectParent: {\n        mounted: MutableRefObject<boolean>;\n        setMake: Set<IdName>;\n    };\n    makeSelect: {\n        mounted: MutableRefObject<boolean>;\n        addMake: boolean;\n        setAddMake: Set<boolean>;\n        setMakes: Set<IdName[]>;\n        open: boolean;\n        setOpen: Set<boolean>;\n    };\n};\nexport default function AddMake(props: AddMakeProps): React.ReactElement {\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n\n    const { makeSelectParent: p, makeSelect: ms } = props;\n\n    const mounted = useCheckMounted();\n    const [addMakeStatus, setAddMakeStatus] = useState<PostRequestStatus | ''>('');\n    const [addMakeInput, setAddMakeInput] = useState<string>('');\n\n    const handleChangeAddMakeInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setAddMakeInput(e.target.value.toUpperCase());\n    };\n\n    // we need to create an updated openRef because the ms.open value will get stale within a function\n    const openRef = useRef(ms.open);\n    useEffect(() => {\n        openRef.current = ms.open;\n    }, [ms.open]);\n\n    const handleAddMake = async () => {\n        setAddMakeStatus('loading');\n        await delay();\n        addMake(addMakeInput)\n            .then(result => {\n                mounted.current && setAddMakeStatus(result.status as PostRequestStatus);\n                switch (result.status) {\n                    case 'success':\n                        if (p.mounted.current && openRef.current) {\n                            result.doc && p.setMake(result.doc);\n                        }\n                        if (ms.mounted.current) {\n                            ms.setAddMake(false);\n                            result.data && ms.setMakes(result.data);\n                            ms.setOpen(false);\n                        }\n                        break;\n                    default:\n                        mounted.current && setAddMakeInput('');\n                        break;\n                };\n            }, e => {\n                setAddMakeStatus('failed');\n                console.error(e);\n            });\n    };\n\n    return (\n        <Collapse in={ms.addMake} timeout='auto' unmountOnExit>\n            <List>\n                {addMakeStatus === 'loading'\n                    ? <FlexCenter><CircularProgress /></FlexCenter>\n                    : <>\n                        {addMakeStatus === 'exists'\n                            &&\n                            <Typography color='secondary'>\n                                Already exists\n                            </Typography>}\n                        {addMakeStatus === 'failed'\n                            &&\n                            <Typography color='secondary'>\n                                Failed to add make\n                            </Typography>}\n                        <ListItem>\n                            <TextField\n                                autoFocus\n                                fullWidth\n                                id='add-make-input'\n                                label='Add Make*'\n                                value={addMakeInput}\n                                onChange={handleChangeAddMakeInput}\n                                autoComplete='off'\n                            />\n                        </ListItem>\n                        <div className={classes.addButtons}>\n                            <Button onClick={() => ms.setAddMake(false)}>Cancel</Button>\n                            <Button\n                                onClick={addMakeInput ? handleAddMake : () => { }}\n                                disabled={addMakeInput ? false : true}\n                                color='primary'>\n                                Add\n                            </Button>\n                        </div>\n                    </>}\n            </List>\n        </Collapse>\n    );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddMake from './AddMake';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getMakes as getMakesService } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface MakeSelectProps {\n    parent: {\n        mounted: React.MutableRefObject<boolean>;\n        make: IdName;\n        setMake: Set<IdName>;\n    };\n    allowAddMake?: boolean;\n    className?: string;\n    button?: boolean;\n    TextFieldProps?: any;\n    ButtonProps?: any;\n};\nexport default function MakeSelect(props: MakeSelectProps): React.ReactElement {\n    const { delay } = useDemoContext();\n    const {\n        parent,\n        allowAddMake,\n        className,\n        button,\n        TextFieldProps,\n        ButtonProps\n    } = props;\n\n    const {\n        mounted: pMounted,\n        make,\n        setMake\n    } = parent;\n\n    const mounted = useCheckMounted();\n\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleMakeSelect = (maketmp = make) => {\n        setMake(maketmp);\n        setOpen(false);\n    };\n\n    const [makes, setMakes] = useState<IdName[]>([]);\n    const [getMakesStatus, setGetMakesStatus] = useState<GetRequestStatus>('loading');\n\n    const getMakes = useCallback(async () => {\n        setGetMakesStatus('loading');\n        await delay();\n        getMakesService()\n            .then(result => {\n                mounted.current && result.data && setMakes(result.data);\n                mounted.current && setGetMakesStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetMakesStatus('failed');\n                console.error(e);\n            });\n\n    },\n        [delay, mounted]\n    );\n\n    useEffect(() => {\n        getMakes();\n    }, [getMakes]);\n\n    const [addMake, setAddMake] = useState<boolean>(false);\n\n    useEffect(() => {\n        !open && setAddMake(false);\n    }, [open]);\n\n    let dialogContent: JSX.Element;\n\n    switch (getMakesStatus) {\n        case 'loading':\n            dialogContent = <CircularProgress />;\n            break;\n        case 'failed':\n            dialogContent = <Typography>error loading makes</Typography>;\n            break;\n        default:\n            dialogContent = (\n                <>\n                    <Collapse in={!addMake} timeout='auto' unmountOnExit>\n                        <List>\n                            <SelectListItem\n                                onClick={() => handleMakeSelect({ id: '', name: '' })}\n                                textVal=''\n                                selectCondition={!make.name}\n                            />\n                            <Divider />\n                            {makes.map(maketmp =>\n                                <div key={maketmp.id}>\n                                    <SelectListItem\n                                        onClick={() => handleMakeSelect(maketmp)}\n                                        textVal={maketmp.name}\n                                        selectCondition={maketmp === make}\n                                    />\n                                    <Divider />\n                                </div>)}\n                            {allowAddMake &&\n                                <AddListItem\n                                    onClick={() => setAddMake(true)}\n                                    textVal='Add Make'\n                                />}\n                        </List >\n                    </Collapse>\n                    {allowAddMake && <AddMake\n                        makeSelectParent={{\n                            mounted: pMounted,\n                            setMake: setMake,\n                        }}\n                        makeSelect={{\n                            mounted,\n                            setMakes,\n                            addMake,\n                            setAddMake,\n                            open,\n                            setOpen\n                        }}\n                    />}\n                </>\n            );\n    };\n\n    return (\n        <>\n            <CustomSelect\n                label={button ? 'make' : 'Make*'}\n                id='make-select'\n                value={make.name}\n                setOpen={setOpen}\n                className={className}\n                button={button ? true : false}\n                TextFieldProps={TextFieldProps}\n                ButtonProps={ButtonProps}\n            />\n            <SelectDialog open={open} setOpen={setOpen}\n                flex={getMakesStatus === 'success' ? false : true}>\n                {dialogContent}\n            </SelectDialog>\n        </>\n    );\n};\n","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addModel } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme) => ({\n    addButtons: {\n        marginLeft: 'auto',\n    },\n}));\n\ninterface AddModelProps {\n    modelSelectParent: {\n        mounted: MutableRefObject<boolean>;\n        makeId: string;\n        setModel: Set<IdName>;\n    };\n    modelSelect: {\n        mounted: MutableRefObject<boolean>;\n        addModel: boolean;\n        setAddModel: Set<boolean>;\n        setModels: Set<IdName[]>;\n        open: boolean;\n        setOpen: Set<boolean>;\n    };\n};\nexport default function AddModel(props: AddModelProps): React.ReactElement {\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n\n    const { modelSelectParent: p, modelSelect: ms } = props;\n\n    const mounted = useCheckMounted();\n    const [addModelStatus, setAddModelStatus] = useState<PostRequestStatus | ''>('');\n    const [addModelInput, setAddModelInput] = useState<string>('');\n\n    const handleChangeAddModelInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setAddModelInput(e.target.value.toUpperCase());\n    };\n\n    // we need to create an updated openRef because the ms.open value will get stale within a function\n    const openRef = useRef(ms.open);\n    useEffect(() => {\n        openRef.current = ms.open;\n    }, [ms.open]);\n\n    const handleAddModel = async () => {\n        setAddModelStatus('loading');\n        await delay();\n        addModel(p.makeId, addModelInput)\n            .then(result => {\n                mounted.current && setAddModelStatus(result.status as PostRequestStatus);\n                switch (result.status) {\n                    case 'success':\n                        if (p.mounted.current && openRef.current) {\n                            result.doc && p.setModel(result.doc);\n                        }\n                        if (ms.mounted.current) {\n                            ms.setAddModel(false);\n                            result.data && ms.setModels(result.data);\n                            ms.setOpen(false);\n                        }\n                        break;\n                    default:\n                        mounted.current && setAddModelInput('');\n                        break;\n                };\n            }, e => {\n                setAddModelStatus('failed');\n                console.error(e);\n            });\n    };\n\n    return (\n        <Collapse in={ms.addModel} timeout='auto' unmountOnExit>\n            <List>\n                {addModelStatus === 'loading'\n                    ? <FlexCenter><CircularProgress /></FlexCenter>\n                    : <>\n                        {addModelStatus === 'exists'\n                            &&\n                            <Typography color='secondary'>\n                                Already exists\n                            </Typography>}\n                        {addModelStatus === 'failed'\n                            &&\n                            <Typography color='secondary'>\n                                Failed to add model\n                            </Typography>}\n                        <ListItem>\n                            <TextField\n                                autoFocus\n                                fullWidth\n                                id='add-model-input'\n                                label='Add Model*'\n                                value={addModelInput}\n                                onChange={handleChangeAddModelInput}\n                                autoComplete='off'\n                            />\n                        </ListItem>\n                        <div className={classes.addButtons}>\n                            <Button onClick={() => ms.setAddModel(false)}>Cancel</Button>\n                            <Button\n                                onClick={addModelInput ? handleAddModel : () => { }}\n                                disabled={addModelInput ? false : true}\n                                color='primary'>\n                                Add\n                            </Button>\n                        </div>\n                    </>}\n            </List>\n        </Collapse>\n    );\n}","// react\nimport { useEffect, useState, MutableRefObject, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddModel from './AddModel';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getModels as getModelsService } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface MakeSelectProps {\n    parent: {\n        mounted: MutableRefObject<boolean>;\n        make: IdName;\n        model: IdName;\n        setModel: Set<IdName>;\n    };\n    allowAddModel?: boolean,\n    className?: string,\n    button?: boolean,\n    TextFieldProps?: any,\n    ButtonProps?: any;\n};\nexport default function MakeSelect(props: MakeSelectProps): React.ReactElement {\n    const { delay } = useDemoContext();\n    const {\n        parent,\n        allowAddModel,\n        className,\n        button,\n        TextFieldProps,\n        ButtonProps\n    } = props;\n\n    const {\n        mounted: pMounted,\n        make,\n        model,\n        setModel\n    } = parent;\n\n    const mounted = useCheckMounted();\n\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleModelSelect = (modeltmp = model) => {\n        setModel(modeltmp);\n        setOpen(false);\n    };\n\n    const [models, setModels] = useState<IdName[]>([]);\n    const [getModelsStatus, setGetModelsStatus] = useState<GetRequestStatus>('loading');\n\n    const getModels = useCallback(async () => {\n        setGetModelsStatus('loading');\n        await delay();\n        getModelsService(make.id)\n            .then(result => {\n                mounted.current && result.data && setModels(result.data);\n                mounted.current && setGetModelsStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetModelsStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted, make]\n    );\n\n    useEffect(() => {\n        setModel({ id: '', name: '' });\n        if (make.id) {\n            getModels();\n        };\n    }, [getModels, make.id, setModel]);\n\n    const [addModel, setAddModel] = useState<boolean>(false);\n\n    useEffect(() => {\n        !open && setAddModel(false);\n    }, [open]);\n\n    let dialogContent: JSX.Element;\n\n    switch (getModelsStatus) {\n        case 'loading':\n            dialogContent = <CircularProgress />;\n            break;\n        case 'failed':\n            dialogContent = <Typography>error loading models</Typography>;\n            break;\n        default:\n            dialogContent = (\n                <>\n                    <Collapse in={!addModel} timeout='auto' unmountOnExit>\n                        <List>\n                            <SelectListItem\n                                onClick={() => handleModelSelect({ id: '', name: '', })}\n                                textVal=''\n                                selectCondition={!model.name}\n                            />\n                            <Divider />\n                            {models?.map(modeltmp =>\n                                <div key={modeltmp.id}>\n                                    <SelectListItem\n                                        onClick={() => handleModelSelect(modeltmp)}\n                                        textVal={modeltmp.name}\n                                        selectCondition={modeltmp.name === model.name}\n                                    />\n                                    <Divider />\n                                </div>)}\n                            {allowAddModel &&\n                                <AddListItem\n                                    onClick={() => setAddModel(true)}\n                                    textVal='Add Model'\n                                />}\n                        </List >\n                    </Collapse>\n                    {allowAddModel && <AddModel\n                        modelSelectParent={{\n                            mounted: pMounted,\n                            makeId: make.id,\n                            setModel: setModel\n                        }}\n                        modelSelect={{\n                            mounted,\n                            addModel,\n                            setAddModel,\n                            setModels,\n                            open,\n                            setOpen\n                        }}\n                    />}\n                </>\n            );\n    };\n\n    return (\n        <>\n            <CustomSelect\n                label={button ? 'model' : 'Model*'}\n                id='model-select'\n                value={model.name}\n                setOpen={setOpen}\n                className={className}\n                button={button ? true : false}\n                TextFieldProps={TextFieldProps}\n                ButtonProps={ButtonProps}\n                disabled={make.name ? false : true}\n            />\n            <SelectDialog open={open} setOpen={setOpen}\n                flex={getModelsStatus === 'success' ? false : true}>\n                {dialogContent}\n            </SelectDialog>\n        </>\n    );\n};\n","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addTrim } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme) => ({\n    addButtons: {\n        marginLeft: 'auto',\n    },\n}));\n\ninterface AddTrimProps {\n    trimSelectParent: {\n        mounted: MutableRefObject<boolean>;\n        modelId: string;\n        setTrim: Set<IdName>;\n    };\n    trimSelect: {\n        mounted: MutableRefObject<boolean>;\n        addTrim: boolean;\n        setAddTrim: Set<boolean>;\n        setTrims: Set<IdName[]>;\n        open: boolean;\n        setOpen: Set<boolean>;\n    };\n};\nexport default function AddTrim(props: AddTrimProps): React.ReactElement {\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n\n    const { trimSelectParent: p, trimSelect: ts } = props;\n\n    const mounted = useCheckMounted();\n    const [addTrimStatus, setAddTrimStatus] = useState<PostRequestStatus | ''>('');\n    const [addTrimInput, setAddTrimInput] = useState<string>('');\n\n    const handleChangeAddTrimInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setAddTrimInput(e.target.value.toUpperCase());\n    };\n\n    // we need to create an updated openRef because the ms.open value will get stale within a function\n    const openRef = useRef(ts.open);\n    useEffect(() => {\n        openRef.current = ts.open;\n    }, [ts.open]);\n\n    const handleAddTrim = async () => {\n        setAddTrimStatus('loading');\n        await delay();\n        addTrim(p.modelId, addTrimInput)\n            .then(result => {\n                mounted.current && setAddTrimStatus(result.status as PostRequestStatus);\n                switch (result.status) {\n                    case 'success':\n                        if (p.mounted.current && openRef.current) {\n                            result.patch && p.setTrim(result.patch);\n                        }\n                        if (ts.mounted.current) {\n                            ts.setAddTrim(false);\n                            result.data && ts.setTrims(result.data);\n                            ts.setOpen(false);\n                        }\n                        break;\n                    default:\n                        mounted.current && setAddTrimInput('');\n                        break;\n                };\n            }, e => {\n                setAddTrimStatus('failed');\n                console.error(e);\n            });\n    };\n\n    return (\n        <Collapse in={ts.addTrim} timeout='auto' unmountOnExit>\n            <List>\n                {addTrimStatus === 'loading'\n                    ? <FlexCenter><CircularProgress /></FlexCenter>\n                    : <>\n                        {addTrimStatus === 'exists'\n                            &&\n                            <Typography color='secondary'>\n                                Already exists\n                            </Typography>}\n                        {addTrimStatus === 'failed'\n                            &&\n                            <Typography color='secondary'>\n                                Failed to add trim\n                            </Typography>}\n                        <ListItem>\n                            <TextField\n                                autoFocus\n                                fullWidth\n                                id='add-trim-input'\n                                label='Add Trim*'\n                                value={addTrimInput}\n                                onChange={handleChangeAddTrimInput}\n                                autoComplete='off'\n                            />\n                        </ListItem>\n                        <div className={classes.addButtons}>\n                            <Button onClick={() => ts.setAddTrim(false)}>Cancel</Button>\n                            <Button\n                                onClick={addTrimInput ? handleAddTrim : () => { }}\n                                disabled={addTrimInput ? false : true}\n                                color='primary'>\n                                Add\n                            </Button>\n                        </div>\n                    </>}\n            </List>\n        </Collapse>\n    );\n}","// react\nimport { useEffect, useState, MutableRefObject, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddTrim from './AddTrim';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// sevices\nimport { getTrims as getTrimsService } from '../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface TrimSelectProps {\n    parent: {\n        mounted: MutableRefObject<boolean>;\n        make: IdName;\n        model: IdName;\n        trim: IdName;\n        setTrim: Set<IdName>;\n    };\n    allowAddTrim?: boolean;\n    className?: string;\n    button?: boolean;\n    TextFieldProps?: any;\n    ButtonProps?: any;\n};\nexport default function TrimSelect(props: TrimSelectProps): React.ReactElement {\n    const { delay } = useDemoContext();\n    const {\n        parent,\n        allowAddTrim,\n        className,\n        button,\n        TextFieldProps,\n        ButtonProps\n    } = props;\n\n    const {\n        mounted: pMounted,\n        make,\n        model,\n        trim,\n        setTrim\n    } = parent;\n\n    const mounted = useCheckMounted();\n\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleTrimSelect = (trimtmp = trim) => {\n        setTrim(trimtmp);\n        setOpen(false);\n    };\n\n    const [trims, setTrims] = useState<IdName[]>([]);\n    const [getTrimsStatus, setGetTrimsStatus] = useState<GetRequestStatus>('loading');\n\n    const getTrims = useCallback(async () => {\n        setGetTrimsStatus('loading');\n        await delay();\n        getTrimsService(model.id)\n            .then(result => {\n                mounted.current && result.data && setTrims(result.data);\n                mounted.current && setGetTrimsStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetTrimsStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted, model.id]\n    );\n\n    useEffect(() => {\n        setTrim({ id: '', name: '' });\n        if (model.id) {\n            getTrims();\n        };\n    }, [getTrims, setTrim, model.id]);\n\n    const [addTrim, setAddTrim] = useState<boolean>(false);\n\n    useEffect(() => {\n        !open && setAddTrim(false);\n    }, [open]);\n\n    let dialogContent: JSX.Element;\n\n    switch (getTrimsStatus) {\n        case 'loading':\n            dialogContent = <CircularProgress />;\n            break;\n        case 'failed':\n            dialogContent = <Typography>error loading makes</Typography>;\n            break;\n        default:\n            dialogContent = (\n                <>\n                    <Collapse in={!addTrim} timeout='auto' unmountOnExit>\n                        <List>\n                            <SelectListItem\n                                onClick={() => handleTrimSelect({ id: '', name: '' })}\n                                textVal=''\n                                selectCondition={!make.name}\n                            />\n                            <Divider />\n                            {trims.map(trimtmp =>\n                                <div key={trimtmp.id}>\n                                    <SelectListItem\n                                        onClick={() => handleTrimSelect(trimtmp)}\n                                        textVal={trimtmp.name}\n                                        selectCondition={trimtmp === trim}\n                                    />\n                                    <Divider />\n                                </div>)}\n                            {allowAddTrim &&\n                                <AddListItem\n                                    onClick={() => setAddTrim(true)}\n                                    textVal='Add Trim'\n                                />}\n                        </List >\n                    </Collapse>\n                    {allowAddTrim && <AddTrim\n                        trimSelectParent={{\n                            mounted: pMounted,\n                            modelId: model.id,\n                            setTrim: setTrim,\n                        }}\n                        trimSelect={{\n                            mounted,\n                            addTrim,\n                            setAddTrim,\n                            setTrims,\n                            open,\n                            setOpen\n                        }}\n                    />}\n                </>\n            );\n    };\n\n    return (\n        <>\n            <CustomSelect\n                label={button ? 'trim' : 'Trim'}\n                id='trim-select'\n                value={trim.name}\n                setOpen={setOpen}\n                className={className}\n                button={button ? true : false}\n                TextFieldProps={TextFieldProps}\n                ButtonProps={ButtonProps}\n                disabled={model.name ? false : true}\n            />\n            <SelectDialog open={open} setOpen={setOpen}\n                flex={getTrimsStatus === 'success' ? false : true}>\n                {dialogContent}\n            </SelectDialog>\n        </>\n    );\n}","// mui\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexStart } from '../../common/flex';\nimport YearSelect from '../../common/vehicles/YearSelect';\nimport MakeSelect from '../../common/vehicles/MakeSelect';\nimport ModelSelect from '../../common/vehicles/ModelSelect';\nimport TrimSelect from '../../common/vehicles/TrimSelect';\n// types\nimport { VehicleDetailFilterState } from \"../../../types/Vehicle\";\n\nconst useStyles = makeStyles((theme) => ({\n    select: {\n        margin: theme.spacing(.5),\n    }\n}));\n\ninterface VehicleDetailFiltersProps {\n    mounted: React.MutableRefObject<boolean>;\n    vehicleDetailFilterState: VehicleDetailFilterState;\n}\nexport default function VehicleDetailFilters(props: VehicleDetailFiltersProps): React.ReactElement {\n    const classes = useStyles();\n    const { mounted, vehicleDetailFilterState } = props;\n    const {\n        yearFilterTmp, setYearFilterTmp,\n        makeFilterTmp, setMakeFilterTmp,\n        modelFilterTmp, setModelFilterTmp,\n        trimFilterTmp, setTrimFilterTmp,\n    } = vehicleDetailFilterState;\n\n    return (\n        <FlexStart flexWrap='wrap'>\n            <YearSelect\n                className={classes.select}\n                year={yearFilterTmp}\n                setYear={setYearFilterTmp}\n                button\n            />\n            <MakeSelect\n                parent={{\n                    mounted,\n                    make: makeFilterTmp,\n                    setMake: setMakeFilterTmp\n                }}\n                className={classes.select}\n                button\n            />\n            <ModelSelect\n                parent={{\n                    mounted,\n                    make: makeFilterTmp,\n                    model: modelFilterTmp,\n                    setModel: setModelFilterTmp\n                }}\n                className={classes.select}\n                button\n            />\n            <TrimSelect\n                parent={{\n                    mounted,\n                    make: makeFilterTmp,\n                    model: modelFilterTmp,\n                    trim: trimFilterTmp,\n                    setTrim: setTrimFilterTmp\n                }}\n                className={classes.select}\n                button\n            />\n        </FlexStart>);\n\n\n}","// react\nimport { useEffect, useState } from 'react';\n// mui\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport { LocalizationProvider } from \"@mui/lab\";\nimport DatePicker from '@mui/lab/DatePicker';\nimport DateRangeIcon from '@mui/icons-material/DateRange';\nimport Dialog from '@mui/material/Dialog';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport { FormControl } from '@mui/material';\n// THIS PROJECT\n// components\nimport { FlexCenter } from './flex';\n// types\nimport { Set } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n    dialogTitle: {\n        color: theme.titleColor.darkBlue,\n        textAlign: 'center',\n    },\n    datePicker: {\n        margin: theme.spacing(1),\n    }\n}));\n\ninterface DateRangeSelectProps {\n    buttonLabel: string;\n    dialogTitle: string;\n    after: number | null;\n    setAfter: Set<number | null>;\n    before: number | null;\n    setBefore: Set<number | null>;\n    className?: string;\n};\nexport default function DateRangeSelect(props: DateRangeSelectProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { buttonLabel, dialogTitle, after, setAfter, before, setBefore, className } = props;\n    const [openDialog, setOpenDialog] = useState<boolean>(false);\n\n    const [afterTmp, setAfterTmp] = useState<number | null>(null);\n    const [beforeTmp, setBeforeTmp] = useState<number | null>(null);\n\n    useEffect(() => {\n        setAfterTmp(after);\n        setBeforeTmp(before);\n    }, [after, before]);\n\n    const clearClick = () => {\n        setAfterTmp(null);\n        setBeforeTmp(null);\n    };\n\n    const okClick = () => {\n        const after = afterTmp ? new Date(afterTmp).getTime() : null;\n        const before = beforeTmp ? new Date(beforeTmp).getTime() : null;\n        setAfter(after);\n        setBefore(before);\n        setOpenDialog(false);\n    };\n\n    return (\n        <>\n            <Button\n                className={className}\n                startIcon={<DateRangeIcon />}\n                size='small'\n                variant='outlined'\n                onClick={() => { openDialog ? setOpenDialog(false) : setOpenDialog(true); }}\n                color={(after || before) ? 'primary' : 'inherit'}\n            >\n                {buttonLabel}\n            </Button>\n            <Dialog open={openDialog} aria-labelledby='date-range-select'>\n                <DialogTitle className={classes.dialogTitle}>{dialogTitle}</DialogTitle>\n                <DialogContent>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <FlexCenter flexDirection='column'>\n                            <FormControl className={classes.datePicker}>\n                                <DatePicker\n                                    clearable\n                                    label='Start Date'\n                                    value={afterTmp}\n                                    onChange={(newValue) => setAfterTmp(newValue)}\n                                    renderInput={(params) => <TextField {...params} />}\n                                />\n                            </FormControl>\n                            <FormControl className={classes.datePicker}>\n                                <DatePicker\n                                    clearable\n                                    label='End Date'\n                                    value={beforeTmp}\n                                    onChange={(newValue) => setBeforeTmp(newValue)}\n                                    renderInput={(params) => <TextField {...params} />}\n                                    minDate={afterTmp}\n                                />\n                            </FormControl>\n                        </FlexCenter>\n                    </LocalizationProvider>\n                </DialogContent>\n                <DialogActions>\n                    <Button\n                        size='large'\n                        onClick={clearClick}\n                    >\n                        CLEAR\n                    </Button>\n                    <Button\n                        size='large'\n                        onClick={okClick}\n                    >\n                        OK\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    );\n\n}\n\n","// THIS PROJECT\nimport DateRangeSelect from '../DateRangeSelect';\n// components\nimport { Set } from '../../../types/misc';\n\ninterface DateAddedSelectProps {\n    after: number | null;\n    setAfter: Set<number | null>;\n    before: number | null;\n    setBefore: Set<number | null>;\n    className?: string;\n}\nexport default function DateAddedSelect(props: DateAddedSelectProps): React.ReactElement {\n    const { after, setAfter, before, setBefore, className } = props;\n\n    const afterDate = after && new Date(after).toLocaleDateString();\n    const beforeDate = before && new Date(before).toLocaleDateString();\n\n    const buttonLabel = (after && before)\n        ? `Added: ${afterDate} to ${beforeDate}`\n        : after\n            ? `Added: after ${afterDate}`\n            : before\n                ? `Added: before ${beforeDate}`\n                : 'Date Added';\n\n    return (\n        <DateRangeSelect\n            buttonLabel={buttonLabel}\n            dialogTitle='Select Date Added Range'\n            after={after}\n            setAfter={setAfter}\n            before={before}\n            setBefore={setBefore}\n            className={className}\n        />\n    );\n}","// THIS PROJECT\nimport DateRangeSelect from '../DateRangeSelect';\n// components\n// components\nimport { Set } from '../../../types/misc';\n\ninterface DateAddedSelectProps {\n    after: number | null;\n    setAfter: Set<number | null>;\n    before: number | null;\n    setBefore: Set<number | null>;\n    className?: string;\n}\nexport default function DateAddedSelect(props: DateAddedSelectProps): React.ReactElement {\n    const { after, setAfter, before, setBefore, className } = props;\n\n    const afterDate = after && new Date(after).toLocaleDateString();\n    const beforeDate = before && new Date(before).toLocaleDateString();\n\n    const buttonLabel = (after && before)\n        ? `Sold: ${afterDate} to ${beforeDate}`\n        : after\n            ? `Sold: after ${afterDate}`\n            : before\n                ? `Sold: before ${beforeDate}`\n                : 'Date Sold';\n\n    return (\n        <DateRangeSelect\n            buttonLabel={buttonLabel}\n            dialogTitle='Select Date Sold Range'\n            after={after}\n            setAfter={setAfter}\n            before={before}\n            setBefore={setBefore}\n            className={className}\n        />\n    );\n}","// mui\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexStart } from '../../common/flex';\nimport DateAddedSelect from '../../common/vehicles/DateAddedSelect';\nimport DateSoldSelect from '../../common/vehicles/DateSoldSelect';\n// hooks\nimport { useVehiclePage } from '../../../hooks';\n// types\nimport { DateRangeFilterState } from \"../../../types/Vehicle\";\n\nconst useStyles = makeStyles((theme) => ({\n    select: {\n        margin: theme.spacing(.5),\n    }\n}));\n\ninterface DateRangeFiltersProps {\n    dateRangeFilterState: DateRangeFilterState;\n}\nexport default function DateRangeFilters(props: DateRangeFiltersProps): React.ReactElement {\n    const classes = useStyles();\n    const { statusParam } = useVehiclePage();\n    const {\n        addedAfterFilterTmp, setAddedAfterFilterTmp,\n        addedBeforeFilterTmp, setAddedBeforeFilterTmp,\n        soldAfterFilterTmp, setSoldAfterFilterTmp,\n        soldBeforeFilterTmp, setSoldBeforeFilterTmp,\n    } = props.dateRangeFilterState;\n\n    return (\n        <FlexStart flexWrap='wrap'>\n            <DateAddedSelect\n                after={addedAfterFilterTmp}\n                setAfter={setAddedAfterFilterTmp}\n                before={addedBeforeFilterTmp}\n                setBefore={setAddedBeforeFilterTmp}\n                className={classes.select}\n            />\n            {statusParam === 'sold' &&\n                <DateSoldSelect\n                    after={soldAfterFilterTmp}\n                    setAfter={setSoldAfterFilterTmp}\n                    before={soldBeforeFilterTmp}\n                    setBefore={setSoldBeforeFilterTmp}\n                    className={classes.select}\n                />\n            }\n        </FlexStart>\n    );\n}","// mui\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\n// THIS PROJECT\n// types\nimport { Set } from '../../../types/misc';\n\ninterface ShowForSaleFilterProps {\n    showForSaleTmp: boolean;\n    setShowForSaleTmp: Set<boolean>;\n}\nexport default function ShowForSaleFilter(props: ShowForSaleFilterProps): React.ReactElement {\n    const { showForSaleTmp, setShowForSaleTmp } = props;\n\n    return (\n        <FormControlLabel\n            control={\n                <Checkbox\n                    size='small'\n                    checked={showForSaleTmp}\n                    onChange={() => showForSaleTmp ? setShowForSaleTmp(false) : setShowForSaleTmp(true)}\n                />\n            }\n            label={`Show \"For Sale\" Vehicles`}\n            sx={{\n                margin: 0,\n                '& .MuiFormControlLabel-label': {\n                    color: showForSaleTmp ? 'primary.main' : 'black',\n                    fontSize: 14\n                }\n            }}\n        />\n    );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { FlexEnd, FlexSpaceBtwn } from '../../common/flex';\nimport VehicleDetailFilters from './VehicleDetailFilters';\nimport DateRangeFilters from './DateRangeFilters';\nimport ShowForSaleFilter from './ShowForSaleFilter';\n// hooks\nimport { useVehiclePage, useQuery } from '../../../hooks';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { DateRangeFilterState, VehicleDetailFilterState } from '../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n    filterActions: {\n        marginTop: theme.spacing(1),\n    },\n}));\n\ninterface VehicleListFiltersProps {\n    mounted: React.MutableRefObject<boolean>;\n    setViewFilters: Set<boolean>;\n    setFilterCount: Set<number>;\n};\nexport default function VehicleListFilters(props: VehicleListFiltersProps): React.ReactElement {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const { statusParam, sortParam, perPageParam } = useVehiclePage();\n    const { mounted, setViewFilters, setFilterCount } = props;\n\n    // UI STATE\n    // vehicle details\n    const [yearFilterTmp, setYearFilterTmp] = useState<string>('');\n    const [makeFilterTmp, setMakeFilterTmp] = useState<IdName>({ id: '', name: '' });\n    const [modelFilterTmp, setModelFilterTmp] = useState<IdName>({ id: '', name: '' });\n    const [trimFilterTmp, setTrimFilterTmp] = useState<IdName>({ id: '', name: '' });\n    // date ranges\n    const [addedAfterFilterTmp, setAddedAfterFilterTmp] = useState<number | null>(null);\n    const [addedBeforeFilterTmp, setAddedBeforeFilterTmp] = useState<number | null>(null);\n    const [soldAfterFilterTmp, setSoldAfterFilterTmp] = useState<number | null>(null);\n    const [soldBeforeFilterTmp, setSoldBeforeFilterTmp] = useState<number | null>(null);\n    // show 'For Sale'\n    const [showForSaleTmp, setShowForSaleTmp] = useState<boolean>(false);\n\n    // APPLIED FILTERS STATE\n    // vehicle details\n    const [yearFilter, setYearFilter] = useState<string>('');\n    const [makeFilter, setMakeFilter] = useState<IdName>({ id: '', name: '' });\n    const [modelFilter, setModelFilter] = useState<IdName>({ id: '', name: '' });\n    const [trimFilter, setTrimFilter] = useState<IdName>({ id: '', name: '' });\n    // date ranges\n    const [addedAfterFilter, setAddedAfterFilter] = useState<number | null>(null);\n    const [addedBeforeFilter, setAddedBeforeFilter] = useState<number | null>(null);\n    const [soldAfterFilter, setSoldAfterFilter] = useState<number | null>(null);\n    const [soldBeforeFilter, setSoldBeforeFilter] = useState<number | null>(null);\n    // show 'For Sale'\n    const [showForSale, setShowForSale] = useState<boolean>(false);\n\n    // SETTING FILTERS IN THE UI ON REFRESH\n    // utilizing the query string at th end of the url\n    const query = useQuery();\n    // vehicle details\n    const yearQuery = query.get('year');\n    const makeQuery = query.get('make');\n    const modelQuery = query.get('model');\n    const trimQuery = query.get('trim');\n    // date ranges\n    const addedAfterQuery = query.get('addedAfter');\n    const addedBeforeQuery = query.get('addedBefore');\n    const soldAfterQuery = query.get('soldAfter');\n    const soldBeforeQuery = query.get('soldBefore');\n    // show 'For Sale'\n    const showForSaleQuery = query.get('forSale');\n\n    // set filters values based on queries\n    useEffect(() => {\n        yearQuery ? setYearFilterTmp(yearQuery) : setYearFilterTmp('');\n        yearQuery ? setYearFilter(yearQuery) : setYearFilter('');\n\n        const makeTmp = makeQuery ? makeQuery.split('-') : ['', ''];\n        setMakeFilterTmp({ id: makeTmp[1], name: makeTmp[0] });\n        setMakeFilter({ id: makeTmp[1], name: makeTmp[0] });\n\n        const modelTmp = modelQuery ? modelQuery.split('-') : ['', ''];\n        setModelFilterTmp({ id: modelTmp[1], name: modelTmp[0] });\n        setModelFilter({ id: modelTmp[1], name: modelTmp[0] });\n\n        addedAfterQuery ? setAddedAfterFilterTmp(parseFloat(addedAfterQuery)) : setAddedAfterFilterTmp(null);\n        addedAfterQuery ? setAddedAfterFilter(parseFloat(addedAfterQuery)) : setAddedAfterFilter(null);\n\n        addedBeforeQuery ? setAddedBeforeFilterTmp(parseFloat(addedBeforeQuery)) : setAddedBeforeFilterTmp(null);\n        addedBeforeQuery ? setAddedBeforeFilter(parseFloat(addedBeforeQuery)) : setAddedBeforeFilter(null);\n\n        soldAfterQuery ? setSoldAfterFilterTmp(parseFloat(soldAfterQuery)) : setSoldAfterFilterTmp(null);\n        soldAfterQuery ? setSoldAfterFilter(parseFloat(soldAfterQuery)) : setSoldAfterFilter(null);\n\n        soldBeforeQuery ? setSoldBeforeFilterTmp(parseFloat(soldBeforeQuery)) : setSoldBeforeFilterTmp(null);\n        soldBeforeQuery ? setSoldBeforeFilter(parseFloat(soldBeforeQuery)) : setSoldBeforeFilter(null);\n\n        const showForSaleQueryTmp = showForSaleQuery === 'true' ? true : false;\n        setShowForSaleTmp(showForSaleQueryTmp);\n        setShowForSale(showForSaleQueryTmp);\n    }, [yearQuery, makeQuery, modelQuery, trimQuery, addedAfterQuery, addedBeforeQuery, soldAfterQuery, soldBeforeQuery, showForSaleQuery]);\n\n    // have to 'step through' make filter before setting model filter because make filter clears model filter when it is set\n    useEffect(() => {\n        const modelTmp = modelQuery ? modelQuery.split('-') : ['', ''];\n        setModelFilterTmp({ id: modelTmp[1], name: modelTmp[0] });\n        setModelFilter({ id: modelTmp[1], name: modelTmp[0] });\n    }, [makeFilter, modelQuery]);\n\n    // have to 'step through' model filter before setting trim filter because model filter clears trim filter when it is set\n    useEffect(() => {\n        const trimTmp = trimQuery ? trimQuery.split('-') : ['', ''];\n        setTrimFilterTmp({ id: trimTmp[1], name: trimTmp[0] });\n        setTrimFilter({ id: trimTmp[1], name: trimTmp[0] });\n    }, [modelFilter, trimQuery]);\n\n    // ^^ SETTING FILTERS IN THE UI ON REFRESH ^^\n\n    const removeFiltersClick = () => {\n        // vehicle details\n        setYearFilter(''); setYearFilterTmp('');\n        setMakeFilter({ id: '', name: '' }); setMakeFilterTmp({ id: '', name: '' });\n        setModelFilter({ id: '', name: '' }); setModelFilterTmp({ id: '', name: '' });\n        setTrimFilter({ id: '', name: '' }); setTrimFilterTmp({ id: '', name: '' });\n        // date ranges\n        setAddedAfterFilter(null); setAddedAfterFilterTmp(null);\n        setAddedBeforeFilter(null); setAddedBeforeFilterTmp(null);\n        setSoldAfterFilter(null); setSoldAfterFilterTmp(null);\n        setSoldBeforeFilter(null); setSoldBeforeFilterTmp(null);\n        // show 'For Sale'\n        setShowForSale(false); setShowForSaleTmp(false);\n\n        setViewFilters(false);\n        history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/first/0`);\n    };\n\n    const applyFiltersClick = () => {\n        // sync filterTmps with filters\n        // vehicle details\n        setYearFilter(yearFilterTmp);\n        setMakeFilter(makeFilterTmp);\n        setModelFilter(modelFilterTmp);\n        setTrimFilter(trimFilterTmp);\n        // date ranges\n        setAddedAfterFilter(addedAfterFilterTmp);\n        setAddedBeforeFilter(addedBeforeFilterTmp);\n        setSoldAfterFilter(soldAfterFilterTmp);\n        setSoldBeforeFilter(soldBeforeFilterTmp);\n        // show 'For Sale'\n        setViewFilters(false);\n\n        // create our query string to append to the end of our url, and then push to that url\n        const queries = [];\n        // vehicle details\n        yearFilterTmp && queries.push(`year=${yearFilterTmp}`);\n        makeFilterTmp.id && queries.push(`make=${makeFilterTmp.name}-${makeFilterTmp.id}`);\n        modelFilterTmp.id && queries.push(`model=${modelFilterTmp.name}-${modelFilterTmp.id}`);\n        trimFilterTmp.id && queries.push(`trim=${trimFilterTmp.name}-${trimFilterTmp.id}`);\n        // date ranges\n        addedAfterFilterTmp && queries.push(`addedAfter=${addedAfterFilterTmp}`);\n        addedBeforeFilterTmp && queries.push(`addedBefore=${addedBeforeFilterTmp}`);\n        soldAfterFilterTmp && queries.push(`soldAfter=${soldAfterFilterTmp}`);\n        soldBeforeFilterTmp && queries.push(`soldBefore=${soldBeforeFilterTmp}`);\n        // show 'For Sale'\n        showForSaleTmp && queries.push(`forSale=${showForSaleTmp}`);\n\n        const queryString = `${queries.join('&')}`;\n        history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/first/0?${queryString}`);\n    };\n\n    const disableApplyFilters = (\n        yearFilter === yearFilterTmp &&\n        makeFilter.id === makeFilterTmp.id &&\n        modelFilter.id === modelFilterTmp.id &&\n        trimFilter.id === trimFilterTmp.id &&\n        addedAfterFilterTmp === addedAfterFilter &&\n        addedBeforeFilterTmp === addedBeforeFilter &&\n        soldAfterFilterTmp === soldAfterFilter &&\n        soldBeforeFilterTmp === soldBeforeFilter &&\n        showForSaleTmp === showForSale\n    );\n\n    // GET THE FILTER COUNT\n    useEffect(() => {\n        let value: number = 0;\n        // vehicle detail filters\n        yearFilter !== '' && value++;\n        const calculate = (filter: IdName) => filter.name !== '' && value++;\n        [makeFilter, modelFilter, trimFilter].forEach(filter => calculate(filter));\n        // date range filters\n        (addedAfterFilter || addedBeforeFilter) && value++;\n        (soldAfterFilter || soldBeforeFilter) && value++;\n        // show 'For Sale'\n        showForSale && value++;\n\n        setFilterCount(value);\n    }, [yearFilter, makeFilter, modelFilter, trimFilter, addedAfterFilter, addedBeforeFilter, soldAfterFilter, soldBeforeFilter, showForSale, setFilterCount]);\n\n    // CHILD STATE OBJECTS\n    const vehicleDetailFilterState: VehicleDetailFilterState = {\n        yearFilterTmp, setYearFilterTmp,\n        makeFilterTmp, setMakeFilterTmp,\n        modelFilterTmp, setModelFilterTmp,\n        trimFilterTmp, setTrimFilterTmp,\n    };\n\n    const dateRangeFilterState: DateRangeFilterState = {\n        addedAfterFilterTmp, setAddedAfterFilterTmp,\n        addedBeforeFilterTmp, setAddedBeforeFilterTmp,\n        soldAfterFilterTmp, setSoldAfterFilterTmp,\n        soldBeforeFilterTmp, setSoldBeforeFilterTmp,\n    };\n\n    return (\n        <>\n            <FlexSpaceBtwn flexWrap='wrap'>\n                <VehicleDetailFilters\n                    mounted={mounted}\n                    vehicleDetailFilterState={vehicleDetailFilterState}\n                />\n                <DateRangeFilters dateRangeFilterState={dateRangeFilterState} />\n                {statusParam === 'active'\n                    && <ShowForSaleFilter\n                        showForSaleTmp={showForSaleTmp}\n                        setShowForSaleTmp={setShowForSaleTmp}\n                    />}\n            </FlexSpaceBtwn>\n            <FlexEnd className={classes.filterActions}>\n                <Button\n                    onClick={removeFiltersClick}\n                >\n                    REMOVE FILTERS\n                </Button>\n                <Button\n                    onClick={applyFiltersClick}\n                    disabled={disableApplyFilters}\n                    color='primary'\n                >\n                    APPLY FILTERS\n                </Button>\n            </FlexEnd>\n        </>\n    );\n}","// material-ui\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport Skeleton from '@mui/material/Skeleton';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles({\n    skeleton: {\n        width: '100%',\n    },\n});\n\ninterface LoadingListProps {\n    skeletonCount: number;\n};\nexport default function LoadingList(props: LoadingListProps): React.ReactElement {\n    const classes = useStyles();\n\n    const list: JSX.Element[] = [];\n\n    for (let i = 0; i < props.skeletonCount; i++) {\n        list.push(\n            <ListItem key={i}>\n                <Skeleton className={classes.skeleton} variant='text' />\n            </ListItem>\n        );\n    };\n    return (\n        <List>\n            {list.map(skeleton => skeleton)}\n        </List>\n    );\n};\n","import { styled } from '@mui/system';\nimport ListItemButton from '@mui/material/ListItemButton';\n\nconst VehicleListItemButton = styled(ListItemButton)(({ theme }) => ({\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    padding: 0,\n    display: 'flex',\n    justifyContent: 'space-between'\n}));\n\nexport default VehicleListItemButton;","// material-ui\nimport ListItemText from '@mui/material/ListItemText';\nimport Typography from '@mui/material/Typography';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\nconst useStyles = makeStyles(theme => ({\n    textContainer: {\n        width: '60%',\n    },\n    stockLi: {\n        fontSize: 12,\n        color: 'black',\n    },\n    vehicleTextLi: {\n        width: '100%',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        fontSize: 14,\n        color: 'black',\n    },\n    stock: {\n        fontSize: 16,\n        color: 'black',\n    },\n    vehicleText: {\n        color: theme.titleColor.darkBlue,\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n}));\n\ninterface VehicleInfoProps {\n    vehicle: DetailedVehicle;\n    variant?: any;\n    listItem?: boolean;\n};\nexport default function VehicleInfo(props: VehicleInfoProps): React.ReactElement {\n    const classes = useStyles();\n    const { vehicle, variant, listItem } = props;\n    const { stock, year, make, model, trim } = vehicle;\n\n    if (listItem) {\n        return (\n            <div className={classes.textContainer}>\n                <ListItemText>\n                    <span className={classes.stockLi}>stk#:{stock > 0 && stock}</span>\n                    <br></br>\n                    <div className={classes.vehicleTextLi}>{year} {make.name} {model.name} {trim.name}</div>\n                </ListItemText>\n            </div>\n        );\n    };\n\n    return (\n        <div>\n            <Typography variant={variant ? variant : 'body1'}>\n                <span className={classes.stock} style={{ fontSize: 14 }}>stk#:{stock > 0 && stock}</span>\n                <br></br>\n                <div className={classes.vehicleText}> {year} {make.name} {model.name} {trim.name}</div>\n            </Typography>\n        </div>\n    );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\n\nconst VehicleChipGroup = styled('div')({\n    float: 'right',\n    height: '90%',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    flexDirection: 'column',\n    width: 'clamp(100px, 35%, 150px)',\n});\n\nexport default VehicleChipGroup;","// material-ui\nimport Chip from '@mui/material/Chip';\nimport { styled } from '@mui/material/styles';\n\nconst VehicleChip = styled(Chip)(({\n    theme\n}) => ({\n    margin: theme.spacing(.25),\n    width: '100%',\n}));\n\nexport default VehicleChip;","// material-ui\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../../common/vehicles/VehicleListItemButton';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../../common/vehicles/VehicleChipGroup';\nimport VehicleChip from '../../common/vehicles/VehicleChip';\n// hooks\nimport { useAuthContext } from '../../../contexts/AuthContext';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\ninterface ActiveVehicleProps {\n    vehicle: DetailedVehicle;\n    onClick: () => void;\n    className?: string;\n};\nexport default function ActiveVehicle(props: ActiveVehicleProps): React.ReactElement {\n    const { vehicle, onClick, className } = props;\n    const { currentStage } = vehicle;\n    const { stage, personPlace, status } = currentStage;\n    const { userPreferences } = useAuthContext();\n    const { defaultStageAssignment } = userPreferences;\n    const { stage: defaultStage, personPlace: defaultPersonPlace } = defaultStageAssignment;\n\n    return (\n        <>\n            <VehicleListItemButton className={className ? className : ''} onClick={onClick}>\n                <VehicleInfo vehicle={vehicle} listItem />\n                <VehicleChipGroup>\n                    {stage.name === 'Assign'\n                        ? <VehicleChip size='small' label={stage.name} color='secondary' />\n                        : status === 'complete'\n                            ? <VehicleChip size='small' label={defaultStage.name} color='secondary' />\n                            : <VehicleChip size='small' label={stage.name} color='primary' />\n                    }\n                    {status === 'complete'\n                        ? <VehicleChip size='small' label={defaultPersonPlace.name} />\n                        : <VehicleChip size='small' label={personPlace.name} />}\n                </VehicleChipGroup>\n            </VehicleListItemButton>\n            <Divider />\n        </>\n    );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Typography from '@mui/material/Typography';\n\n\nconst useStyles = makeStyles({\n    timeDifferenceLabel: {\n        fontSize: 10,\n    },\n});\n\ninterface FormatTimeProps {\n    milliseconds: number;\n    color?: 'primary' | 'secondary';\n};\nexport default function FormatTime(props: FormatTimeProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { milliseconds, color } = props;\n\n    if (milliseconds < (1000 * 60)) {\n        return (\n            <Typography color={color ? color : 'inherit'}>\n                {Math.round(milliseconds / 1000)} <span className={classes.timeDifferenceLabel}> secs</span>\n            </Typography>\n        );\n    } else if (milliseconds < (1000 * 60 * 60)) {\n        return (\n            <Typography color={color ? color : 'inherit'}>\n                {Math.round(milliseconds / (1000 * 60))} <span className={classes.timeDifferenceLabel}> mins</span>\n            </Typography>\n        );\n    } else if (milliseconds < (1000 * 60 * 60 * 24)) {\n        return (\n            <Typography color={color ? color : 'inherit'}>\n                {Math.round(milliseconds / (1000 * 60 * 60))} <span className={classes.timeDifferenceLabel}> hrs</span>\n            </Typography>\n        );\n    } else {\n        return (\n            // round days to one decimal point\n            <Typography color={color ? color : 'inherit'}>\n                {Math.round(milliseconds / (1000 * 60 * 60 * 24) * 10) / 10} <span className={classes.timeDifferenceLabel}> days</span>\n            </Typography>\n        );\n    };\n}","// material-ui\nimport { styled } from '@mui/material/styles';\n// THIS PROJECT\n// components\nimport VehicleChip from './VehicleChip';\n\nconst SoldVehicleChip = styled(VehicleChip)(({\n    theme\n}) => ({\n    backgroundColor: theme.palette.success.main,\n    color: theme.palette.success.contrastText\n}));\n\nexport default SoldVehicleChip;","// material-ui\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../../common/vehicles/VehicleListItemButton';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\nimport FormatTime from '../../common/FormatTime';\nimport VehicleChipGroup from '../../common/vehicles/VehicleChipGroup';\nimport SoldVehicleChip from '../../common/vehicles/SoldVehicleChip';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\ninterface SoldVehicleProps {\n    vehicle: DetailedVehicle;\n    onClick: () => void;\n    className?: string;\n};\nexport default function SoldVehicle(props: SoldVehicleProps): React.ReactElement {\n    const { vehicle, onClick, className } = props;\n    const { totalSellTime } = vehicle;\n\n    return (\n        <>\n            <VehicleListItemButton className={className ? className : ''} onClick={onClick}>\n                <VehicleInfo vehicle={vehicle} listItem />\n                <VehicleChipGroup>\n                    <SoldVehicleChip size='small' label={totalSellTime && <FormatTime milliseconds={totalSellTime} />} />\n                </VehicleChipGroup>\n            </VehicleListItemButton>\n            <Divider />\n        </>\n    );\n}","import { styled } from '@mui/system';\nimport ListItem from '@mui/material/ListItem';\n\nconst VehicleListItem = styled(ListItem)(({ theme }) => ({\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    padding: 0,\n    display: 'flex',\n    justifyContent: 'space-between'\n}));\n\nexport default VehicleListItem;","// react\nimport { useState, useEffect } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport Divider from '@mui/material/Divider';\nimport CircularProgress from '@mui/material/CircularProgress';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../../common/flex';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { deleteVehicle as deleteVehicleService } from '../../../services/vehicles';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: theme.titleColor.darkBlue,\n    },\n    dialog: {\n        padding: 10,\n        textAlign: 'center',\n        maxWidth: 500,\n    },\n}));\n\nexport interface DeleteVehicleDialogProps {\n    open: boolean;\n    onClose: () => void;\n    vehicle: DetailedVehicle;\n    getVehicles: () => void;\n};\nexport default function DeleteVehicleDialog(props: DeleteVehicleDialogProps): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { onClose, open, vehicle, getVehicles } = props;\n    const { id } = vehicle;\n\n    const [deleteVehicleStatus, setDeleteVehicleStatus] = useState<PostRequestStatus>('');\n\n    const deleteVehicle = async () => {\n        setDeleteVehicleStatus('loading');\n        await delay();\n        deleteVehicleService(id)\n            .then(result => {\n                mounted.current && setDeleteVehicleStatus(result.status as PostRequestStatus);\n                getVehicles();\n            }, e => {\n                mounted.current && setDeleteVehicleStatus('failed');\n                console.error(e);\n            });\n    };\n\n    // CLOSE DIALOG WHEN SUCCESSFULLY DELETED\n    useEffect(() => {\n        if (deleteVehicleStatus === 'success') onClose();\n    }, [onClose, deleteVehicleStatus]);\n\n    let buttons: JSX.Element;\n\n    if (deleteVehicleStatus === 'loading') {\n        buttons = (\n            <CircularProgress />\n        );\n    } else if (deleteVehicleStatus === 'failed') {\n        buttons = (\n            <>\n                <p>Failed to delete vehicle</p>\n                <ButtonGroup>\n                    <Button onClick={onClose} >cancel</Button>\n                    <Button\n                        variant='outlined'\n                        color='secondary'\n                        onClick={deleteVehicle}\n                    >\n                        try again\n                    </Button>\n                </ButtonGroup>\n            </>\n        );\n    } else {\n        buttons = (\n            <ButtonGroup>\n                <Button onClick={onClose} >cancel</Button>\n                <Button\n                    variant='outlined'\n                    color='secondary'\n                    onClick={deleteVehicle}\n                >\n                    yes, delete\n                </Button>\n            </ButtonGroup>\n        );\n    };\n\n    return (\n        <Dialog\n            onClose={onClose}\n            aria-labelledby=\"delete-vehicle-dialog\"\n            open={open}\n            disableEscapeKeyDown>\n            <div className={classes.dialog}>\n                <DialogTitle id=\"add-vehicle-dialog\" className={classes.title}>Delete Permanently?</DialogTitle>\n                <FlexCenter>\n                    <VehicleInfo vehicle={vehicle} variant='subtitle1' />\n                </FlexCenter>\n                <br></br>\n                <Divider />\n                <br></br>\n                {buttons}\n            </div>\n        </Dialog >\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui;\nimport Button from '@mui/material/Button';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport Divider from '@mui/material/Divider';\nimport { CircularProgress } from '@mui/material';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport VehicleListItem from '../../common/vehicles/VehicleListItem';\nimport VehicleInfo from '../../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../../common/vehicles/VehicleChipGroup';\nimport DeleteVehicleDialog from './DeleteVehicleDialog';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { updateVehicle } from '../../../services/vehicles';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles(theme => ({\n    trashButtons: {\n        margin: theme.spacing(.25),\n        width: '100%',\n    },\n}));\n\ninterface TrashedVehicleProps {\n    vehicle: DetailedVehicle;\n    getVehicles: () => void;\n    className?: string;\n};\nexport default function TrashedVehicle(props: TrashedVehicleProps): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { vehicle, getVehicles, className } = props;\n\n    const [updateVehicleStatus, setUpdateVehicleStatus] = useState<PostRequestStatus>('');\n\n    // Activate vehicle\n    const activateVehicle = async () => {\n        setUpdateVehicleStatus('loading');\n        await delay();\n        updateVehicle(vehicle.id, { 'status': 'active' })\n            .then(result => {\n                mounted.current && setUpdateVehicleStatus(result.status as PostRequestStatus);\n                getVehicles();\n            }, e => {\n                mounted.current && setUpdateVehicleStatus('failed');\n                console.error(e);\n            });\n    };\n\n    // Delete vehicle\n    const [openDeleteDialog, setOpenDeleteDialog] = useState<boolean>(false);\n    const toggleDeleteDialog = () =>\n        openDeleteDialog ? setOpenDeleteDialog(false) : setOpenDeleteDialog(true);\n\n    return (\n        <>\n            <VehicleListItem className={className ? className : ''}>\n                <VehicleInfo vehicle={vehicle} listItem />\n                <VehicleChipGroup>\n                    {updateVehicleStatus === 'loading'\n                        ? <CircularProgress size={25} />\n                        : <>\n                            <Button\n                                className={classes.trashButtons}\n                                size='small'\n                                variant='outlined'\n                                color='primary'\n                                onClick={activateVehicle}\n                            >\n                                Activate\n                            </Button>\n                            <Button className={classes.trashButtons}\n                                size='small'\n                                variant='outlined'\n                                color='secondary'\n                                startIcon={<DeleteForeverIcon />}\n                                onClick={toggleDeleteDialog}\n                            >\n                                Delete\n                            </Button>\n                            <DeleteVehicleDialog\n                                open={openDeleteDialog}\n                                onClose={toggleDeleteDialog}\n                                vehicle={vehicle}\n                                getVehicles={getVehicles}\n                            />\n                        </>\n                    }\n                </VehicleChipGroup>\n            </VehicleListItem>\n            <Divider />\n        </>\n    );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// THIS PROJECT\n// components\nimport ActiveVehicle from './ActiveVehicle';\nimport SoldVehicle from './SoldVehicle';\nimport TrashedVehicle from './TrashedVehicle';\n// hooks\nimport { useQuery, useVehiclePage } from '../../../hooks';\n// types\nimport { DetailedVehicle } from '../../../types/Vehicle';\n\ninterface VehicleSummaryProps {\n    vehicle: DetailedVehicle;\n    getVehicles: () => void;\n};\nexport default function VehicleSummary(props: VehicleSummaryProps): React.ReactElement {\n    const history = useHistory();\n    const { vehicle, getVehicles } = props;\n    const { status } = vehicle;\n\n    const { statusParam, sortParam, perPageParam, pageParam, compareParam } = useVehiclePage();\n    const queryString = useQuery().toString();\n\n    const vehicleClick = () =>\n        history.push(`/vehicle-details/id/${vehicle.id}/stage?prev=/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/${pageParam}/${compareParam}?${queryString}`);\n\n    switch (status) {\n        case 'active':\n            return <ActiveVehicle vehicle={vehicle} onClick={vehicleClick} />;\n        case 'sold':\n            return <SoldVehicle vehicle={vehicle} onClick={vehicleClick} />;\n        case 'trash':\n            return <TrashedVehicle vehicle={vehicle} getVehicles={getVehicles} />;\n    };\n}","// react-router-dom\nimport { useHistory } from 'react-router';\n// material-ui\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\n// hooks\nimport { useVehiclePage, useQuery } from '../../hooks';\n// types\nimport { VehiclePage } from '../../types/Vehicle';\n\ninterface ListNavigationProps {\n    vehiclePage: VehiclePage;\n}\nexport default function ListNavigation(props: ListNavigationProps): React.ReactElement {\n    const history = useHistory();\n    const { vehiclePage } = props;\n    const { docStartNumber, docEndNumber, totalDocs, vehicles } = vehiclePage;\n    const dateAddedValues: number[] = [];\n    vehicles.forEach(vehicle => dateAddedValues.push(vehicle.dateAdded));\n    const maxDateAdded = Math.max(...dateAddedValues);\n    const minDateAdded = Math.min(...dateAddedValues);\n\n    const { statusParam, sortParam, perPageParam, pageParam } = useVehiclePage();\n    const query = useQuery().toString();\n\n    const firstPageClick = () => {\n        docStartNumber !== 1\n            && history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/first/0?${query}`);\n    };\n\n    const prevPageClick = () => {\n        docStartNumber !== 1 && sortParam === 'asc'\n            ? history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/prev/${minDateAdded}?${query}`)\n            : history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/prev/${maxDateAdded}?${query}`);\n    };\n\n    const nextPageClick = () => {\n        docEndNumber !== totalDocs && sortParam === 'asc'\n            ? history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/next/${maxDateAdded}?${query}`)\n            : history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/next/${minDateAdded}?${query}`);\n    };\n\n    const lastPageClick = () => {\n        pageParam !== 'last'\n            && history.push(`/all-vehicles/${statusParam}/${sortParam}/${perPageParam}/last/0?${query}`);\n    };\n\n    if (totalDocs > parseInt(perPageParam)) {\n        return (\n            <FlexCenter>\n                <IconButton\n                    aria-label='first-page'\n                    onClick={firstPageClick}\n                    disabled={docStartNumber === 1}\n                    size=\"large\">\n                    <FirstPageIcon />\n                </IconButton>\n                <IconButton\n                    aria-label='previous-page'\n                    onClick={prevPageClick}\n                    disabled={docStartNumber === 1}\n                    size=\"large\">\n                    <NavigateBeforeIcon />\n                </IconButton>\n                <Typography align='center'>({docStartNumber.toLocaleString()}-{docEndNumber.toLocaleString()}) / {totalDocs.toLocaleString()}</Typography>\n                <IconButton\n                    aria-label='next-page'\n                    onClick={nextPageClick}\n                    disabled={docEndNumber === totalDocs}\n                    size=\"large\">\n                    <NavigateNextIcon />\n                </IconButton>\n                <IconButton\n                    aria-label='last-page'\n                    onClick={lastPageClick}\n                    disabled={docEndNumber === totalDocs}\n                    size=\"large\">\n                    <LastPageIcon />\n                </IconButton>\n            </FlexCenter>\n        );\n    } else {\n        return <></>;\n    }\n}","// material-ui\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport VehicleSummary from './vehicleSummary/VehicleSummary';\nimport ListNavigation from './ListNavigation';\n// types\nimport { VehicleListState } from '../../types/Vehicle';\n\ninterface VehicleListProps {\n    vehicleListState: VehicleListState;\n    getVehicles: () => void;\n};\nexport default function VehicleList(props: VehicleListProps): React.ReactElement {\n    const { vehicleListState, getVehicles } = props;\n    const { vehiclePage, getVehiclesStatus } = vehicleListState;\n\n    let list: JSX.Element;\n    switch (getVehiclesStatus) {\n        case 'failed':\n            list = <CenteredError errorMessage='Error loading vehicles' retryAction={() => window.location.reload()} />;\n            break;\n        case 'loading':\n            list = <LoadingList skeletonCount={20} />;\n            break;\n        default:\n            list = (\n                <>\n                    <List>\n                        {vehiclePage.vehicles.map(vehicle => {\n                            if (vehicle.id) {\n                                return <VehicleSummary\n                                    key={vehicle.id}\n                                    vehicle={vehicle}\n                                    getVehicles={getVehicles}\n                                />;\n                            } else {\n                                return <></>;\n                            }\n\n                        })}\n                    </List>\n                    <ListNavigation vehiclePage={vehicleListState.vehiclePage} />\n                </>\n            );\n    }\n\n    return <>{list}</>;\n}","// material-ui\nimport Button from '@mui/material/Button';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport VisibilityOffIcon from '@mui/icons-material/VisibilityOff';\nimport Badge from '@mui/material/Badge';\nimport { Theme } from '@mui/material/styles';\nimport withStyles from '@mui/styles/withStyles';\nimport createStyles from '@mui/styles/createStyles';\n// types\nimport { Set } from '../../types/misc';\n\nconst StyledBadge = withStyles((theme: Theme) =>\n    createStyles({\n        badge: {\n            right: 0,\n            top: 20,\n            border: `2px solid ${theme.palette.background.paper}`,\n            padding: '0 4px',\n        },\n    }),\n)(Badge);\n\ninterface ViewFiltersButtonProps {\n    viewFilters: boolean;\n    setViewFilters: Set<boolean>;\n    filterCount: number;\n}\nexport default function ViewFiltersButton(props: ViewFiltersButtonProps): React.ReactElement {\n    const { viewFilters, setViewFilters, filterCount } = props;\n\n    return (\n\n        <Button\n            size='small'\n            startIcon={viewFilters ? <VisibilityOffIcon /> : <VisibilityIcon />}\n            onClick={() => (viewFilters ? setViewFilters(false) : setViewFilters(true))}\n        >\n            <StyledBadge badgeContent={filterCount} color='secondary'>\n                filters\n            </StyledBadge>\n        </Button>\n\n    );\n}","// react\nimport { useState, useEffect, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\nimport Collapse from '@mui/material/Collapse';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport { FlexSpaceBtwn } from '../common/flex';\nimport StatusFilter from './StatusFilter';\nimport VehicleOrder from './VehicleOrder';\nimport AddVehicleButton from './AddVehicleButton';\nimport VehicleListFilters from './vehicleListFilters/VehicleListFilters';\nimport VehicleList from './VehicleList';\nimport ViewFiltersButton from './ViewFiltersButton';\n// hooks\nimport { useCheckMounted, useVehiclePage, useQuery } from '../../hooks';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// services\nimport { getVehiclesPaged } from '../../services/vehicles';\n// types\nimport { VehicleStatus, VehicleListState, VehiclePage } from '../../types/Vehicle';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { ListOrder } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n    listControls: {\n        margin: theme.spacing(1),\n    },\n}));\n\nexport default function AllVehicles(): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n\n    const { statusParam, sortParam, perPageParam, pageParam, compareParam } = useVehiclePage();\n    const query = useQuery().toString();\n\n    // state for ui\n    const [statusFilter, setStatusFilter] = useState<VehicleStatus>(statusParam);\n    const [sort, setSort] = useState<ListOrder>(sortParam);\n    const [viewFilters, setViewFilters] = useState<boolean>(false);\n    const [filterCount, setFilterCount] = useState<number>(0);\n\n    // Get vehicles\n    const [vehiclePage, setVehiclePage] = useState<VehiclePage>({ docStartNumber: 0, docEndNumber: 0, totalDocs: 0, vehicles: [] });\n    const [getVehiclesStatus, setGetVehiclesStatus] = useState<GetRequestStatus>('loading');\n\n    const vehicleListState: VehicleListState = {\n        vehiclePage, setVehiclePage,\n        getVehiclesStatus, setGetVehiclesStatus\n    };\n\n    const getVehicles = useCallback(\n        async () => {\n            setGetVehiclesStatus('loading');\n            await delay();\n            getVehiclesPaged(statusParam, sortParam, parseInt(perPageParam), pageParam, parseInt(compareParam), query)\n                .then(result => {\n                    mounted.current && setGetVehiclesStatus(result.status as GetRequestStatus);\n                    result.status === 'success' && mounted.current && result.data && setVehiclePage(result.data);\n                    result.status === 'failed' && console.error(result);\n                }, e => {\n                    mounted.current && setGetVehiclesStatus('failed');\n                    console.error(e);\n                });\n        },\n        [delay, statusParam, sortParam, perPageParam, pageParam, compareParam, query, mounted]\n    );\n\n    useEffect(() => { getVehicles(); }, [getVehicles]);\n\n    return (\n        <LargeCard>\n            <LargeContent style={{ position: 'relative' }} sx={{ zIndex: 0 }}>\n                <AddVehicleButton />\n                <ContentHeader>\n                    <IconContentTitle icon={<VisibilityIcon color='primary' />} variant='h5'>All Vehicles</IconContentTitle>\n                    <Divider />\n                    <FlexSpaceBtwn className={classes.listControls}>\n                        <StatusFilter filter={statusFilter} setFilter={setStatusFilter} />\n                        <VehicleOrder sort={sort} setSort={setSort} />\n                        <ViewFiltersButton viewFilters={viewFilters} setViewFilters={setViewFilters} filterCount={filterCount} />\n                    </FlexSpaceBtwn>\n                    <Divider />\n                    <Collapse in={viewFilters} timeout='auto' style={{ width: '100%' }}>\n                        <VehicleListFilters\n                            mounted={mounted}\n                            setViewFilters={setViewFilters}\n                            setFilterCount={setFilterCount}\n                        />\n                        <Divider />\n                    </Collapse>\n                </ContentHeader>\n                <VehicleList\n                    vehicleListState={vehicleListState}\n                    getVehicles={getVehicles}\n                />\n            </LargeContent>\n        </LargeCard>\n    );\n};\n","// react\nimport { useState, useEffect, useCallback } from 'react';\n// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { getNextStock as getNextStockService } from '../../../services/vehicles';\n// types\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\nimport { EditStockState } from '../../../types/Vehicle';\nimport { FlexEnd } from '../flex';\n\n\nconst useStyles = makeStyles((theme) => ({\n    field: {\n        // textAlign: 'left',\n        width: 'calc(100% - 75px)',\n    },\n    nextStockButton: {\n        width: 75,\n    },\n}));\n\ninterface NextStockButtonProps {\n    editStockState: EditStockState;\n};\nexport default function NextStockButton(props: NextStockButtonProps): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { setStock, setStockError, addEditVehicleStatus } = props.editStockState;\n    const [nextStock, setNextStock] = useState('');\n    const [getNextStockStatus, setGetNextStockStatus] = useState<GetRequestStatus>('loading');\n\n    const useNextStock = (): void => {\n        setStock(nextStock);\n        setStockError('');\n    };\n\n    const getNextStock = useCallback(async () => {\n        setGetNextStockStatus('loading');\n        await delay();\n        getNextStockService()\n            .then(result => {\n                mounted.current && result.data && setNextStock(result.data.nextStock.toString());\n                mounted.current && setGetNextStockStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetNextStockStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted]\n    );\n\n    useEffect(() => {\n        if (addEditVehicleStatus === '' || addEditVehicleStatus === 'success') {\n            getNextStock();\n        };\n    }, [addEditVehicleStatus, getNextStock]);\n\n    if (getNextStockStatus === 'loading') {\n        return (\n            <FlexEnd className={classes.nextStockButton}>\n                <CircularProgress size={25} />\n            </FlexEnd>\n        );\n    };\n\n    if (getNextStockStatus === 'failed') {\n        return (\n            <Button className={classes.nextStockButton} disabled>\n                error\n            </Button>\n        );\n    };\n\n    return (\n        <Button className={classes.nextStockButton} onClick={useNextStock}>\n            USE NEXT\n        </Button>\n    );\n}","// react\nimport { useEffect, useCallback } from 'react';\n// material-ui\nimport TextField from '@mui/material/TextField';\nimport InputAdornment from '@mui/material/InputAdornment';\n// THIS PROJECT\n// components\nimport NextStockButton from './NextStockButton';\n// types\nimport { EditStockState } from '../../../types/Vehicle';\n\ninterface StockFieldProps {\n    editStockState: EditStockState;\n    className?: string;\n};\nexport default function StockField(props: StockFieldProps): React.ReactElement {\n    const { editStockState, className } = props;\n    const { stock, setStock, stockOkay, setStockOkay, stockError, setStockError } = editStockState;\n\n    const changeStock = (e: React.ChangeEvent<{ value: unknown; }>): void => {\n        setStock(e.target.value as string);\n    };\n\n    const checkStock = useCallback(() => {\n        const stockFormatTest = /^[0-9]{5}$/;\n        if (!stockFormatTest.test(stock) && stock !== '') {\n            setStockOkay(false);\n            setStockError('must be 5 digits');\n        } else if (stockError !== 'stk# already exists') {\n            setStockOkay(true);\n            setStockError('');\n        };\n    }, [setStockError, setStockOkay, stock, stockError]);\n\n    useEffect(() => {\n        if (!stockOkay) checkStock();\n    }, [stock, stockOkay, checkStock]);\n\n    return (\n        <TextField\n            className={className && className}\n            error={stockError ? true : false}\n            label={'Stock #'}\n            helperText={stockError}\n            variant='outlined'\n            value={stock !== '0' ? stock : ' '}\n            onChange={changeStock}\n            onBlur={checkStock}\n            InputProps={{\n                endAdornment:\n                    <InputAdornment position='end'>\n                        <NextStockButton editStockState={editStockState} />\n                    </InputAdornment>\n            }}\n        />\n    );\n}","// material-ui\nimport { ClassNameMap } from '@mui/styles';\n// THIS PROJECT\n// components\nimport StockField from '../common/vehicles/StockField';\nimport YearSelect from '../common/vehicles/YearSelect';\nimport MakeSelect from '../common/vehicles/MakeSelect';\nimport ModelSelect from '../common/vehicles/ModelSelect';\nimport TrimSelect from '../common/vehicles/TrimSelect';\n// types\nimport { AddVehicleState, EditStockState } from '../../types/Vehicle';\n\ninterface VehicleInfoInputsProps {\n    mounted: React.MutableRefObject<boolean>;\n    addVehicleState: AddVehicleState;\n    classes: ClassNameMap<\"form\" | \"inputField\">;\n};\nexport default function VehicleInfoInputs(props: VehicleInfoInputsProps): React.ReactElement {\n    const { mounted, addVehicleState, classes } = props;\n    const {\n        stock, setStock,\n        stockOkay, setStockOkay,\n        stockError, setStockError,\n        year, setYear,\n        make, setMake,\n        model, setModel,\n        trim, setTrim,\n        addVehicleStatus,\n    } = addVehicleState;\n\n    const editStockState: EditStockState = {\n        stock, setStock,\n        stockOkay, setStockOkay,\n        stockError, setStockError,\n        addEditVehicleStatus: addVehicleStatus,\n    };\n\n    return (\n        <div className={classes.form}>\n            <StockField className={classes.inputField} editStockState={editStockState} />\n            <YearSelect className={classes.inputField} year={year} setYear={setYear} />\n            <MakeSelect\n                className={classes.inputField}\n                parent={{ mounted, make, setMake }}\n                allowAddMake\n            />\n            <ModelSelect\n                className={classes.inputField}\n                parent={{ mounted, make, model, setModel }}\n                allowAddModel\n            />\n            <TrimSelect\n                className={classes.inputField}\n                parent={{ mounted, make, model, trim, setTrim }}\n                allowAddTrim\n            />\n        </div>\n    );\n}","// types\nimport { IdName } from '../types/misc';\nimport { GetSuccess, PostSuccess, PostExists, FailedResult, PatchSuccess, PatchManyResult } from '../types/ServiceResults';\nimport { StageAssignment, AssignStageParam, CurrentStageSummary } from '../types/StageAssignment';\nimport { DetailedVehicle } from '../types/Vehicle';\nimport { StageVehicleCount, PersonPlaceVehicleCount, StageSummary, UpdatedStageOrder } from '../types/Stage';\n\nconst stages = 'http://localhost:7000/api/stages';\n\nexport async function getStageVehicleCounts(): Promise<GetSuccess<StageVehicleCount[]> | FailedResult> {\n    const response = await fetch(stages + '/get-stage-vehicle-counts');\n    const json = await response.json();\n    return json;\n}\n\nexport async function getPersonPlaceVehicleCounts(): Promise<GetSuccess<PersonPlaceVehicleCount[]> | FailedResult> {\n    const response = await fetch(stages + '/get-person-place-vehicle-counts');\n    const json = await response.json();\n    return json;\n}\n\nexport async function getStages(): Promise<GetSuccess<StageSummary[]> | FailedResult> {\n    const response = await fetch(stages + '/get-stages');\n    const json = await response.json();\n    return json;\n};\n\nexport async function addStage(stage: string): Promise<PostSuccess<StageSummary, StageSummary[]> | PostExists | FailedResult> {\n    const body = { stage };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(stages + '/add-stage', options);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getPeoplePlaces(stageId: string): Promise<GetSuccess<IdName[]> | FailedResult> {\n    const response = await fetch(`${stages}/get-people-places?stageId=${stageId}`);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getAllPeoplePlaces(): Promise<GetSuccess<IdName[]> | FailedResult> {\n    const response = await fetch(stages + '/get-all-people-places');\n    const json = await response.json();\n    return json;\n};\n\ntype AddPersonPlaceReturn = PostSuccess<IdName, { peoplePlaces: IdName[] | undefined, allPeoplePlaces: IdName[]; }> | PostExists | FailedResult;\nexport async function addPersonPlace(stageId: string, personPlace: string): Promise<AddPersonPlaceReturn> {\n    const body = { stageId, personPlace };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(stages + '/add-person-place', options);\n    const json = await response.json();\n    return json;\n};\n\nexport async function assignStage(assignStageParam: AssignStageParam, previousStage?: CurrentStageSummary): Promise<PostSuccess<DetailedVehicle> | FailedResult> {\n    const body = {\n        assignStageParam: JSON.stringify(assignStageParam),\n        previousStage: previousStage && JSON.stringify(previousStage)\n    };\n    const options = {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(stages + '/assign-stage', options);\n    const json = await response.json();\n    return json;\n};\n\nexport async function completeStageAssignment(stageAssignmentId: string, dateCompleted: number): Promise<PatchSuccess<object, StageAssignment, DetailedVehicle> | FailedResult> {\n    const body = {\n        stageAssignmentId,\n        dateCompleted,\n    };\n    const options = {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(stages + '/complete-stage-assignment', options);\n    const json = await response.json();\n    return json;\n};\n\nexport async function getStageHistory(vehicleId: string): Promise<GetSuccess<StageAssignment[]> | FailedResult> {\n    const response = await fetch(`${stages}/stage-history?vehicleId=${vehicleId}`);\n    const json = await response.json();\n    return json;\n}\n\nexport async function updateStageOrder(newStageOrder: UpdatedStageOrder[]): Promise<PatchManyResult<StageSummary[]> | FailedResult> {\n    const body = {\n        updates: newStageOrder,\n    };\n    const options = {\n        method: 'PATCH',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(body)\n    };\n    const response = await fetch(stages + '/update-stage-order', options);\n    const json = await response.json();\n    return json;\n}","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// coponents\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addStage } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\nimport { StageSummary } from '../../../types/Stage';\n\nconst useStyles = makeStyles((theme) => ({\n    addButtons: {\n        marginLeft: 'auto',\n    },\n}));\n\ninterface AddStageProps {\n    stageSelectParent: {\n        mounted: MutableRefObject<boolean>;\n        setStage: Set<IdName>;\n    };\n    stageSelect: {\n        mounted: MutableRefObject<boolean>;\n        addStage: boolean;\n        setAddStage: Set<boolean>;\n        setStages: Set<StageSummary[]>;\n        open: boolean;\n        setOpen: Set<boolean>;\n    };\n};\nexport default function AddStage(props: AddStageProps): React.ReactElement {\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n    const { stageSelectParent: p, stageSelect: ss } = props;\n\n    const mounted = useCheckMounted();\n    const [addStageStatus, setAddStageStatus] = useState<PostRequestStatus | ''>('');\n    const [addStageInput, setAddStageInput] = useState<string>('');\n\n    const handleChangeAddStageInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setAddStageInput(e.target.value);\n    };\n\n    // we need to create an updated openRef because the ms.open value will get stale within a function\n    const openRef = useRef(ss.open);\n    useEffect(() => {\n        openRef.current = ss.open;\n    }, [ss.open]);\n\n    const handleAddStage = async () => {\n        setAddStageStatus('loading');\n        await delay();\n        addStage(addStageInput)\n            .then(result => {\n                mounted.current && setAddStageStatus(result.status as PostRequestStatus);\n                switch (result.status) {\n                    case 'success':\n                        if (p.mounted.current && openRef.current) {\n                            result.doc && p.setStage({ id: result.doc.id, name: result.doc.name });\n                        }\n                        if (ss.mounted.current) {\n                            ss.setAddStage(false);\n                            result.data && ss.setStages(result.data);\n                            ss.setOpen(false);\n                        }\n                        break;\n                    default:\n                        mounted.current && setAddStageInput('');\n                        break;\n                }\n            }, e => {\n                setAddStageStatus('failed');\n                console.error(e);\n            });\n    };\n\n    return (\n        <Collapse in={ss.addStage} timeout='auto' unmountOnExit>\n            <List>\n                {addStageStatus === 'loading'\n                    ? <FlexCenter><CircularProgress /></FlexCenter>\n                    : <>\n                        {addStageStatus === 'exists'\n                            &&\n                            <Typography color='secondary'>\n                                Already exists\n                            </Typography>}\n                        {addStageStatus === 'failed'\n                            &&\n                            <Typography color='secondary'>\n                                Failed to add stage\n                            </Typography>}\n                        <ListItem>\n                            <TextField\n                                autoFocus\n                                fullWidth\n                                id='add-stage-input'\n                                label='Add Stage*'\n                                value={addStageInput}\n                                onChange={handleChangeAddStageInput}\n                                autoComplete='off'\n                            />\n                        </ListItem>\n                        <div className={classes.addButtons}>\n                            <Button onClick={() => ss.setAddStage(false)}>Cancel</Button>\n                            <Button\n                                onClick={addStageInput ? handleAddStage : () => { }}\n                                disabled={addStageInput ? false : true}\n                                color='primary'>\n                                Add\n                            </Button>\n                        </div>\n                    </>}\n            </List>\n        </Collapse>\n    );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport AddListItem from '../AddListItem';\nimport AddStage from './AddStage';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getStages as getStagesService } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { StageSummary } from '../../../types/Stage';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface StageSelectProps {\n    parent: {\n        mounted: React.MutableRefObject<boolean>;\n        stage: IdName;\n        setStage: Set<IdName>;\n    };\n    allowAddStage?: boolean;\n    className?: string;\n    button?: boolean;\n    TextFieldProps?: any;\n    ButtonProps?: any;\n};\nexport default function StageSelect(props: StageSelectProps): React.ReactElement {\n    const { delay } = useDemoContext();\n    const {\n        parent,\n        allowAddStage,\n        className,\n        button,\n        TextFieldProps,\n        ButtonProps\n    } = props;\n\n    const {\n        mounted: pMounted,\n        stage,\n        setStage\n    } = parent;\n\n    const mounted = useCheckMounted();\n\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handleStageSelect = (stagetmp = stage) => {\n        setStage({ id: stagetmp.id, name: stagetmp.name });\n        setOpen(false);\n    };\n\n    const [stages, setStages] = useState<StageSummary[]>([]);\n    const [getStagesStatus, setGetStagesStatus] = useState<GetRequestStatus>('loading');\n\n    const getStages = useCallback(async () => {\n        setGetStagesStatus('loading');\n        await delay();\n        getStagesService()\n            .then(result => {\n                mounted.current && result.data && setStages(result.data);\n                mounted.current && setGetStagesStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetStagesStatus('failed');\n                console.error(e);\n            });\n\n    },\n        [delay, mounted]\n    );\n\n    useEffect(() => {\n        getStages();\n    }, [getStages]);\n\n    const [addStage, setAddStage] = useState<boolean>(false);\n\n    useEffect(() => {\n        !open && setAddStage(false);\n    }, [open]);\n\n    let dialogContent: JSX.Element;\n\n    switch (getStagesStatus) {\n        case 'loading':\n            dialogContent = <CircularProgress />;\n            break;\n        case 'failed':\n            dialogContent = <Typography>error loading stages</Typography>;\n            break;\n        default:\n            dialogContent = (\n                <>\n                    <Collapse in={!addStage} timeout='auto' unmountOnExit>\n                        <List>\n                            <SelectListItem\n                                onClick={() => handleStageSelect({ id: '', name: '' })}\n                                textVal=''\n                                selectCondition={!stage.name}\n                            />\n                            <Divider />\n                            {stages.map(stagetmp =>\n                                <div key={stagetmp.id}>\n                                    <SelectListItem\n                                        onClick={() => handleStageSelect(stagetmp)}\n                                        textVal={stagetmp.name}\n                                        selectCondition={stagetmp.name === stage.name}\n                                    />\n                                    <Divider />\n                                </div>)}\n                            {allowAddStage &&\n                                <AddListItem\n                                    onClick={() => setAddStage(true)}\n                                    textVal='Add Stage'\n                                />}\n                        </List >\n                    </Collapse>\n                    {allowAddStage && <AddStage\n                        stageSelectParent={{\n                            mounted: pMounted,\n                            setStage: setStage,\n                        }}\n                        stageSelect={{\n                            mounted,\n                            setStages,\n                            addStage,\n                            setAddStage,\n                            open,\n                            setOpen\n                        }}\n                    />}\n                </>\n            );\n    };\n\n    return (\n        <>\n            <CustomSelect\n                label={button ? 'stage' : 'Stage*'}\n                id='stage-select'\n                value={stage.name}\n                setOpen={setOpen}\n                className={className}\n                button={button ? true : false}\n                TextFieldProps={TextFieldProps}\n                ButtonProps={ButtonProps}\n            />\n            <SelectDialog open={open} setOpen={setOpen}\n                flex={getStagesStatus === 'success' ? false : true}>\n                {dialogContent}\n            </SelectDialog>\n        </>\n    );\n}","// material-ui\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport ExpandMore from '@mui/icons-material/ExpandMore';\nimport ExpandLess from '@mui/icons-material/ExpandLess';\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles((theme) => ({\n    emphasized: {\n        fontStyle: 'italic',\n        paddingLeft: theme.spacing(1),\n    },\n}));\n\ninterface ShowMoreListItemProps {\n    onClick: () => void;\n    selectCondition: boolean;\n};\nexport default function ShowMoreListItem(props: ShowMoreListItemProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { onClick, selectCondition } = props;\n\n    return (\n        <ListItem button onClick={onClick} className={classes.emphasized}>\n            <ListItemText primary={selectCondition ? 'Show less...' : 'Show more...'} />\n            {selectCondition ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n    );\n}","// react\nimport { useState, useEffect, MutableRefObject, useRef } from 'react';\n// material-ui\nimport Collapse from '@mui/material/Collapse';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { addPersonPlace } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { PostRequestStatus } from '../../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme) => ({\n    addButtons: {\n        marginLeft: 'auto',\n    },\n}));\n\ninterface AddPersonPlaceProps {\n    personPlaceSelectParent: {\n        mounted: MutableRefObject<boolean>;\n        stageId: string;\n        setPersonPlace: Set<IdName>;\n    };\n    personPlaceSelect: {\n        mounted: MutableRefObject<boolean>;\n        addPersonPlace: boolean;\n        setAddPersonPlace: Set<boolean>;\n        setAllPeoplePlaces: Set<IdName[]>;\n        setPeoplePlaces: Set<IdName[]>;\n        open: boolean;\n        setOpen: Set<boolean>;\n    };\n};\nexport default function AddPersonPlace(props: AddPersonPlaceProps): React.ReactElement {\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n    const { personPlaceSelectParent: p, personPlaceSelect: pps } = props;\n\n    const mounted = useCheckMounted();\n    const [addPersonPlaceStatus, setAddPersonPlaceStatus] = useState<PostRequestStatus | ''>('');\n    const [addPersonPlaceInput, setAddPersonPlaceInput] = useState<string>('');\n\n    const handleChangeAddPersonPlaceInput = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setAddPersonPlaceInput(e.target.value);\n    };\n\n    // we need to create an updated openRef because the ss.open value will get stale within a function\n    const openRef = useRef(pps.open);\n    useEffect(() => {\n        openRef.current = pps.open;\n    }, [pps.open]);\n\n    const handleAddPersonPlace = async () => {\n        setAddPersonPlaceStatus('loading');\n        await delay();\n        addPersonPlace(p.stageId, addPersonPlaceInput)\n            .then(result => {\n                mounted.current && setAddPersonPlaceStatus(result.status as PostRequestStatus);\n                switch (result.status) {\n                    case 'success':\n                        if (p.mounted.current && openRef.current) {\n                            result.doc && p.setPersonPlace(result.doc);\n                        }\n                        if (pps.mounted.current) {\n                            pps.setAddPersonPlace(false);\n                            result.data && pps.setAllPeoplePlaces(result.data.allPeoplePlaces);\n                            pps.setOpen(false);\n                        }\n                        break;\n                    default:\n                        mounted.current && setAddPersonPlaceInput('');\n                        break;\n                }\n            }, e => {\n                setAddPersonPlaceStatus('failed');\n                console.error(e);\n            });\n    };\n\n    return (\n        <Collapse in={pps.addPersonPlace} timeout='auto' unmountOnExit>\n            <List>\n                {addPersonPlaceStatus === 'loading'\n                    ? <FlexCenter><CircularProgress /></FlexCenter>\n                    : <>\n                        {addPersonPlaceStatus === 'exists'\n                            &&\n                            <Typography color='secondary'>\n                                Already exists\n                            </Typography>}\n                        {addPersonPlaceStatus === 'failed'\n                            &&\n                            <Typography color='secondary'>\n                                Failed to add person/place\n                            </Typography>}\n                        <ListItem>\n                            <TextField\n                                autoFocus\n                                fullWidth\n                                id='add-person-place-input'\n                                label='Add Person/Place*'\n                                value={addPersonPlaceInput}\n                                onChange={handleChangeAddPersonPlaceInput}\n                                autoComplete='off'\n                            />\n                        </ListItem>\n                        <div className={classes.addButtons}>\n                            <Button onClick={() => pps.setAddPersonPlace(false)}>Cancel</Button>\n                            <Button\n                                onClick={addPersonPlaceInput ? handleAddPersonPlace : () => { }}\n                                disabled={addPersonPlaceInput ? false : true}\n                                color='primary'>\n                                Add\n                            </Button>\n                        </div>\n                    </>}\n            </List>\n        </Collapse>\n    );\n}","// react\nimport { useCallback, useEffect, useState } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport SelectDialog from '../SelectDialog';\nimport CustomSelect from '../CustomSelect';\nimport SelectListItem from '../SelectListItem';\nimport ShowMoreListItem from '../ShowMoreListItem';\nimport AddListItem from '../AddListItem';\nimport AddPersonPlace from './AddPersonPlace';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// services\nimport { getPeoplePlaces as getPeoplePlacesService, getAllPeoplePlaces as getAllPeoplePlacesService } from '../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// types\nimport { IdName, Set } from '../../../types/misc';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface StageSelectProps {\n    parent: {\n        mounted: React.MutableRefObject<boolean>;\n        stage: IdName;\n        personPlace: IdName;\n        setPersonPlace: Set<IdName>;\n    };\n    allowAddPersonPlace?: boolean;\n    className?: string;\n    button?: boolean;\n    TextFieldProps?: any;\n    ButtonProps?: any;\n};\nexport default function StageSelect(props: StageSelectProps): React.ReactElement {\n    const { delay } = useDemoContext();\n    const {\n        parent,\n        allowAddPersonPlace,\n        className,\n        button,\n        TextFieldProps,\n        ButtonProps\n    } = props;\n\n    const {\n        mounted: pMounted,\n        stage,\n        personPlace,\n        setPersonPlace,\n    } = parent;\n\n    const mounted = useCheckMounted();\n\n    const [open, setOpen] = useState<boolean>(false);\n\n    const handlePersonPlaceSelect = (personPlacetmp = personPlace) => {\n        setPersonPlace(personPlacetmp);\n        setOpen(false);\n    };\n\n    // get stage specific People/Places\n    const [peoplePlaces, setPeoplePlaces] = useState<IdName[]>([]);\n    const [getPeoplePlacesStatus, setGetPeoplePlacesStatus] = useState<GetRequestStatus>('loading');\n\n    const getPeoplePlaces = useCallback(async () => {\n        setGetPeoplePlacesStatus('loading');\n        await delay();\n        getPeoplePlacesService(stage.id)\n            .then(result => {\n                mounted.current && result.data && setPeoplePlaces(result.data);\n                mounted.current && setGetPeoplePlacesStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetPeoplePlacesStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted, stage.id]\n    );\n\n    useEffect(() => {\n        setPersonPlace({ id: '', name: '' });\n        if (stage.id) {\n            getPeoplePlaces();\n        }\n    }, [setPersonPlace, getPeoplePlaces, stage.id]);\n\n    // get all People/Places \n    const [allPeoplePlaces, setAllPeoplePlaces] = useState<IdName[]>([]);\n    const [getAllPeoplePlacesStatus, setGetAllPeoplePlacesStatus] = useState<GetRequestStatus>('loading');\n\n    const getAllPeoplePlaces = useCallback(async () => {\n        setGetAllPeoplePlacesStatus('loading');\n        await delay();\n        getAllPeoplePlacesService()\n            .then(result => {\n                mounted.current && result.data && setAllPeoplePlaces(result.data);\n                mounted.current && setGetAllPeoplePlacesStatus(result.status as GetRequestStatus);\n            }, e => {\n                mounted.current && setGetAllPeoplePlacesStatus('failed');\n                console.error(e);\n            });\n\n    },\n        [delay, mounted]);\n\n    useEffect(() => {\n        getAllPeoplePlaces();\n    }, [getAllPeoplePlaces]);\n\n    const [showMorePeoplePlaces, setShowMorePeoplePlaces] = useState<boolean>(false);\n\n    const toggleShowMorePeoplePlaces = () => showMorePeoplePlaces ? setShowMorePeoplePlaces(false) : setShowMorePeoplePlaces(true);\n\n    const [addPersonPlace, setAddPersonPlace] = useState<boolean>(false);\n\n    useEffect(() => {\n        !open && setAddPersonPlace(false);\n        !open && setShowMorePeoplePlaces(false);\n    }, [open]);\n\n    let dialogContent: JSX.Element;\n\n    switch (getPeoplePlacesStatus || getAllPeoplePlacesStatus) {\n        case 'loading':\n            dialogContent = <CircularProgress />;\n            break;\n        case 'failed':\n            dialogContent = <Typography>error loading People/Places</Typography>;\n            break;\n        default:\n            dialogContent = (\n                <>\n                    <Collapse in={!addPersonPlace} timeout='auto' unmountOnExit>\n                        <List>\n                            <SelectListItem\n                                onClick={() => handlePersonPlaceSelect({ id: '', name: '' })}\n                                textVal=''\n                                selectCondition={!personPlace.name}\n                            />\n                            <Divider />\n                            {peoplePlaces.map(personPlacetmp =>\n                                <div key={personPlacetmp.id}>\n                                    <SelectListItem\n                                        onClick={() => handlePersonPlaceSelect(personPlacetmp)}\n                                        textVal={personPlacetmp.name}\n                                        selectCondition={personPlacetmp.name === personPlace.name}\n                                    />\n                                    <Divider />\n                                </div>)}\n                            <ShowMoreListItem\n                                onClick={toggleShowMorePeoplePlaces}\n                                selectCondition={showMorePeoplePlaces}\n                            />\n                            <Collapse in={showMorePeoplePlaces} timeout='auto'>\n                                {allPeoplePlaces\n                                    .filter(personPlacetmp => (!peoplePlaces.find(personPlacetmp2 => personPlacetmp2.id === personPlacetmp.id)))\n                                    .map(personPlacetmp =>\n                                        <div key={personPlacetmp.id}>\n                                            <SelectListItem\n                                                onClick={() => handlePersonPlaceSelect(personPlacetmp)}\n                                                textVal={personPlacetmp.name}\n                                                selectCondition={personPlacetmp.name === personPlace.name}\n                                            />\n                                        </div>)\n                                }\n                                {allowAddPersonPlace &&\n                                    <AddListItem\n                                        onClick={() => setAddPersonPlace(true)}\n                                        textVal={'Add Person/Place'}\n                                    />}\n                            </Collapse>\n                        </List >\n                    </Collapse>\n                    {allowAddPersonPlace\n                        && <AddPersonPlace\n                            personPlaceSelectParent={{\n                                mounted: pMounted,\n                                stageId: stage.id,\n                                setPersonPlace\n                            }}\n                            personPlaceSelect={{\n                                mounted,\n                                addPersonPlace,\n                                setAddPersonPlace,\n                                setAllPeoplePlaces,\n                                setPeoplePlaces,\n                                open,\n                                setOpen\n                            }}\n                        />\n                    }\n                </>\n            );\n    };\n\n    return (\n        <>\n            <CustomSelect\n                label={button ? 'person/place' : 'Person/Place*'}\n                id='person-place-select'\n                value={personPlace.name}\n                setOpen={setOpen}\n                className={className}\n                button={button ? true : false}\n                TextFieldProps={TextFieldProps}\n                ButtonProps={ButtonProps}\n                disabled={stage.id ? false : true}\n            />\n            <SelectDialog open={open} setOpen={setOpen}\n                flex={getPeoplePlacesStatus === 'success' && getAllPeoplePlacesStatus === 'success' ? false : true}>\n                {dialogContent}\n            </SelectDialog>\n        </>\n    );\n}","// react\nimport { useState } from 'react';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport TextField from '@mui/material/TextField';\nimport IconButton from '@mui/material/IconButton';\nimport AddIcon from '@mui/icons-material/Add';\nimport ClearIcon from '@mui/icons-material/Clear';\nimport InputAdornment from '@mui/material/InputAdornment';\n\nconst useStyles = makeStyles((theme) => ({\n    taskList: {\n        outline: '1px solid #D3D3D3',\n        margin: 'auto',\n        marginTop: theme.spacing(0),\n        backgroundColor: '#F8F8F8',\n    },\n    listItem: {\n        wordWrap: 'break-word',\n    },\n}));\n\ninterface TaskListInputProps {\n    taskList: string[];\n    setTaskList: React.Dispatch<React.SetStateAction<string[]>>;\n    className?: string;\n};\nexport default function TaskListInput(props: TaskListInputProps): React.ReactElement {\n    const classes = useStyles();\n    const { taskList, setTaskList, className } = props;\n    const [task, setTask] = useState<string>('');\n\n    const handleTaskInputChange = (e: React.ChangeEvent<{ value: string; }>): void => {\n        setTask(e.target.value);\n    };\n\n    const addTask = () => {\n        setTaskList([...taskList, task]);\n        setTask('');\n    };\n\n    const removeTask = (index: number) => {\n        let taskListTmp = [...taskList];\n        taskListTmp.splice(index, 1);\n        setTaskList(taskListTmp);\n    };\n\n    let taskListComponent: JSX.Element;\n\n    if (taskList.length > 0) {\n        taskListComponent = (\n            <div className={className}>\n                <List className={classes.taskList}>\n                    {taskList.map((task, index) => <ListItem key={task + Math.random()} alignItems='flex-start'>\n                        <ListItemText className={classes.listItem}>\n                            <div className={classes.listItem}>\n                                {task}\n                            </div>\n                        </ListItemText>\n                        <IconButton onClick={() => removeTask(index)} size='small'>\n                            <ClearIcon />\n                        </IconButton>\n                    </ListItem>)}\n                </List>\n            </div>\n        );\n    } else {\n        taskListComponent = (<></>);\n    };\n\n    let taskAddButton: JSX.Element;\n\n    if (task) {\n        taskAddButton = (\n            <IconButton onClick={addTask} size=\"large\">\n                <AddIcon />\n            </IconButton>\n        );\n    } else {\n        taskAddButton = (\n            <IconButton disabled size=\"large\">\n                <AddIcon />\n            </IconButton>\n        );\n    };\n\n    return (\n        <>\n            <TextField\n                className={className && className}\n                label='Add Task'\n                variant='outlined'\n                value={task}\n                onChange={handleTaskInputChange}\n                InputProps={{\n                    endAdornment:\n                        <InputAdornment position='end'>\n                            {taskAddButton}\n                        </InputAdornment>\n                }}\n            />\n            {taskListComponent}\n        </>\n    );\n}","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Collapse from '@mui/material/Collapse';\nimport { ClassNameMap } from '@mui/styles';\n// THIS PROJECT\n// components\nimport StageSelect from '../common/stages/StageSelect';\nimport PersonPlaceSelect from '../common/stages/PersonPlaceSelect';\nimport TaskListInput from '../common/stages/TaskListInput';\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\ninterface StageAssignInputsProps {\n    mounted: React.MutableRefObject<boolean>;\n    addVehicleState: AddVehicleState;\n    classes: ClassNameMap<\"form\" | \"inputField\">;\n};\nexport default function StageAssignInputs(props: StageAssignInputsProps): React.ReactElement {\n    const { classes, addVehicleState, mounted } = props;\n    const { stage, setStage, personPlace, setPersonPlace, taskList, setTaskList, addVehicleStatus } = addVehicleState;\n    const [showStageInputs, setShowStageInputs] = useState<boolean>(false);\n\n    const toggleShowStageInputs = () => {\n        showStageInputs && setShowStageInputs(false);\n        !showStageInputs && setShowStageInputs(true);\n    };\n\n    useEffect(() => {\n        addVehicleStatus && setShowStageInputs(false);\n    }, [addVehicleStatus]);\n\n    return (\n        <>\n            <Button\n                className={classes.inputField}\n                startIcon={!showStageInputs ? <AddIcon /> : <RemoveIcon />}\n                onClick={toggleShowStageInputs}\n            >\n                Stage Assignment\n            </Button>\n            <Collapse in={showStageInputs} timeout='auto' sx={{ width: '100%' }}>\n                <div className={classes.form}>\n                    <StageSelect\n                        className={classes.inputField}\n                        parent={{ mounted, stage, setStage }}\n                        allowAddStage\n                    />\n                    <PersonPlaceSelect\n                        className={classes.inputField}\n                        parent={{ mounted, stage, personPlace, setPersonPlace }}\n                        allowAddPersonPlace\n                    />\n                    <TaskListInput\n                        className={classes.inputField}\n                        taskList={taskList}\n                        setTaskList={setTaskList}\n                    />\n                </div>\n            </Collapse>\n        </>\n    );\n}\n\n","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport EditIcon from '@mui/icons-material/Edit';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Collapse from '@mui/material/Collapse';\nimport TextField from '@mui/material/TextField';\nimport { ClassNameMap } from '@mui/styles';\n// THIS PROJECT\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\ninterface NotesInputProps {\n    mounted: React.MutableRefObject<boolean>;\n    addVehicleState: AddVehicleState;\n    classes: ClassNameMap<\"form\" | \"inputField\">;\n};\nexport default function NotesInput(props: NotesInputProps): React.ReactElement {\n    const { classes, addVehicleState } = props;\n    const { notes, setNotes, addVehicleStatus } = addVehicleState;\n    const [showNotesInput, setShowNotesInput] = useState<boolean>(false);\n\n    const toggleShowNotesInput = () => {\n        showNotesInput && setShowNotesInput(false);\n        !showNotesInput && setShowNotesInput(true);\n    };\n\n    const handleNotesChange = (e: React.ChangeEvent<{ value: string; }>) => {\n        setNotes(e.target.value);\n    };\n\n    useEffect(() => {\n        addVehicleStatus && setShowNotesInput(false);\n    }, [addVehicleStatus]);\n\n    return (\n        <>\n            <Button\n                className={classes.inputField}\n                startIcon={!showNotesInput ? <EditIcon /> : <RemoveIcon />}\n                onClick={toggleShowNotesInput}\n            >\n                Notes\n            </Button>\n            <Collapse in={showNotesInput} timeout='auto' style={{ width: '100%' }}>\n                <div className={classes.form}>\n                    <TextField\n                        className={classes.inputField}\n                        multiline\n                        maxRows={4}\n                        variant='outlined'\n                        label='Notes'\n                        value={notes}\n                        onChange={handleNotesChange}\n                    />\n                </div>\n            </Collapse>\n\n        </>\n    );\n}","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\ninterface AddVehicleButtonProps {\n    addVehicleState: AddVehicleState;\n    addVehicleClick: () => void;\n    className?: string;\n};\nexport default function AddVehicleButton(props: AddVehicleButtonProps): React.ReactElement {\n    const { addVehicleState, addVehicleClick, className } = props;\n    const { stockOkay, year, make, model, stage, personPlace, addVehicleStatus } = addVehicleState;\n\n    if (addVehicleStatus === 'loading') {\n        return <CircularProgress style={{ width: '25px', margin: 'auto' }} />;\n    }\n\n    if (stockOkay && year && make.id && model.id && stage.id && personPlace.id) {\n        return (\n            <FormControl className={className ? className : ''}>\n                <Button variant='contained' color='primary' onClick={addVehicleClick}>\n                    ADD\n                </Button>\n            </FormControl>\n        );\n    }\n\n    return (\n        <FormControl className={className ? className : ''}>\n            <Button variant='contained' color='primary' disabled>ADD</Button>\n        </FormControl>\n    );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport AddIcon from '@mui/icons-material/Add';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        color: theme.titleColor.darkBlue,\n    },\n    dialog: {\n        padding: 10,\n        textAlign: 'center',\n        maxWidth: 500,\n    },\n    button: {\n        width: 120,\n        margin: 5,\n    },\n}));\n\ninterface AddVehicleSuccessDialogProps {\n    open: boolean;\n    addVehicleState: AddVehicleState;\n};\nexport default function AddVehicleSuccessDialog(props: AddVehicleSuccessDialogProps): React.ReactElement {\n    const classes = useStyles();\n    const history = useHistory();\n    const { open, addVehicleState } = props;\n    const { setAddVehicleStatus, addedVehicle } = addVehicleState;\n\n    const handleAnotherClick = () => {\n        setAddVehicleStatus('');\n        history.push('/add-vehicle');\n    };\n\n    const handleDoneClick = () => {\n        setAddVehicleStatus('');\n        history.push('/all-vehicles/active/asc/10/first/0');\n    };\n\n    return (\n        <Dialog aria-labelledby=\"add-vehicle-dialog\" open={open} disableEscapeKeyDown>\n            <div className={classes.dialog}>\n                <DialogTitle id=\"add-vehicle-dialog\" className={classes.title}>Successfully Added:</DialogTitle>\n                {addedVehicle ? <VehicleInfo vehicle={addedVehicle} variant='subtitle1' /> : <></>}\n                <br></br>\n                <Divider />\n                <Typography variant=\"subtitle1\">What next?</Typography>\n                <Button onClick={handleAnotherClick} className={classes.button} color='primary' startIcon={<AddIcon />} variant='outlined' size='small'>ANOTHER</Button>\n                <Button onClick={handleDoneClick} className={classes.button} color='primary' variant='outlined' size='small'>DONE</Button>\n            </div>\n        </Dialog >\n    );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport DialogTitle from '@mui/material/DialogTitle';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// types\nimport { AddVehicleState } from '../../types/Vehicle';\n\nconst useStyles = makeStyles(theme => ({\n  title: {\n    color: theme.titleColor.darkBlue,\n  },\n  dialog: {\n    padding: 10,\n    textAlign: 'center',\n    maxWidth: 500,\n  },\n  button: {\n    width: 120,\n    margin: 5,\n  },\n}));\n\ninterface AddVehicleFailureDialogProps {\n  open: boolean;\n  addVehicleClick: () => void;\n  addVehicleState: AddVehicleState;\n};\nexport default function AddVehicleFailureDialog(props: AddVehicleFailureDialogProps): React.ReactElement {\n  const classes = useStyles();\n  const history = useHistory();\n  const { open, addVehicleClick, addVehicleState } = props;\n  const { setAddVehicleStatus } = addVehicleState;\n\n  const handleDoneClick = () => {\n    setAddVehicleStatus('');\n    history.push('/all-vehicles/active/asc/10/first/0');\n  };\n\n  return (\n    <Dialog aria-labelledby=\"add-vehicle-dialog\" open={open}>\n      <div className={classes.dialog}>\n        <DialogTitle id=\"add-vehicle-dialog\" className={classes.title}>Failed to Add Vehicle</DialogTitle>\n        <br></br>\n        <Divider />\n        <Typography variant=\"subtitle1\">What next?</Typography>\n        <Button className={classes.button} onClick={handleDoneClick} variant='outlined' size='small'>CANCEL</Button>\n        <Button className={classes.button} onClick={addVehicleClick} variant='outlined' size='small'>TRY AGAIN</Button>\n      </div>\n    </Dialog >\n  );\n}","// react\nimport { useState, useEffect } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport FormHelperText from '@mui/material/FormHelperText';\n// THIS PROJECT\n// components\nimport VehicleInfoInputs from './VehicleInfoInputs';\nimport StageAssignInputs from './StageAssignInputs';\nimport NotesInput from './NotesInput';\nimport AddVehicleButton from './AddVehicleButton';\nimport AddVehicleSuccessDialog from './AddVehicleSuccessDialog';\nimport AddVehicleFailureDialog from './AddVehicleFailureDialog';\nimport { FlexCenter } from '../common/flex';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// contexts\nimport { useAuthContext } from '../../contexts/AuthContext';\nimport { useDemoContext } from '../../contexts/DemoContext';\n// services\nimport { checkStock, addVehicle } from '../../services/vehicles';\n// types\nimport { DetailedVehicle, AddVehicleState, AddVehicleParam } from '../../types/Vehicle';\nimport { IdName } from '../../types/misc';\nimport { PostRequestStatus } from '../../types/ServiceRequests';\nimport { InitialStageParam } from '../../types/StageAssignment';\n\nconst useStyles = makeStyles((theme) => ({\n  form: {\n    marginTop: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 400px)',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    flexDirection: 'column',\n  },\n  inputField: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 300px)',\n  },\n}));\n\nexport default function AddVehicleInputs(): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const { userPreferences } = useAuthContext();\n  const { delay } = useDemoContext();\n  const { defaultStageAssignment } = userPreferences;\n\n  const [stock, setStock] = useState<string>('');\n  const [stockOkay, setStockOkay] = useState<boolean>(true);\n  const [stockError, setStockError] = useState<string>('');\n  const [year, setYear] = useState<string>('');\n  const [make, setMake] = useState<IdName>({ id: '', name: '' });\n  const [model, setModel] = useState<IdName>({ id: '', name: '' });\n  const [trim, setTrim] = useState<IdName>({ id: '', name: '' });\n  const [stage, setStage] = useState<IdName>({ id: '', name: '' });\n  const [personPlace, setPersonPlace] = useState<IdName>({ id: '', name: '' });\n  const [taskList, setTaskList] = useState<string[]>([]);\n  const [notes, setNotes] = useState<string>('');\n  const [addVehicleStatus, setAddVehicleStatus] = useState<PostRequestStatus>('');\n  const [addedVehicle, setAddedVehicle] = useState<DetailedVehicle | null>(null);\n\n  useEffect(() => {\n    if (!stage.id) setStage(defaultStageAssignment.stage);\n  }, [defaultStageAssignment, stage]);\n\n  // set default stage assignment Person / Place on first render. Have to do it here, \n  // because personPlace resets when stage is set (PersonPlaceSelect.tsx)\n  // causing it to go blank if we assign it when we initialize the personPlace state above\n  useEffect(() => {\n    if (stage === defaultStageAssignment.stage) {\n      if (addVehicleStatus === '' || addVehicleStatus === 'success') {\n        setPersonPlace(defaultStageAssignment.personPlace);\n      }\n    }\n  }, [defaultStageAssignment, stage, addVehicleStatus]);\n\n  const addVehicleState: AddVehicleState = {\n    stock, setStock,\n    stockOkay, setStockOkay,\n    stockError, setStockError,\n    year, setYear,\n    make, setMake,\n    model, setModel,\n    trim, setTrim,\n    stage, setStage,\n    personPlace, setPersonPlace,\n    taskList, setTaskList,\n    notes, setNotes,\n    addVehicleStatus, setAddVehicleStatus,\n    addedVehicle, setAddedVehicle,\n  };\n\n  const clearInputs = () => {\n    setStock('');\n    setStockOkay(true);\n    setStockError('');\n    setYear('');\n    setMake({ id: '', name: '' });\n    setModel({ id: '', name: '' });\n    setTrim({ id: '', name: '' });\n    setStage({ id: '', name: '' });\n    setPersonPlace({ id: '', name: '' });\n    setTaskList([]);\n    setNotes('');\n  };\n\n  const addVehicleClick = async () => {\n    setAddVehicleStatus('loading');\n    await delay();\n    checkStock(stock)\n      .then(result => {\n        if (mounted.current && result.data && result.data.exists) {\n          setAddVehicleStatus('');\n          setStockError('stk# already exists');\n        } else {\n          const vehicleParam: AddVehicleParam = {\n            stock: stock !== '' ? parseInt(stock) : 0,\n            year: parseInt(year),\n            make,\n            model,\n            trim,\n            notes: notes ? notes : '',\n          };\n          const initialStageParam: InitialStageParam = {\n            stage,\n            personPlace,\n            tasks: taskList\n          };\n          addVehicle(vehicleParam, initialStageParam)\n            .then(result => {\n              mounted.current && setAddVehicleStatus(result.status);\n              if (result.status === 'success') {\n                mounted.current && setAddedVehicle(result.doc);\n                clearInputs();\n              };\n              if (result.status === 'failed') {\n                console.error(result);\n              };\n            }, e => {\n              mounted.current && setAddVehicleStatus('failed');\n              console.error(e);\n            });\n        }\n      }, e => {\n        mounted.current && setAddVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const [openSuccessDialog, setOpenSuccessDialog] = useState<boolean>(false);\n\n  useEffect(() => {\n    addVehicleStatus === 'success' ? setOpenSuccessDialog(true) : setOpenSuccessDialog(false);\n  }, [addVehicleStatus, addedVehicle]);\n\n  const [openFailureDialog, setOpenFailureDialog] = useState<boolean>(false);\n\n  useEffect(() => {\n    addVehicleStatus === 'failed' ? setOpenFailureDialog(true) : setOpenFailureDialog(false);\n  }, [addVehicleStatus]);\n\n  return (\n    <>\n      <form autoComplete='off'>\n        <FlexCenter flexDirection='column'>\n          <FormHelperText>*required field</FormHelperText>\n          <VehicleInfoInputs mounted={mounted} addVehicleState={addVehicleState} classes={classes} />\n          <StageAssignInputs mounted={mounted} addVehicleState={addVehicleState} classes={classes} />\n          <NotesInput mounted={mounted} addVehicleState={addVehicleState} classes={classes} />\n          <AddVehicleButton className={classes.inputField} addVehicleState={addVehicleState} addVehicleClick={addVehicleClick} />\n          <AddVehicleSuccessDialog open={openSuccessDialog} addVehicleState={addVehicleState} />\n          <AddVehicleFailureDialog open={openFailureDialog} addVehicleClick={addVehicleClick} addVehicleState={addVehicleState} />\n        </FlexCenter>\n      </form>\n    </>\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport AddIcon from '@mui/icons-material/Add';\n// THIS PROJECT\n// components\nimport { SmallCard, SmallContent, ContentHeader, IconContentTitle, ContentPaper } from '../common/cardContent';\nimport Divider from '@mui/material/Divider';\nimport AddVehicleInputs from './AddVehicleInputs';\n\nconst useStyles = makeStyles(theme => ({\n    addVehicle: {\n        margin: 'auto',\n    }\n}));\n\nexport default function AddVehicle(): React.ReactElement {\n    const classes = useStyles();\n\n    return (\n        <SmallCard className={classes.addVehicle}>\n            <SmallContent>\n                <ContentHeader>\n                    <IconContentTitle icon={<AddIcon color='primary' />} variant='h5'>Add Vehicle</IconContentTitle>\n                    <Divider />\n                </ContentHeader>\n                <ContentPaper>\n                    <AddVehicleInputs />\n                </ContentPaper>\n            </SmallContent>\n        </SmallCard>\n    );\n}","// material-ui\nimport Divider from '@mui/material/Divider';\nimport Skeleton from '@mui/material/Skeleton';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader } from '../common/cardContent';\n\nexport default function GetVehicleLoading(): React.ReactElement {\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <Skeleton />\n                    <Skeleton />\n                </ContentHeader>\n                <Divider />\n                <Skeleton variant=\"rectangular\" height={300} />\n            </LargeContent>\n        </LargeCard>\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport IconButton from '@mui/material/IconButton';\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\n// THIS PROJECT\n// services\nimport { updateVehicle, sellVehicle } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { VehicleDetailState } from '../../types/Vehicle';\nimport { PostRequestStatus } from '../../types/ServiceRequests';\n\ninterface ActionMenuProps {\n    vehicleDetailState: VehicleDetailState;\n    mounted: React.MutableRefObject<boolean>;\n};\nexport default function ActionMenu(props: ActionMenuProps): React.ReactElement {\n    const { delay } = useDemoContext();\n    const { vehicleDetailState, mounted } = props;\n    const { vehicle, setVehicle, setUpdateVehicleStatus } = vehicleDetailState;\n\n    const [anchorMenu, setAnchorMenu] = useState<null | HTMLElement>(null);\n\n    const handleMenuClick = (event: React.MouseEvent<HTMLButtonElement>) => {\n        setAnchorMenu(event.currentTarget);\n    };\n\n    const handleMenuClose = () => {\n        setAnchorMenu(null);\n    };\n\n    const trashVehicle = async () => {\n        setUpdateVehicleStatus('loading');\n        await delay();\n        vehicle && updateVehicle(vehicle.id, { status: 'trash' })\n            .then(result => {\n                mounted.current && setUpdateVehicleStatus(result.status as PostRequestStatus);\n                result.status === 'success' && mounted.current && setVehicle(result.doc);\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setUpdateVehicleStatus('failed');\n                console.error(e);\n            });\n    };\n\n    const sellVehicleClick = async () => {\n        setUpdateVehicleStatus('loading');\n        await delay();\n        vehicle && sellVehicle(vehicle.id, vehicle.currentStage.id, Date.now())\n            .then(result => {\n                mounted.current && setUpdateVehicleStatus(result.status as PostRequestStatus);\n                if (result.status === 'success' && mounted.current) {\n                    setVehicle(result.doc);\n                }\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setUpdateVehicleStatus('failed');\n                console.error(e);\n            });\n    };\n\n    return (\n        <div>\n            <IconButton\n                aria-controls='action-menu'\n                aria-haspopup='true'\n                onClick={handleMenuClick}\n                size=\"large\">\n                <MoreVertIcon />\n            </IconButton>\n            <Menu\n                id='action-menu'\n                anchorEl={anchorMenu}\n                keepMounted\n                open={Boolean(anchorMenu)}\n                onClose={handleMenuClose}\n            >\n                <MenuItem onClick={trashVehicle}>\n                    <ListItemIcon><DeleteIcon /> </ListItemIcon>\n                    <ListItemText>Trash</ListItemText>\n                </MenuItem>\n                {vehicle && vehicle.status !== 'sold' &&\n                    <MenuItem onClick={sellVehicleClick}>\n                        <ListItemIcon><AttachMoneyIcon /> </ListItemIcon>\n                        <ListItemText>Sell</ListItemText>\n                    </MenuItem>}\n            </Menu>\n        </div>\n    );\n}","// material-ui\nimport withStyles from '@mui/styles/withStyles';\nimport Tab from '@mui/material/Tab';\n\nconst DarkTab = withStyles({\n    root: {\n        '&$selected': {\n            backgroundColor: '#F5F5F5',\n        }\n    },\n    selected: {},\n})(Tab);\n\nexport default DarkTab;","// react\nimport { useState } from 'react';\n// material-ui\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\n// THIS PROJECT\n// services\nimport { assignStage } from '../../../../services/stages';\n// context\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { IdName } from '../../../../types/misc';\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface AssignStageButtonProps {\n    vehicleDetailState: VehicleDetailState;\n    assignStageState: {\n        stage: IdName;\n        personPlace: IdName;\n        taskList: string[];\n    };\n};\nexport default function AssignStageButton(props: AssignStageButtonProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { vehicleDetailState, assignStageState } = props;\n    const { stage, personPlace, taskList } = assignStageState;\n    const { mounted: pMounted, vehicle, setVehicle } = vehicleDetailState;\n    const vehicleId = vehicle?.id;\n    const previousStage = vehicle?.currentStage;\n    const dateOnLot = vehicle?.dateOnLot;\n\n    const [assignStageStatus, setAssignStageStatus] = useState<PostRequestStatus>('');\n\n    const assignStageClick = async () => {\n        setAssignStageStatus('loading');\n        await delay();\n        vehicleId && previousStage && assignStage({\n            vehicleId,\n            stage,\n            personPlace,\n            tasks: taskList,\n            dateAssigned: Date.now(),\n            dateOnLot\n        }, previousStage).then(result => {\n            mounted.current && setAssignStageStatus(result.status);\n            result.status === 'success' && pMounted.current && setVehicle(result.doc);\n            result.status === 'failed' && console.error(result);\n        }, e => {\n            mounted.current && setAssignStageStatus('failed');\n            console.error(e);\n        });\n    };\n\n    const assignButton = (\n        <Button onClick={assignStageClick} variant='contained' color='primary' disableElevation>Assign Now</Button>\n    );\n\n    const disabledAssignButton = (\n        <Button variant='contained' color='primary' disableElevation disabled>Assign Now</Button>\n    );\n\n    return (\n        <FormControl>\n            {assignStageStatus === 'loading'\n                ? <CircularProgress size={50} />\n                : vehicleId && stage.name && personPlace.name\n                    ? assignButton\n                    : disabledAssignButton}\n        </FormControl>\n    );\n}","// react\nimport { useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport StageSelect from '../../../common/stages/StageSelect';\nimport PersonPlaceSelect from '../../../common/stages/PersonPlaceSelect';\nimport TaskListInput from '../../../common/stages/TaskListInput';\nimport AssignStageButton from './AssignStageButton';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { IdName } from '../../../../types/misc';\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n    inputField: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        margin: 'auto',\n        width: 'clamp(200px, 100%, 300px)',\n    },\n}));\n\ninterface AssignStageProps {\n    vehicleDetailState: VehicleDetailState;\n};\nexport default function AssignStage(props: AssignStageProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const classes = useStyles();\n    const { vehicleDetailState } = props;\n\n    const [stage, setStage] = useState<IdName>({ id: '', name: '' });\n    const [personPlace, setPersonPlace] = useState<IdName>({ id: '', name: '' });\n    const [taskList, setTaskList] = useState<string[]>([]);\n    const assignStageState = { stage, personPlace, taskList };\n\n    // automatically assigning the default stage assignment when leaving page without having assigned stage\n    // is handled in the parent VehicleDetails.tsx\n\n    return (\n        <>\n            <StageSelect\n                className={classes.inputField}\n                parent={{ mounted, stage, setStage }}\n                allowAddStage\n            />\n            <PersonPlaceSelect\n                className={classes.inputField}\n                parent={{ mounted, stage, personPlace, setPersonPlace }}\n                allowAddPersonPlace\n            />\n            <TaskListInput\n                className={classes.inputField}\n                taskList={taskList}\n                setTaskList={setTaskList}\n            />\n            <br></br>\n            <AssignStageButton\n                vehicleDetailState={vehicleDetailState}\n                assignStageState={assignStageState}\n            />\n        </>\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport ButtonGroup from '@mui/material/ButtonGroup';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Box from '@mui/material/Box';\nimport AttachMoneyIcon from '@mui/icons-material/AttachMoney';\n// THIS PROJECT\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// services\nimport { sellVehicle } from '../../../../services/vehicles';\nimport { completeStageAssignment } from '../../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\nimport CenteredError from '../../../common/CenteredError';\n\nconst useStyles = makeStyles((theme) => ({\n    sellButton: {\n        width: 125,\n        backgroundColor: theme.palette.success.main,\n        color: 'white',\n        '&:hover': {\n            backgroundColor: theme.palette.success.dark,\n        },\n    },\n    reassignButton: {\n        width: 125,\n    },\n}));\n\ninterface SellVehicleButtonsProps {\n    vehicleDetailState: VehicleDetailState;\n};\nexport default function SellVehicleButtons(props: SellVehicleButtonsProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n    const { vehicleDetailState } = props;\n    const { mounted: pMounted, vehicle, setVehicle } = vehicleDetailState;\n    const stageAssignmentId = vehicle?.currentStage.id;\n\n    const [sellVehicleStatus, setSellVehicleStatus] = useState<PostRequestStatus>('');\n    const [completeStageStatus, setCompleteStageStatus] = useState<PostRequestStatus>('');\n\n    const reassignClick = async () => {\n        setCompleteStageStatus('loading');\n        await delay();\n        stageAssignmentId && completeStageAssignment(stageAssignmentId, Date.now())\n            .then(result => {\n                mounted.current && setCompleteStageStatus(result.status);\n                if (result.status === 'success') {\n                    pMounted && result.data && setVehicle(result.data);\n                }\n                if (result.status === 'failed') {\n                    console.error(result);\n                }\n            }, e => {\n                mounted.current && setCompleteStageStatus('failed');\n                console.error(e);\n            });\n    };\n\n    const sellVehicleClick = async () => {\n        setSellVehicleStatus('loading');\n        await delay();\n        vehicle && sellVehicle(vehicle.id, vehicle.currentStage.id, Date.now())\n            .then(result => {\n                mounted.current && setSellVehicleStatus(result.status as PostRequestStatus);\n                result.status === 'success' && pMounted.current && setVehicle(result.doc);\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setSellVehicleStatus('failed');\n                console.error(e);\n            });\n    };\n\n    if (completeStageStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to re-assign vehicle' retryAction={reassignClick} />;\n    };\n\n    if (sellVehicleStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to sell vehicle' retryAction={sellVehicleClick} />;\n    };\n\n    return (\n        <Box m={1}>\n            {sellVehicleStatus === 'loading' || completeStageStatus === 'loading'\n                ? <CircularProgress size={50} />\n                : stageAssignmentId\n                && <ButtonGroup>\n                    <Button\n                        className={classes.reassignButton}\n                        onClick={reassignClick}\n                        variant='outlined'\n                    >\n                        re-assign\n                    </Button>\n                    <Button\n                        className={classes.sellButton}\n                        startIcon={<AttachMoneyIcon />}\n                        onClick={sellVehicleClick}\n                        variant='contained'\n                        disableElevation\n                    >\n                        Sell\n                    </Button>\n                </ButtonGroup>}\n        </Box>\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n// THIS PROJECT\n// components\nimport CenteredError from '../../../common/CenteredError';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// services\nimport { completeStageAssignment } from '../../../../services/stages';\n// contexts\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface CompleteStageButtonProps {\n    vehicleDetailState: VehicleDetailState;\n}\nexport default function CompleteStageButton(props: CompleteStageButtonProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { vehicleDetailState } = props;\n    const { mounted: pMounted, vehicle, setVehicle } = vehicleDetailState;\n    const stageAssignmentId = vehicle?.currentStage.id;\n\n    const [completeStageStatus, setCompleteStageStatus] = useState<PostRequestStatus>('');\n\n    const completeStageClick = async () => {\n        setCompleteStageStatus('loading');\n        await delay();\n        stageAssignmentId && completeStageAssignment(stageAssignmentId, Date.now())\n            .then(result => {\n                mounted.current && setCompleteStageStatus(result.status);\n                if (result.status === 'success') {\n                    pMounted && result.data && setVehicle(result.data);\n                }\n                if (result.status === 'failed') {\n                    console.error(result);\n                }\n            }, e => {\n                mounted.current && setCompleteStageStatus('failed');\n                console.error(e);\n            });\n    };\n\n    if (completeStageStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to complete stage' retryAction={completeStageClick} />;\n    };\n\n    return (\n        <Box m={1}>\n            {completeStageStatus === 'loading'\n                ? <CircularProgress size={50} />\n                : stageAssignmentId\n                && <Button onClick={completeStageClick} variant='contained' color='primary' disableElevation>Complete</Button>}\n        </Box>\n    );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\n\nconst TabContent = styled(Box)(({\n    theme\n}) => ({\n    display: 'flex',\n    p: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    alignContent: 'start',\n    flexDirection: 'column',\n    margin: 'auto',\n    width: 'clamp(200px, 100%, 600px)',\n    minHeight: '200px',\n}));\n\nexport default TabContent;","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport { List, ListItem, ListItemText, ListItemIcon } from '@mui/material';\nimport ArrowRightRoundedIcon from '@mui/icons-material/ArrowRightRounded';\n// THIS PROJECT\n// components\nimport AssignStage from './AssignStage';\nimport SellVehicleButtons from './SellVehicleButtons';\nimport CompleteStageButton from './CompleteStageButton';\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport { FlexCenter } from '../../../common/flex';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n  sold: {\n    color: theme.palette.success.main,\n  },\n  content: {\n    width: 'clamp(200px, 100%, 500px)',\n  },\n  flexDivider: {\n    width: 'clamp(200px, 100%, 400px)',\n    height: 1,\n    margin: 'auto',\n    marginTop: 5\n  }\n}));\n\ninterface CurrentStageProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function CurrentStage(props: CurrentStageProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicleDetailState } = props;\n  const { vehicle } = vehicleDetailState;\n  const currentStage = vehicle?.currentStage;\n  const stage = currentStage?.stage.name;\n  const personPlace = currentStage?.personPlace.name;\n\n  const dateSoldDisplay = (vehicle?.dateSold && new Date(vehicle.dateSold));\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <FlexCenter flexDirection='column' className={classes.content}>\n          {vehicle?.status === 'sold'\n            ? <>\n              <Typography className={classes.sold} variant='h6'><strong>Sold</strong></Typography>\n              <Typography variant='subtitle1'>{dateSoldDisplay && dateSoldDisplay.toLocaleDateString()}</Typography>\n            </>\n            : currentStage?.status === 'complete'\n              ? <>\n                <Typography variant='h6' color='primary'><strong>Assign</strong></Typography>\n              </>\n              : <>\n                <Typography variant='h6' color='primary'><strong>{stage}</strong></Typography>\n                <Typography variant='h6'>{personPlace}</Typography>\n              </>\n          }\n          {vehicle?.status !== 'sold' && <Divider className={classes.flexDivider} flexItem />}\n        </FlexCenter>\n        {vehicle?.status === 'sold' ? <></>\n          : (stage === 'Assign' || currentStage?.status === 'complete')\n            ? <AssignStage vehicleDetailState={vehicleDetailState} />\n            : stage === 'For Sale'\n              ? <SellVehicleButtons vehicleDetailState={vehicleDetailState} />\n              // task list\n              : <>\n                {vehicle && vehicle.currentStage.tasks.length >= 1 && <FlexCenter sx={{ flexDirection: 'column', width: 'clamp(200px, 100%, 400px)' }}>\n                  <Typography sx={{ textAlign: 'center' }}>Tasks:</Typography>\n                  <List dense sx={{ paddingLeft: 3, paddingRight: 3 }}>\n                    {vehicle?.currentStage.tasks.map(task => <ListItem disablePadding key={task[0] + Math.random().toString()} sx={{ overflowWrap: 'break-word' }}>\n                      <ListItemIcon><ArrowRightRoundedIcon /></ListItemIcon>\n                      <ListItemText primary={task} />\n                    </ListItem>)}\n                  </List>\n                  <Divider flexItem />\n                </FlexCenter>}\n                <CompleteStageButton vehicleDetailState={vehicleDetailState} />\n              </>\n        }\n      </TabContent>\n    </ContentPaper >\n  );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Chip from '@mui/material/Chip';\nimport Paper from '@mui/material/Paper';\nimport HistoryIcon from '@mui/icons-material/History';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport VehicleChip from '../../../common/vehicles/VehicleChip';\nimport SoldVehicleChip from '../../../common/vehicles/SoldVehicleChip';\nimport FormatTime from '../../../common/FormatTime';\nimport { FlexSpaceEvenly } from '../../../common/flex';\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport { FlexCenter } from '../../../common/flex';\n// types\nimport { DetailedVehicle } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme) => ({\n  table: {\n    width: 'clamp(200px, 100%, 400px)',\n  },\n  chip: {\n    minWidth: 95,\n  },\n}));\n\ninterface DurationStatsProps {\n  vehicle: DetailedVehicle;\n};\nexport default function DurationStats(props: DurationStatsProps): React.ReactElement {\n  const classes = useStyles();\n  const { vehicle } = props;\n  const { status, currentStage, dateAdded, reconditionTime, forSaleTime, dateOnLot, totalSellTime } = vehicle;\n  const stage = currentStage.stage.name;\n\n  const reconditionTimeLabel = (reconditionTime\n    ? <FormatTime milliseconds={reconditionTime} />\n    : <FormatTime milliseconds={Date.now() - dateAdded} />);\n\n  const stageTimeLabel = (currentStage.completeTime\n    ? <FormatTime milliseconds={currentStage.completeTime} />\n    : <FormatTime milliseconds={Date.now() - currentStage.dateAssigned} />);\n\n  const onLotTimeLabel = (forSaleTime && <FormatTime milliseconds={forSaleTime} />);\n\n  const totalSellTimeLabel = (totalSellTime && <FormatTime milliseconds={totalSellTime} />);\n\n  return (\n    <ContentPaper>\n      <TabContent>\n        <FlexCenter style={{ gap: 10 }}>\n          <HistoryIcon color='primary' />\n          <Typography variant='h6' color='primary'><strong>Duration Statistics:</strong></Typography>\n        </FlexCenter>\n        <TableContainer component={Paper} className={classes.table}>\n          <Table aria-label=\"stats table\">\n            <TableBody>\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\" align=\"left\">Total Reconditioning:</TableCell>\n                <TableCell align='right'>\n                  <VehicleChip\n                    className={classes.chip}\n                    // change the color label based on whether reconditioning was ever complete\n                    // (made it For Sale, hence has a dateOnLot property)\n                    color={dateOnLot ? 'primary' : 'default'}\n                    label={reconditionTimeLabel}\n                  />\n                </TableCell>\n              </TableRow>\n              {status !== 'sold'\n                ? <TableRow>\n                  <TableCell component=\"th\" scope=\"row\" align=\"left\">{stage}:</TableCell>\n                  <TableCell align='right'>\n                    <VehicleChip\n                      className={classes.chip}\n                      color={currentStage.status === 'complete' ? 'primary'\n                        : currentStage.stage.name === 'Assign' ? 'secondary' : 'default'}\n                      label={stageTimeLabel}\n                    />\n                  </TableCell>\n                </TableRow>\n                : forSaleTime\n                  ? <TableRow >\n                    <TableCell component=\"th\" scope=\"row\" align=\"left\">For Sale:</TableCell>\n                    <TableCell align='right'>\n                      <VehicleChip\n                        className={classes.chip}\n                        color='primary'\n                        label={onLotTimeLabel}\n                      />\n                    </TableCell>\n                  </TableRow>\n                  : <></>}\n              {status === 'sold' && <TableRow >\n                <TableCell component=\"th\" scope=\"row\" align=\"left\">Total Time to Sell:</TableCell>\n                <TableCell align='right'>\n                  <SoldVehicleChip\n                    className={classes.chip}\n                    color='primary'\n                    label={totalSellTimeLabel}\n                  />\n                </TableCell>\n              </TableRow>}\n              <TableRow>\n                <TableCell align=\"right\" size='small' colSpan={2} >\n                  <FlexSpaceEvenly>\n                    <Chip label='incomplete' size='small' />\n                    <Chip label='complete' size='small' color='primary' />\n                  </FlexSpaceEvenly>\n                </TableCell>\n              </TableRow>\n            </TableBody>\n          </Table>\n        </TableContainer>\n      </TabContent>\n    </ContentPaper>\n  );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Tabs from '@mui/material/Tabs';\n// THIS PROJECT\n// components\nimport DarkTab from '../../../common/DarkTab';\nimport CurrentStage from './CurrentStage';\nimport DurationStats from './DurationStats';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n};\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`stage-tabpanel-${index}`}\n            aria-labelledby={`stage-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>{children}</div>\n            )}\n        </div>\n    );\n};\n\nfunction a11yProps(index: any) {\n    return {\n        id: `stage-tab-${index}`,\n        'aria-controls': `vehicle-tabpanel-${index}`,\n    };\n};\n\ninterface StageTabsProps {\n    vehicleDetailState: VehicleDetailState;\n};\nexport default function StageTabs(props: StageTabsProps): React.ReactElement {\n    const { vehicleDetailState } = props;\n    const { vehicle } = vehicleDetailState;\n    const [tabValue, setTabValue] = useState<'current' | 'stats'>('current');\n\n    const changeTab = (event: React.ChangeEvent<{}>, newValue: 'current' | 'stats') => {\n        setTabValue(newValue);\n    };\n\n    return (\n        <div>\n            <Tabs\n                centered\n                value={tabValue}\n                indicatorColor='primary'\n                textColor='primary'\n                onChange={changeTab}\n                aria-label='current stage navigation'\n            >\n                <DarkTab label='Current Stage' value='current' {...a11yProps('current')} />\n                <DarkTab label='Duration Stats' value='stats' {...a11yProps('stats')} />\n            </Tabs>\n            <TabPanel value={tabValue} index='current'>\n                <CurrentStage vehicleDetailState={vehicleDetailState} />\n            </TabPanel>\n            <TabPanel value={tabValue} index='stats'>\n                {vehicle && <DurationStats vehicle={vehicle} />}\n            </TabPanel>\n        </div>\n    );\n}","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { FlexSpaceBtwn } from '../../../common/flex';\n// services\nimport { checkStock, updateVehicle as updateVehicleService } from '../../../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { EditVehicleState } from '../../../../types/Vehicle';\nimport { Set } from '../../../../types/misc';\n\ninterface EditInfoButtonsProps {\n  editVehicleState: EditVehicleState;\n  setEdit: Set<boolean>;\n  className?: string;\n};\nexport default function EditInfoButtons(props: EditInfoButtonsProps): React.ReactElement {\n  const { editVehicleState, setEdit, className } = props;\n  const { delay } = useDemoContext();\n  const {\n    vehicleDetailsMounted,\n    mounted,\n    vehicleId,\n    stock,\n    stockOkay,\n    setStockError,\n    editStock,\n    year, editYear,\n    make, editMake,\n    model, editModel,\n    trim, editTrim,\n    dateAdded, editDateAdded,\n    dateSold, editDateSold,\n    editVehicleStatus, setEditVehicleStatus,\n    setVehicle\n  } = editVehicleState;\n\n  const updateVehicle = () => {\n    const updateVehicleDoc = {\n      stock: parseInt(editStock),\n      year: parseInt(editYear),\n      make: editMake,\n      model: editModel,\n      trim: editTrim,\n      dateAdded: editDateAdded,\n      dateSold: dateSold && editDateSold,\n    };\n    updateVehicleService(vehicleId, updateVehicleDoc)\n      .then(result => {\n        mounted.current && setEditVehicleStatus(result.status);\n        if (result.status === 'success') {\n          vehicleDetailsMounted.current && setVehicle(result.doc);\n          mounted && setEdit(false);\n        };\n        result.status === 'failed' && console.error(result);\n      }, e => {\n        mounted.current && setEditVehicleStatus('failed');\n        console.error(e);\n      });\n  };\n\n  const updateVehicleClick = async () => {\n    setEditVehicleStatus('loading');\n    await delay();\n    if (stock === editStock) {\n      updateVehicle();\n    } else {\n      checkStock(editStock)\n        .then(result => {\n          if (mounted.current && result.data && result.data.exists) {\n            setEditVehicleStatus('');\n            setStockError('stk# already exists');\n          } else {\n            updateVehicle();\n          };\n        }, e => {\n          mounted.current && setEditVehicleStatus('failed');\n          console.error(e);\n        });\n    };\n  };\n\n  const cancelClick = () => setEdit(false);\n\n  let updateButton: JSX.Element;\n\n  const enabledUpdateButton = (\n    <Button variant='contained' color='primary' onClick={updateVehicleClick}>\n      Update\n    </Button>\n  );\n\n  const disabledUpdateButton = (\n    <Button variant='contained' color='primary' disabled>\n      Update\n    </Button>\n  );\n\n  if (editVehicleStatus === 'loading') {\n    updateButton = <CircularProgress size={25} />;\n  } else if (dateSold) {\n    if (\n      stock !== editStock\n      || year !== editYear\n      || make !== editMake\n      || model !== editModel\n      || trim !== editTrim\n      || dateAdded !== editDateAdded\n      || dateSold !== editDateSold\n    ) {\n      if (stockOkay && editYear && editMake.id && editModel.id && editDateAdded) {\n        updateButton = enabledUpdateButton;\n      } else {\n        updateButton = disabledUpdateButton;\n      };\n    } else {\n      updateButton = disabledUpdateButton;\n    };\n  } else if (\n    stock !== editStock\n    || year !== editYear\n    || make !== editMake\n    || model !== editModel\n    || trim !== editTrim\n    || dateAdded !== editDateAdded\n  ) {\n    if (stockOkay && editYear && editMake.id && editModel.id && editDateAdded) {\n      updateButton = enabledUpdateButton;\n    } else {\n      updateButton = disabledUpdateButton;\n    };\n  } else {\n    updateButton = disabledUpdateButton;\n  };\n\n  return (\n    <FlexSpaceBtwn className={className ? className : ''}>\n      <Button variant='contained' onClick={cancelClick}>Cancel</Button>\n      {updateButton}\n    </FlexSpaceBtwn>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// date-fns\nimport 'date-fns';\n// material-ui\n// import { KeyboardDatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport { LocalizationProvider } from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport DatePicker from '@mui/lab/DatePicker';\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\n// THIS PROJECT\n// components\nimport StockField from '../../../common/vehicles/StockField';\nimport YearSelect from '../../../common/vehicles/YearSelect';\nimport MakeSelect from '../../../common/vehicles/MakeSelect';\nimport ModelSelect from '../../../common/vehicles/ModelSelect';\nimport TrimSelect from '../../../common/vehicles/TrimSelect';\nimport CenteredError from '../../../common/CenteredError';\nimport EditInfoButtons from './EditInfoButtons';\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { DetailedVehicle, EditStockState, EditVehicleState } from '../../../../types/Vehicle';\nimport { IdName, Set } from '../../../../types/misc';\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface EditInfoProps {\n    vehicleDetailsMounted: React.MutableRefObject<boolean>;\n    vehicle: DetailedVehicle;\n    setVehicle: Set<DetailedVehicle | null>;\n    setEdit: Set<boolean>;\n    inputFieldStyle?: string;\n}\nexport default function EditInfo(props: EditInfoProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { vehicleDetailsMounted, vehicle, setVehicle, setEdit, inputFieldStyle } = props;\n    const { id, stock, year, make, model, trim, dateAdded, dateSold } = vehicle;\n\n    const [editStock, setEditStock] = useState<string>(stock.toString());\n    const [stockOkay, setStockOkay] = useState<boolean>(true);\n    const [stockError, setStockError] = useState<string>('');\n    const [editYear, setEditYear] = useState<string>(year.toString());\n    const [editMake, setEditMake] = useState<IdName>(make);\n    const [editModel, setEditModel] = useState<IdName>({ id: '', name: '' });\n    const [editTrim, setEditTrim] = useState<IdName>({ id: '', name: '' });\n    const [editDateAdded, setEditDateAdded] = useState<number>(dateAdded);\n    const [editDateSold, setEditDateSold] = useState<number>(dateSold ? dateSold : 0);\n    const [editVehicleStatus, setEditVehicleStatus] = useState<PostRequestStatus>('');\n\n    // For setting the initial editModel value (since editMake must be set first)\n    // and clearing editModel when the editMake selection is changed\n    useEffect(() => {\n        if (editMake === make) {\n            setEditModel(model);\n        } else {\n            setEditModel({ id: '', name: '' });\n        };\n    }, [editMake, make, model]);\n\n    // For setting the initial editTrim value (since editModel must be set first)\n    // and clearing editTrim when the editModel selection is changed\n    useEffect(() => {\n        if (editModel === model) {\n            setEditTrim(trim);\n        } else {\n            setEditTrim({ id: '', name: '' });\n        };\n    }, [editModel, model, trim]);\n\n    const editStockState: EditStockState = {\n        stock: editStock, setStock: setEditStock,\n        stockOkay, setStockOkay,\n        stockError, setStockError,\n        addEditVehicleStatus: editVehicleStatus,\n    };\n\n    const editVehicleState: EditVehicleState = {\n        vehicleDetailsMounted,\n        mounted,\n        vehicleId: id,\n        stock: stock.toString(),\n        editStock,\n        stockOkay, setStockOkay,\n        setStockError,\n        year: year.toString(),\n        editYear,\n        make, editMake,\n        model, editModel,\n        trim, editTrim,\n        dateAdded, editDateAdded,\n        dateSold, editDateSold,\n        editVehicleStatus, setEditVehicleStatus,\n        setVehicle,\n    };\n\n    const handleDateAddedChange = (date: Date | null) => {\n        date && setEditDateAdded(date.getTime());\n    };\n\n    const handleDateSoldChange = (date: Date | null) => {\n        date && setEditDateSold(date.getTime());\n    };\n\n    if (editVehicleStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to update vehicle info' />;\n    };\n\n    return (\n        <>\n            <StockField className={inputFieldStyle} editStockState={editStockState} />\n            <YearSelect className={inputFieldStyle} year={editYear} setYear={setEditYear} />\n            <MakeSelect\n                className={inputFieldStyle}\n                parent={{ mounted, make: editMake, setMake: setEditMake }}\n                allowAddMake\n            />\n            <ModelSelect\n                className={inputFieldStyle}\n                parent={{ mounted, make: editMake, model: editModel, setModel: setEditModel }}\n                allowAddModel\n            />\n            <TrimSelect\n                className={inputFieldStyle}\n                parent={{ mounted, make: editMake, model: editModel, trim: editTrim, setTrim: setEditTrim }}\n                allowAddTrim\n            />\n            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                {/*Edit Date Added Input */}\n                <FormControl className={inputFieldStyle}>\n                    <DatePicker\n                        label='Date Added'\n                        value={editDateAdded}\n                        onChange={handleDateAddedChange}\n                        renderInput={(params) => <TextField {...params} />}\n                        maxDate={new Date()}\n                    />\n                </FormControl>\n                {/* Edit Date Sold Input */}\n                {dateSold && dateSold > 0\n                    && <FormControl className={inputFieldStyle}>\n                        <DatePicker\n                            label='Date Sold'\n                            value={editDateSold}\n                            onChange={handleDateSoldChange}\n                            renderInput={(params) => <TextField {...params} />}\n                            minDate={new Date(editDateAdded)}\n                            maxDate={new Date()}\n                        />\n                    </FormControl>}\n            </LocalizationProvider>\n            <EditInfoButtons className={inputFieldStyle} editVehicleState={editVehicleState} setEdit={setEdit} />\n        </>\n    );\n}","// material-ui\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport { styled } from '@mui/material/styles';\n\nconst ReadonlyTextField = styled(TextField)<TextFieldProps>(({ theme }) => ({\n  '&.MuiTextField-root': {\n    '& .Mui-disabled': {\n      WebkitTextFillColor: 'black',\n      '& .label': {\n        WebkitTextFillColor: 'gray'\n      },\n    },\n  }\n}));\n\nexport default ReadonlyTextField;\n\n// text field still needs to be 'disabled' when used in order to become 'readonly'\n// the label must be assigne a <span /> element with a className of 'label'\n// e.g. <span className='label'>label</span>","// THIS PROJECT\n// components\nimport ReadonlyTextField from '../../../common/ReadonlyTextField';\n// types\nimport { DetailedVehicle } from '../../../../types/Vehicle';\n\ninterface ReadonlyInfoProps {\n  vehicle: DetailedVehicle;\n  inputFieldStyle?: string;\n};\nexport default function ReadonlyInfoTab(props: ReadonlyInfoProps): React.ReactElement {\n  const { vehicle, inputFieldStyle } = props;\n  const stock = vehicle.stock;\n  const year = vehicle.year;\n  const make = vehicle.make.name;\n  const model = vehicle.model.name;\n  const trim = vehicle.trim.name;\n  const dateAdded = new Date(vehicle.dateAdded).toLocaleDateString('en-us', { year: 'numeric', month: '2-digit', day: '2-digit' });\n  const dateSold = vehicle.dateSold && new Date(vehicle.dateSold).toLocaleDateString('en-us', { year: 'numeric', month: '2-digit', day: '2-digit' });\n\n  return (\n    <>\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Stock #</span>} value={stock > 0 ? stock : ' '} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Year</span>} value={year} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Make</span>} value={make} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Model</span>} value={model} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Trim</span>} value={trim ? trim : ' '} />\n      <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Date Added</span>} value={dateAdded} />\n      {vehicle.dateSold && vehicle.dateSold > 0\n        && <ReadonlyTextField disabled className={inputFieldStyle} label={<span className={'label'}>Date Sold</span>} value={dateSold} />}\n    </>\n  );\n}","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\n// THIS PROJECT\n// components\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport EditInfo from './EditInfo';\nimport ReadonlyInfo from './ReadonlyInfo';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    editButtonDiv: {\n        width: '100%',\n        marginTop: -25,\n        marginBottom: -10,\n    },\n    editButton: {\n        float: 'right',\n    },\n\n    inputField: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        margin: 'auto',\n        width: 'clamp(200px, 100%, 300px)',\n    },\n}));\n\ninterface InfoTabProps {\n    vehicleDetailState: VehicleDetailState;\n};\nexport default function InfoTab(props: InfoTabProps): React.ReactElement {\n    const classes = useStyles();\n    const { vehicleDetailState } = props;\n    const { mounted, vehicle, setVehicle, setDisableDoneButton } = vehicleDetailState;\n    const [edit, setEdit] = useState<boolean>(false);\n\n    const handleEditClick = () => {\n        edit ? setEdit(false) : setEdit(true);\n    };\n\n    useEffect(() => {\n        edit ? setDisableDoneButton(true) : setDisableDoneButton(false);\n        return () => setDisableDoneButton(false);\n    }, [edit, setDisableDoneButton]);\n\n    return (\n        <ContentPaper>\n            <TabContent>\n                <div className={classes.editButtonDiv} >\n                    <IconButton\n                        aria-label='edit'\n                        className={classes.editButton}\n                        onClick={handleEditClick}\n                        color={edit ? 'primary' : 'inherit'}\n                        size=\"large\">\n                        <EditIcon />\n                    </IconButton>\n                </div>\n                {edit\n                    ? vehicle && <EditInfo\n                        vehicleDetailsMounted={mounted}\n                        vehicle={vehicle}\n                        setVehicle={setVehicle}\n                        setEdit={setEdit}\n                        inputFieldStyle={classes.inputField}\n                    />\n                    : vehicle && <ReadonlyInfo vehicle={vehicle} inputFieldStyle={classes.inputField} />}\n            </TabContent>\n        </ContentPaper>\n    );\n}","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { FlexSpaceBtwn } from '../../../common/flex';\n// services\nimport { updateVehicle } from '../../../../services/vehicles';\n// contexts \nimport { useDemoContext } from '../../../../contexts/DemoContext';\n// types\nimport { EditNotesState } from '../../../../types/Vehicle';\nimport { Set } from '../../../../types/misc';\n\ninterface EditNotesButtonsProps {\n    editNotesState: EditNotesState;\n    setEdit: Set<boolean>;\n    className?: string;\n};\nexport default function EditNotesButtons(props: EditNotesButtonsProps): React.ReactElement {\n    const { editNotesState, setEdit, className } = props;\n    const { delay } = useDemoContext();\n\n    const {\n        vehicleDetailsMounted,\n        mounted,\n        vehicleId,\n        notes,\n        editNotes,\n        editNotesStatus, setEditNotesStatus,\n        setVehicle\n    } = editNotesState;\n\n    const updateNotes = async () => {\n        setEditNotesStatus('loading');\n        await delay();\n        const updateVehicleDoc = { notes: editNotes };\n        updateVehicle(vehicleId, updateVehicleDoc)\n            .then(result => {\n                mounted.current && setEditNotesStatus(result.status);\n                if (result.status === 'success') {\n                    vehicleDetailsMounted.current && setVehicle(result.doc);\n                    mounted && setEdit(false);\n                };\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setEditNotesStatus('failed');\n                console.error(e);\n            });\n    };\n\n    const cancelClick = () => setEdit(false);\n\n    let updateButton: JSX.Element;\n\n    const enabledUpdateButton = (\n        <Button variant='contained' color='primary' onClick={updateNotes}>\n            Update\n        </Button>\n    );\n\n    const disabledUpdateButton = (\n        <Button variant='contained' color='primary' disabled>\n            Update\n        </Button>\n    );\n\n    editNotesStatus === 'loading'\n        ? updateButton = <CircularProgress size={25} />\n        : notes !== editNotes\n            ? updateButton = enabledUpdateButton\n            : updateButton = disabledUpdateButton;\n\n    return (\n        <FlexSpaceBtwn className={className ? className : ''}>\n            <Button variant='contained' onClick={cancelClick}>Cancel</Button>\n            {updateButton}\n        </FlexSpaceBtwn>\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport FormControl from '@mui/material/FormControl';\nimport TextField from '@mui/material/TextField';\n// THIS PROJECT\n// components\nimport EditNotesButtons from './EditNotesButtons';\nimport CenteredError from '../../../common/CenteredError';\n// hooks\nimport { useCheckMounted } from \"../../../../hooks\";\n// types\nimport { PostRequestStatus } from '../../../../types/ServiceRequests';\nimport { Set } from \"../../../../types/misc\";\nimport { DetailedVehicle, EditNotesState } from \"../../../../types/Vehicle\";\n\ninterface EditNotesProps {\n    vehicleDetailsMounted: React.MutableRefObject<boolean>;\n    vehicle: DetailedVehicle;\n    setVehicle: Set<DetailedVehicle | null>;\n    setEdit: Set<boolean>;\n    inputFieldStyle?: string;\n};\nexport default function EditNotes(props: EditNotesProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { vehicleDetailsMounted, vehicle, setVehicle, setEdit, inputFieldStyle } = props;\n    const { id, notes } = vehicle;\n\n    const [editNotes, setEditNotes] = useState<string>(notes);\n    const [editNotesStatus, setEditNotesStatus] = useState<PostRequestStatus>('');\n\n    const editNotesState: EditNotesState = {\n        vehicleDetailsMounted,\n        mounted,\n        vehicleId: id,\n        notes,\n        editNotes,\n        editNotesStatus,\n        setEditNotesStatus,\n        setVehicle\n    };\n\n    const handleNotesChange = (e: React.ChangeEvent<{ value: unknown; }>): void => {\n        setEditNotes(e.target.value as string);\n    };\n\n    if (editNotesStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to update vehicle notes' />;\n    };\n\n    return <>\n        <FormControl className={inputFieldStyle}>\n            <TextField\n                onChange={handleNotesChange}\n                label='Notes'\n                value={editNotes}\n                variant='outlined'\n                multiline\n                maxRows={5}\n                autoFocus\n            />\n        </FormControl>\n        <EditNotesButtons className={inputFieldStyle} editNotesState={editNotesState} setEdit={setEdit} />\n    </>;\n}","// THIS PROJECT\n// components\nimport ReadonlyTextField from '../../../common/ReadonlyTextField';\n// types\nimport { DetailedVehicle } from '../../../../types/Vehicle';\n\ninterface ReadonlyInfoProps {\n  vehicle: DetailedVehicle;\n  inputFieldStyle?: string;\n};\nexport default function ReadonlyInfoTab(props: ReadonlyInfoProps): React.ReactElement {\n  const { vehicle, inputFieldStyle } = props;\n  const { notes } = vehicle;\n\n  return (\n    <ReadonlyTextField disabled label={notes === '' ? <span className='label'>...</span> : <span className='label'>Notes</span>} value={notes} className={inputFieldStyle} multiline maxRows={5} />\n  );\n};","// react\nimport { useState, useEffect } from 'react';\n// material-ui\nimport EditIcon from '@mui/icons-material/Edit';\nimport IconButton from '@mui/material/IconButton';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\n// THIS PROJECT\n// components\nimport TabContent from '../TabContent';\nimport EditNotes from './EditNotes';\nimport ReadonlyNotes from './ReadonlyNotes';\n// types\nimport { VehicleDetailState } from '../../../../types/Vehicle';\nimport { ContentPaper } from '../../../common/cardContent';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    editButtonDiv: {\n        width: '100%',\n        marginTop: -25,\n        marginBottom: -10,\n    },\n    editButton: {\n        float: 'right',\n    },\n    inputField: {\n        marginTop: theme.spacing(1),\n        marginBottom: theme.spacing(1),\n        margin: 'auto',\n        width: 'clamp(200px, 100%, 400px)',\n    },\n}));\n\ninterface NotesTabProps {\n    vehicleDetailState: VehicleDetailState;\n}\nexport default function NotesTab(props: NotesTabProps): React.ReactElement {\n    const classes = useStyles();\n    const { vehicleDetailState } = props;\n    const { mounted, vehicle, setVehicle, setDisableDoneButton } = vehicleDetailState;\n    const [edit, setEdit] = useState<boolean>(false);\n\n    const handleEditClick = () => {\n        edit ? setEdit(false) : setEdit(true);\n    };\n\n    useEffect(() => {\n        edit ? setDisableDoneButton(true) : setDisableDoneButton(false);\n        return () => setDisableDoneButton(false);\n    }, [edit, setDisableDoneButton]);\n\n    return (\n        <ContentPaper>\n            <TabContent>\n                <div className={classes.editButtonDiv} >\n                    <IconButton\n                        aria-label='edit'\n                        className={classes.editButton}\n                        onClick={handleEditClick}\n                        color={edit ? 'primary' : 'inherit'}\n                        size=\"large\">\n                        <EditIcon />\n                    </IconButton>\n                </div>\n                {edit\n                    ? vehicle && <EditNotes\n                        vehicleDetailsMounted={mounted}\n                        vehicle={vehicle}\n                        setVehicle={setVehicle}\n                        setEdit={setEdit}\n                        inputFieldStyle={classes.inputField}\n                    />\n                    : vehicle && <ReadonlyNotes vehicle={vehicle} inputFieldStyle={classes.inputField} />}\n            </TabContent>\n        </ContentPaper>\n    );\n}","// react\nimport { useState } from \"react\";\n// material-ui\nimport IconButton from '@mui/material/IconButton';\nimport ArrowDownwardIcon from '@mui/icons-material/ArrowDownward';\nimport ArrowUpwardIcon from '@mui/icons-material/ArrowUpward';\nimport Menu from '@mui/material/Menu';\nimport MenuItem from '@mui/material/MenuItem';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../../../common/flex';\nimport { ContentTitle } from '../../../common/cardContent';\n// types\nimport { ListOrder, Set } from \"../../../../types/misc\";\n\ninterface HistoryTitleMenuProps {\n    order: ListOrder;\n    setOrder: Set<ListOrder>;\n};\nexport default function HistoryTitleMenu(props: HistoryTitleMenuProps): React.ReactElement {\n    const { order, setOrder } = props;\n\n    const [orderAnchor, setOrderAnchor] = useState<null | HTMLElement>(null);\n\n    const handleOrderClick = (e: React.MouseEvent<HTMLElement>) => {\n        setOrderAnchor(e.currentTarget);\n    };\n\n    const handleOrderClose = (order: ListOrder) => {\n        setOrderAnchor(null);\n        setOrder(order);\n    };\n\n    return (\n        <FlexCenter>\n            <ContentTitle variant='h6'>Stage History:</ContentTitle>\n            <IconButton\n                aria-controls=\"order-menu\"\n                aria-haspopup=\"true\"\n                onClick={handleOrderClick}\n                size=\"large\">\n                {order === 'asc' ? <ArrowDownwardIcon /> : <ArrowUpwardIcon />}\n            </IconButton>\n            <Menu\n                id=\"order-menu\"\n                anchorEl={orderAnchor}\n                keepMounted\n                open={Boolean(orderAnchor)}\n                onClose={() => handleOrderClose(order)}\n            >\n                <MenuItem onClick={() => { handleOrderClose('desc'); }}>Oldest First</MenuItem>\n                <MenuItem onClick={() => { handleOrderClose('asc'); }}>Newest First</MenuItem>\n            </Menu>\n        </FlexCenter>\n    );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Dialog from '@mui/material/Dialog';\nimport Typography from '@mui/material/Typography';\nimport Divider from '@mui/material/Divider';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport CloseIcon from '@mui/icons-material/Close';\nimport IconButton from '@mui/material/IconButton';\n// THIS PROJECT\n// types\nimport { StageAssignment } from '../../../../types/StageAssignment';\n\nconst useStyles = makeStyles({\n    dialog: {\n        padding: 20,\n        textAlign: 'left',\n        width: 'clamp(200px, 80vw, 400px)',\n        marginTop: -50,\n    },\n    closeButton: {\n        float: 'right',\n    },\n    label: {\n        fontSize: 10,\n        float: 'left',\n        width: '100%',\n        marginTop: 10,\n    },\n\n});\n\ninterface StageDetailsDialogProps {\n    open: boolean;\n    onClose: () => void;\n    stageAssignment: StageAssignment;\n    timeElapsed: (dateAssigned: number, status: string, completeTime: number) => JSX.Element;\n};\nexport default function AddVehicleDialog(props: StageDetailsDialogProps): React.ReactElement {\n    const classes = useStyles();\n    const { onClose, open, stageAssignment, timeElapsed } = props;\n    const stage = stageAssignment.stage.name;\n    const personPlace = stageAssignment.personPlace.name;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const formatDate = (dateAssigned: number) => {\n        const date: Date = new Date(dateAssigned);\n        interface DateTimeFormatOptions {\n            year: '2-digit',\n            month: '2-digit',\n            day: '2-digit',\n            hour: '2-digit',\n            minute: '2-digit';\n        };\n        let options: DateTimeFormatOptions = {\n            year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit'\n        };\n        return <span>{date.toLocaleDateString('en-US', options)}</span>;\n    };\n\n    return (\n        <Dialog onClose={handleClose} aria-labelledby=\"stage-details-dialog\" open={open}>\n            <div>\n                <IconButton className={classes.closeButton} onClick={handleClose} size=\"large\">\n                    <CloseIcon />\n                </IconButton>\n            </div>\n            <div className={classes.dialog}>\n                <div className={classes.label}>Stage:</div>\n                <Typography variant=\"subtitle1\">{stage}</Typography>\n                <Divider />\n                <span className={classes.label}>Person/Place:</span>\n                <Typography variant=\"subtitle1\">{personPlace}</Typography>\n                <Divider />\n                <span className={classes.label}>Status:</span>\n                <Typography variant=\"subtitle1\">{stageAssignment.status}</Typography>\n                <Divider />\n                <span className={classes.label}>Tasks: </span>\n                <List>\n                    {stageAssignment.tasks.map(task => <ListItem key={task + Math.random()}>{task}</ListItem>)}\n                </List>\n                <Divider />\n                <span className={classes.label}>Date Assigned:</span>\n                <Typography variant=\"subtitle1\">{formatDate(stageAssignment.dateAssigned)}</Typography>\n                <Divider />\n                {stageAssignment.dateCompleted > 0 && <>\n                    <span className={classes.label}>Date Completed:</span>\n                    <Typography variant=\"subtitle1\">{formatDate(stageAssignment.dateCompleted)}</Typography>\n                </>}\n                <Divider />\n                <span className={classes.label}>{stageAssignment.status === 'complete' ? 'Time to Complete' : 'Time Elapsed'}</span>\n                <Typography variant=\"subtitle1\">{timeElapsed(stageAssignment.dateAssigned, stageAssignment.status, stageAssignment.completeTime)}</Typography>\n                <Divider />\n            </div>\n        </Dialog >\n    );\n}","// react\nimport { useState } from 'react';\n// material-ui\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\n// THIS PROJECT\n// components\nimport FormatTime from '../../../common/FormatTime';\nimport StageDetailsDialog from './StageDetailsDialog';\n// types\nimport { StageAssignment } from '../../../../types/StageAssignment';\n\nconst useStyles = makeStyles({\n    tableContainer: {\n        width: 'clamp(200px, 100%, 600px)',\n    },\n    table: {\n        minWidth: 450,\n        backgroundColor: '#F9F9F9',\n    },\n    stageButton: {\n        width: 75,\n        textAlign: 'left',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n    },\n});\n\ninterface HistoryTableProps {\n    sortedStageHistory: StageAssignment[];\n};\nexport default function HistoryTable(props: HistoryTableProps): React.ReactElement {\n    const classes = useStyles();\n    const { sortedStageHistory } = props;\n\n    const formatDateAssigned = (dateAssigned: number) => {\n        const date: Date = new Date(dateAssigned);\n        interface DateTimeFormatOptions {\n            year: '2-digit',\n            month: '2-digit',\n            day: '2-digit',\n        };\n        let options: DateTimeFormatOptions = {\n            year: '2-digit', month: '2-digit', day: '2-digit'\n        };\n        return <span>{date.toLocaleDateString('en-US', options)}</span>;\n    };\n\n    const timeElapsed = (dateAssigned: number, status: string, completeTime: number) => {\n        if (status === 'complete') {\n            return <FormatTime color='primary' milliseconds={completeTime} />;\n        } else {\n            const difference: number = Date.now() - dateAssigned;\n            return <FormatTime color='secondary' milliseconds={difference} />;\n        };\n    };\n\n    const [openStageDetailsDialog, setOpenStageDetailsDialog] = useState<boolean>(false);\n    const [dialogStageAssignment, setDialogStageAssignment] = useState<StageAssignment | undefined>();\n\n    const handleStageDetailsClick = (stageAssignment: StageAssignment) => {\n        setDialogStageAssignment(stageAssignment);\n        setOpenStageDetailsDialog(true);\n    };\n\n    const handleCloseDialog = () => {\n        setOpenStageDetailsDialog(false);\n        setDialogStageAssignment(undefined);\n    };\n\n    return (\n        <>\n            <TableContainer className={classes.tableContainer} component={Paper}>\n                <Table className={classes.table} size='small' aria-label=\"stage history table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Stage</TableCell>\n                            <TableCell>Time</TableCell>\n                            <TableCell>Person/Place</TableCell>\n                            <TableCell>Assigned</TableCell>\n                            <TableCell>Completed</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {sortedStageHistory.map((stage) => (\n                            <TableRow key={stage.dateAssigned}>\n                                <TableCell component=\"th\" scope=\"row\">\n                                    <Button\n                                        size='small'\n                                        color={stage.status === 'incomplete' ? 'secondary' : 'inherit'}\n                                        onClick={() => handleStageDetailsClick(stage)}\n                                    >\n                                        <span className={classes.stageButton}>{stage.stage.name}</span>\n                                    </Button>\n                                </TableCell>\n                                <TableCell>{timeElapsed(stage.dateAssigned, stage.status, stage.completeTime)}</TableCell>\n                                <TableCell>{stage.personPlace.name}</TableCell>\n                                <TableCell component=\"th\" scope=\"row\">{formatDateAssigned(stage.dateAssigned)}</TableCell>\n                                <TableCell>{stage.dateCompleted > 0 && formatDateAssigned(stage.dateCompleted)}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            {dialogStageAssignment &&\n                <StageDetailsDialog\n                    open={openStageDetailsDialog}\n                    onClose={handleCloseDialog}\n                    stageAssignment={dialogStageAssignment}\n                    timeElapsed={timeElapsed}\n                />}\n        </>\n    );\n}","// react\nimport { useState, useEffect, useCallback } from \"react\";\n// material-ui\nimport Skeleton from '@mui/material/Skeleton';\n// THIS PROJECT\n// components\nimport { ContentPaper } from '../../../common/cardContent';\nimport TabContent from '../TabContent';\nimport HistoryTitleMenu from './HistoryTitleMenu';\nimport HistoryTable from './HistoryTable';\n// services\nimport { getStageHistory as getStageHistoryService } from '../../../../services/stages';\n// contexts\nimport { useDemoContext } from \"../../../../contexts/DemoContext\";\n// hooks\nimport { useCheckMounted } from '../../../../hooks';\n// types\nimport { GetRequestStatus } from '../../../../types/ServiceRequests';\nimport { StageAssignment } from \"../../../../types/StageAssignment\";\nimport { ListOrder } from \"../../../../types/misc\";\n\ninterface StageHistoryTabProps {\n    vehicleId: string;\n};\nexport default function StageHistoryTab(props: StageHistoryTabProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { vehicleId } = props;\n\n    const [stageHistory, setStageHistory] = useState<StageAssignment[]>([]);\n    const [getStageHistoryStatus, setGetStageHistoryStatus] = useState<GetRequestStatus>('');\n\n    const getStageHistory = useCallback(async () => {\n        setGetStageHistoryStatus('loading');\n        await delay();\n        getStageHistoryService(vehicleId)\n            .then(result => {\n                mounted.current && result.data && setStageHistory(result.data);\n                mounted.current && setGetStageHistoryStatus(result.status as GetRequestStatus);\n            }, e => { });\n\n    },\n        [mounted, delay, vehicleId]\n    );\n\n    useEffect(() => {\n        getStageHistory();\n    }, [getStageHistory]);\n\n    // Sort stages by dateAssigned\n    const [order, setOrder] = useState<ListOrder>('asc');\n    const sortedStageHistory = [...stageHistory].sort((a, b) => {\n        let aDate = a.dateAssigned;\n        let bDate = b.dateAssigned;\n        if (order === 'desc') {\n            if (aDate < bDate) {\n                return -1;\n            }\n            if (aDate > bDate) {\n                return 1;\n            }\n            return 0;\n        }\n        if (order === 'asc') {\n            if (aDate > bDate) {\n                return -1;\n            }\n            if (aDate < bDate) {\n                return 1;\n            }\n            return 0;\n        }\n        return 0;\n    });\n\n    return (\n        <ContentPaper>\n            <TabContent>\n                <HistoryTitleMenu order={order} setOrder={setOrder} />\n                {getStageHistoryStatus === 'loading'\n                    ? <Skeleton variant=\"rectangular\" width={'100%'} height={200} />\n                    : <HistoryTable sortedStageHistory={sortedStageHistory} />}\n            </TabContent>\n        </ContentPaper>\n    );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory, useParams } from 'react-router-dom';\nimport { useQuery } from '../../../hooks';\n// material-ui\nimport Tabs from '@mui/material/Tabs';\n// THIS PPROJECT\n// components\nimport DarkTab from '../../common/DarkTab';\nimport StageTab from './stageTab/StageTab';\nimport InfoTab from './infoTab/InfoTab';\nimport NotesTab from './notesTab/NotesTab';\nimport StageHistoryTab from './stageHistoryTab/StageHistoryTab';\n// types\nimport { VehicleDetailState, VehicleStatus } from '../../../types/Vehicle';\n\ninterface TabPanelProps {\n  children?: React.ReactNode;\n  index: any;\n  value: any;\n};\nfunction TabPanel(props: TabPanelProps) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`vehicle-tabpanel-${index}`}\n      aria-labelledby={`vehicle-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <div>{children}</div>\n      )}\n    </div>\n  );\n};\n\nfunction a11yProps(index: any) {\n  return {\n    id: `vehicle-tab-${index}`,\n    'aria-controls': `vehicle-tabpanel-${index}`,\n  };\n};\n\ninterface VehicleTabsProps {\n  vehicleDetailState: VehicleDetailState;\n};\nexport default function VehicleTabs(props: VehicleTabsProps): React.ReactElement {\n  const history = useHistory();\n  const query = useQuery();\n  const { vehicleDetailState } = props;\n  const { vehicle } = vehicleDetailState;\n\n  interface ParamTypes {\n    status: VehicleStatus;\n    tab: 'stage' | 'info' | 'notes' | 'history';\n  };\n\n  let { tab } = useParams<ParamTypes>();\n  const [tabValue, setTabValue] = useState<any>(tab);\n\n  useEffect(() => setTabValue(tab), [tab]);\n\n  const changeTab = (event: React.ChangeEvent<{}>, newValue: string) => {\n    setTabValue(newValue);\n    // check if we have a 'prev' query parameter,if we do set previous to the trimmed path, if not set it to ''\n    const previous = query.get('prev')\n      ? window.location.href.replace(/.*(?=prev=)(prev=)/, '')\n      : '';\n    history.push(`/vehicle-details/id/${vehicle?.id}/${newValue}?prev=${previous}`);\n  };\n\n  return (\n    <div>\n      <Tabs\n        centered\n        value={tabValue}\n        indicatorColor=\"primary\"\n        textColor=\"primary\"\n        onChange={changeTab}\n        aria-label=\"vehicle details navigation\"\n      >\n        <DarkTab label=\"Stage\" value='stage' {...a11yProps('stage')} />\n        <DarkTab label=\"Info\" value='info' {...a11yProps('info')} />\n        <DarkTab label=\"Notes\" value='notes' {...a11yProps('notes')} />\n        <DarkTab label=\"History\" value='history' {...a11yProps('history')} />\n      </Tabs>\n      <TabPanel value={tabValue} index='stage'>\n        <StageTab vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='info'>\n        <InfoTab vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='notes'>\n        <NotesTab vehicleDetailState={vehicleDetailState} />\n      </TabPanel>\n      <TabPanel value={tabValue} index='history'>\n        {vehicle && <StageHistoryTab vehicleId={vehicle.id} />}\n      </TabPanel>\n    </div>\n  );\n}","// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// material-ui\nimport Button from '@mui/material/Button';\nimport { makeStyles } from '@mui/styles';\nimport { Theme } from '@mui/material';\n// THIS PROJECT\n// hooks\nimport { useQuery } from '../../hooks';\nimport { useAuthContext } from '../../contexts/AuthContext';\n// services\nimport { assignStage } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { PostRequestStatus } from '../../types/ServiceRequests';\nimport { Set } from '../../types/misc';\nimport { DetailedVehicle } from '../../types/Vehicle';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n    buttonContainer: {\n        width: '100%',\n        textAlign: 'right',\n    },\n    button: {\n        marginTop: theme.spacing(2),\n        marginRight: theme.spacing(2),\n        marginBottom: theme.spacing(1),\n    }\n}));\n\ninterface DetailsDoneButtonProps {\n    disableDoneButton: boolean;\n    mounted: React.MutableRefObject<boolean>;\n    vehicle: DetailedVehicle | null;\n    setUpdateVehicleStatus: Set<PostRequestStatus>;\n};\nexport default function DetailsDoneButton(props: DetailsDoneButtonProps): React.ReactElement {\n    const query = useQuery();\n    const history = useHistory();\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n    const { disableDoneButton, mounted, vehicle, setUpdateVehicleStatus } = props;\n\n    const { defaultStageAssignment } = useAuthContext().userPreferences;\n\n    // if vehicle stage is complete, and a new stage has not been assigned, we need to assign the default\n    // stage assignment when the done button is clicked\n    const doneButtonClick = async () => {\n        // check if we have a 'prev' query parameter,if we do set previous to the trimmed path, if not set it to ''\n        const previous = query.get('prev')\n            ? window.location.href.replace(/.*(?=prev=)(prev=)/, '')\n            : '';\n        const exit = () => {\n            previous\n                ? history.push(`${previous}`)\n                : history.push(`/all-vehicles/active/asc/10/first/0`);\n        };\n        if (vehicle && vehicle.currentStage.status === 'complete' && vehicle.status !== 'sold') {\n            setUpdateVehicleStatus('loading');\n            await delay();\n            assignStage({\n                vehicleId: vehicle.id,\n                stage: defaultStageAssignment.stage,\n                personPlace: defaultStageAssignment.personPlace,\n                tasks: [],\n                dateAssigned: Date.now()\n            }).then(result => {\n                result.status === 'success' && exit();\n                mounted.current && result.status === 'failed' && setUpdateVehicleStatus('failed');\n            }, e => {\n                mounted.current && setUpdateVehicleStatus('failed');\n                console.error(e);\n            });\n        } else {\n            exit();\n        }\n    };\n\n    return (\n        <div className={classes.buttonContainer}>\n            {!disableDoneButton\n                ? <Button\n                    onClick={doneButtonClick}\n                    className={classes.button}\n                    color='primary'\n                    variant='contained'\n                >\n                    Done\n                </Button>\n                : <Button\n                    disabled\n                    className={classes.button}\n                    color='primary'\n                    variant='contained'\n                >\n                    Done\n                </Button>\n            }\n        </div>\n    );\n}","// THIS PROJECT\nimport { LargeCard, LargeContent, ContentHeader, ContentTitle } from '../common/cardContent';\nimport CenteredError from '../common/CenteredError';\n\ninterface VehicleFailedProps {\n    errorMessage?: string;\n    retryAction?: () => void;\n};\nexport default function VehicleFailed(props: VehicleFailedProps): React.ReactElement {\n    const { errorMessage: errorMessagetmp, retryAction } = props;\n    const errorMessage = errorMessagetmp\n        ? errorMessagetmp\n        : 'failed to load vehicle details';\n\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <ContentTitle variant='h5'>Vehicle Details:</ContentTitle>\n                </ContentHeader>\n                <CenteredError errorMessage={errorMessage} retryAction={retryAction} />\n            </LargeContent>\n        </LargeCard>\n    );\n}","// react-router-dom\nimport { Link } from 'react-router-dom';\n// material-ui\nimport { Typography, Button } from '@mui/material';\n// THIS PROJECT\nimport { FlexCenter } from '../common/flex';\n\nexport default function TrashedMessage(): React.ReactElement {\n    return (\n        <FlexCenter style={{ marginTop: 10 }}>\n            <Typography>This vehicle has been moved to the </Typography>\n            <Button><Link to='/all-vehicles/trash/asc/10/first/0'>Trash List</Link></Button>\n        </FlexCenter>\n    );\n}","// material-ui\nimport Divider from '@mui/material/Divider';\nimport Skeleton from '@mui/material/Skeleton';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader } from '../common/cardContent';\nimport { FlexCenter } from '../common/flex';\n\nexport default function GetVehicleLoading(): React.ReactElement {\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <Skeleton />\n                    <Skeleton />\n                </ContentHeader>\n                <Divider />\n                <FlexCenter flexDirection='column' sx={{ height: 300 }}>\n                    <CircularProgress />\n                    <Typography>Updating vehicle...</Typography>\n                </FlexCenter>\n            </LargeContent>\n        </LargeCard>\n    );\n}","// react\nimport { useState, useEffect, useCallback } from 'react';\n// react-router-dom\nimport { useParams } from 'react-router-dom';\n// material-ui\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader } from '../common/cardContent';\nimport { FlexCenter } from '../common/flex';\nimport GetVehicleLoading from './GetVehicleLoading';\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\nimport ActionMenu from './ActionMenu';\nimport VehicleTabs from './vehicleTabs/VehicleTabs';\nimport DetailsDoneButton from './DetailsDoneButton';\nimport VehicleFailed from './VehicleFailed';\nimport CenteredError from '../common/CenteredError';\nimport TrashedMessage from './TrashedMessage';\nimport UpdateVehicleLoading from './UpdateVehicleLoading';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { findVehicle as findVehicleService } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { DetailedVehicle, VehicleDetailState } from '../../types/Vehicle';\nimport { GetRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\n\nconst useStyles = makeStyles(theme => ({\n    vehicleTitle: {\n        maxWidth: '80%',\n    },\n}));\n\nexport default function VehicleDetails(): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    type IdParam = { searchCriteria: 'id' | 'stock', searchValue: string; };\n    const { searchCriteria, searchValue } = useParams<IdParam>();\n\n    // VEHICLE INFO\n    const [vehicle, setVehicle] = useState<DetailedVehicle | null>(null);\n    const [getVehicleStatus, setGetVehicleStatus] = useState<GetRequestStatus>('loading');\n    const [getVehicleError, setGetVehicleError] = useState<string>('');\n    const [updateVehicleStatus, setUpdateVehicleStatus] = useState<PostRequestStatus>('');\n    const [disableDoneButton, setDisableDoneButton] = useState<boolean>(false);\n\n    const vehicleDetailState: VehicleDetailState = {\n        mounted,\n        vehicle, setVehicle,\n        getVehicleStatus, setGetVehicleStatus,\n        updateVehicleStatus, setUpdateVehicleStatus,\n        setDisableDoneButton\n    };\n\n    const findVehicle = useCallback(async () => {\n        setGetVehicleError('');\n        setGetVehicleStatus('loading');\n        await delay();\n        findVehicleService(searchCriteria, searchValue)\n            .then(result => {\n                mounted.current && result.status === 'success' && !result.data\n                    && setGetVehicleError(`No vehicles match ${searchCriteria}: ${searchValue}`);\n                mounted.current && setGetVehicleStatus(result.status as GetRequestStatus);\n                mounted.current && setVehicle(result.data);\n            }, e => {\n                mounted.current && setGetVehicleStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, searchCriteria, searchValue, mounted]\n    );\n\n    useEffect(() => {\n        findVehicle();\n    }, [findVehicle]);\n\n    if (getVehicleStatus === 'loading') {\n        return <GetVehicleLoading />;\n    };\n\n    if (updateVehicleStatus === 'loading') {\n        return <UpdateVehicleLoading />;\n    }\n\n    if (getVehicleStatus === 'failed' || getVehicleError !== '') {\n        return <VehicleFailed errorMessage={getVehicleError} retryAction={() => window.location.reload()} />;\n    };\n\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <FlexCenter style={{ position: 'relative' }} >\n                        <div className={classes.vehicleTitle}>{vehicle && <VehicleInfo vehicle={vehicle} variant='h6' />}</div>\n                        <Box position='absolute' right={0}>\n                            {vehicleDetailState.vehicle && <ActionMenu vehicleDetailState={vehicleDetailState} mounted={mounted} />}\n                        </Box>\n                    </FlexCenter>\n                </ContentHeader>\n                <Divider />\n                {updateVehicleStatus === 'failed'\n                    ? <CenteredError errorMessage='Failed to update vehicle details' />\n                    : vehicle?.status === 'trash'\n                        ? <TrashedMessage />\n                        : <>\n                            <VehicleTabs vehicleDetailState={vehicleDetailState} />\n                            <DetailsDoneButton\n                                disableDoneButton={disableDoneButton}\n                                mounted={mounted}\n                                vehicle={vehicle}\n                                setUpdateVehicleStatus={setUpdateVehicleStatus}\n                            />\n                        </>}\n            </LargeContent>\n        </LargeCard>\n    );\n}","// material-ui\nimport { styled } from '@mui/material/styles';\nimport Accordion from '@mui/material/Accordion';\n\nconst AccordionPaper = styled(Accordion)({\n    marginTop: 5,\n    marginBottom: 5,\n    border: '.5pt solid #D0D0D0',\n    width: '100%',\n});\n\nexport default AccordionPaper;","// material-ui\nimport NavigateNextIcon from '@mui/icons-material/NavigateNext';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport NavigateBeforeIcon from '@mui/icons-material/NavigateBefore';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../flex';\n// types\nimport { VehiclePage } from '../../../types/Vehicle';\nimport { Page } from '../../../types/misc';\n\ninterface NavigateAccordianVehicleListProps {\n    vehiclePage: VehiclePage;\n    getVehicles: (page: Page, compare: number) => void;\n}\nexport default function NavigateAccordianVehicleList(props: NavigateAccordianVehicleListProps): React.ReactElement {\n    const { vehiclePage, getVehicles } = props;\n    const { docStartNumber, docEndNumber, totalDocs, vehicles } = vehiclePage;\n    const dateAddedValues: number[] = [];\n    vehicles.forEach(vehicle => dateAddedValues.push(vehicle.dateAdded));\n    const maxDateAdded = Math.max(...dateAddedValues);\n    const minDateAdded = Math.min(...dateAddedValues);\n\n\n    const firstPageClick = () => {\n        getVehicles('first', 0);\n    };\n\n    const prevPageClick = () => {\n        docStartNumber !== 1 && getVehicles('prev', minDateAdded);\n    };\n\n    const nextPageClick = () => {\n        docEndNumber !== totalDocs && getVehicles('next', maxDateAdded);\n    };\n\n    const lastPageClick = () => {\n        docEndNumber !== totalDocs && getVehicles('last', 0);\n    };\n\n    if (totalDocs > 5) {\n        return (\n            <FlexCenter>\n                <IconButton\n                    aria-label='first-page'\n                    onClick={firstPageClick}\n                    disabled={docStartNumber === 1}\n                    size=\"large\">\n                    <FirstPageIcon />\n                </IconButton>\n                <IconButton\n                    aria-label='previous-page'\n                    onClick={prevPageClick}\n                    disabled={docStartNumber === 1}\n                    size=\"large\">\n                    <NavigateBeforeIcon />\n                </IconButton>\n                <Typography align='center'>({docStartNumber.toLocaleString()}-{docEndNumber.toLocaleString()}) / {totalDocs.toLocaleString()}</Typography>\n                <IconButton\n                    aria-label='next-page'\n                    onClick={nextPageClick}\n                    disabled={docEndNumber === totalDocs}\n                    size=\"large\">\n                    <NavigateNextIcon />\n                </IconButton>\n                <IconButton\n                    aria-label='last-page'\n                    onClick={lastPageClick}\n                    disabled={docEndNumber === totalDocs}\n                    size=\"large\">\n                    <LastPageIcon />\n                </IconButton>\n            </FlexCenter>\n        );\n    } else {\n        return <></>;\n    }\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../common/vehicles/VehicleListItemButton';\nimport FormatTime from '../common/FormatTime';\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../common/vehicles/VehicleChipGroup';\nimport VehicleChip from '../common/vehicles/VehicleChip';\nimport NavigateStageVehicleList from '../common/vehicles/NavigateAccordianVehicleList';\nimport LoadingList from '../common/LoadingList';\nimport CenteredError from '../common/CenteredError';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getVehiclesPaged } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { DetailedVehicle } from '../../types/Vehicle';\nimport { VehiclePage } from '../../types/Vehicle';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { Page } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n    accordianDetails: {\n        padding: theme.spacing(2),\n        paddingTop: 0,\n    },\n    vehicleList: {\n        width: '100%',\n    },\n}));\n\ninterface StageVehicleListProps {\n    stageId: string;\n}\nexport default function StageVehicleList(props: StageVehicleListProps): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { stageId } = props;\n\n    const [vehiclePage, setVehiclePage] = useState<VehiclePage>({ docStartNumber: 0, docEndNumber: 0, totalDocs: 0, vehicles: [] });\n    const [getVehiclesStatus, setGetVehiclesStatus] = useState<GetRequestStatus>('loading');\n\n    const getVehicles = useCallback(\n        async (page: Page, compare: number) => {\n            setGetVehiclesStatus('loading');\n            await delay();\n            getVehiclesPaged('active', 'asc', 5, page, compare, `stageId=${stageId}`)\n                .then(result => {\n                    mounted.current && setGetVehiclesStatus(result.status as GetRequestStatus);\n                    result.status === 'success' && mounted.current && result.data && setVehiclePage(result.data);\n                    result.status === 'failed' && console.error(result);\n                }, e => {\n                    mounted.current && setGetVehiclesStatus('failed');\n                    console.error(e);\n                });\n        },\n        [delay, mounted, stageId]\n    );\n\n    useEffect(() => { getVehicles('first', 0); }, [getVehicles]);\n\n    let list: JSX.Element;\n    if (getVehiclesStatus === 'failed') {\n        list = <CenteredError errorMessage='Error loading vehicles...' />;\n    } else if (getVehiclesStatus === 'loading') {\n        list = <LoadingList skeletonCount={10} />;\n    } else {\n        list = <>\n            <List className={classes.vehicleList}>\n                {vehiclePage.vehicles.map(vehicle => <StageVehicle key={vehicle.id} vehicle={vehicle} />)}\n            </List>\n            <NavigateStageVehicleList vehiclePage={vehiclePage} getVehicles={getVehicles} />\n        </>;\n    }\n    return (\n        <AccordionDetails className={classes.accordianDetails}>\n            {list}\n        </AccordionDetails>\n    );\n}\n\nconst useVehicleStyles = makeStyles(theme => ({\n    vehicle: {\n        width: '100%',\n    },\n    vehicleDivider: {\n        width: '98%',\n    },\n}));\n\ninterface VehicleProps {\n    vehicle: DetailedVehicle;\n};\nfunction StageVehicle(props: VehicleProps): React.ReactElement {\n    const classes = useVehicleStyles();\n    const history = useHistory();\n    const { vehicle } = props;\n\n    const timeElapsed = (dateAssigned: number) => {\n        const difference: number = Date.now() - dateAssigned;\n        return <FormatTime milliseconds={difference} />;\n    };\n\n    const selectVehicle = (vehicleId: string | undefined) => {\n        history.push(`/vehicle-details/id/${vehicleId}/stage?prev=/stages`);\n    };\n\n    return (\n        <div key={vehicle.id} className={classes.vehicle}>\n            <Divider className={classes.vehicleDivider} />\n            <VehicleListItemButton onClick={() => selectVehicle(vehicle.id)}>\n                <VehicleInfo vehicle={vehicle} listItem />\n                <VehicleChipGroup>\n                    <VehicleChip size='small' label={timeElapsed(vehicle.currentStage.dateAssigned)} />\n                    <VehicleChip size='small' label={vehicle.currentStage.personPlace.name} color='primary' />\n                </VehicleChipGroup>\n            </VehicleListItemButton>\n            <Divider className={classes.vehicleDivider} />\n        </div>\n    );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Divider from '@mui/material/Divider';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport List from '@mui/material/List';\n// THIS PROJECT\n// components\nimport VehicleListItemButton from '../common/vehicles/VehicleListItemButton';\nimport FormatTime from '../common/FormatTime';\nimport VehicleInfo from '../common/vehicles/VehicleInfo';\nimport VehicleChipGroup from '../common/vehicles/VehicleChipGroup';\nimport VehicleChip from '../common/vehicles/VehicleChip';\nimport NavigateAccordianVehicleList from '../common/vehicles/NavigateAccordianVehicleList';\nimport LoadingList from '../common/LoadingList';\nimport CenteredError from '../common/CenteredError';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getVehiclesPaged } from '../../services/vehicles';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { DetailedVehicle } from '../../types/Vehicle';\nimport { VehiclePage } from '../../types/Vehicle';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { Page } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n    accordianDetails: {\n        padding: theme.spacing(2),\n        paddingTop: 0,\n    },\n    vehicleList: {\n        width: '100%',\n    },\n}));\n\ninterface PersonPlaceVehicleListProps {\n    personPlaceId: string;\n}\nexport default function PresonPlaceVehicleList(props: PersonPlaceVehicleListProps): React.ReactElement {\n    const classes = useStyles();\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n    const { personPlaceId } = props;\n\n    const [vehiclePage, setVehiclePage] = useState<VehiclePage>({ docStartNumber: 0, docEndNumber: 0, totalDocs: 0, vehicles: [] });\n    const [getVehiclesStatus, setGetVehiclesStatus] = useState<GetRequestStatus>('loading');\n\n    const getVehicles = useCallback(\n        async (page: Page, compare: number) => {\n            setGetVehiclesStatus('loading');\n            await delay();\n            getVehiclesPaged('active', 'asc', 5, page, compare, `personPlaceId=${personPlaceId}`)\n                .then(result => {\n                    mounted.current && setGetVehiclesStatus(result.status as GetRequestStatus);\n                    result.status === 'success' && mounted.current && result.data && setVehiclePage(result.data);\n                    result.status === 'failed' && console.error(result);\n                }, e => {\n                    mounted.current && setGetVehiclesStatus('failed');\n                    console.error(e);\n                });\n        },\n        [delay, mounted, personPlaceId]\n    );\n\n    useEffect(() => { getVehicles('first', 0); }, [getVehicles]);\n\n    let list: JSX.Element;\n    if (getVehiclesStatus === 'failed') {\n        list = <CenteredError errorMessage='Error loading vehicles...' />;\n    } else if (getVehiclesStatus === 'loading') {\n        list = <LoadingList skeletonCount={5} />;\n    } else {\n        list = <>\n            <List className={classes.vehicleList}>\n                {vehiclePage.vehicles.map(vehicle => <PersonPlaceVehicle key={vehicle.id} vehicle={vehicle} />)}\n            </List>\n            <NavigateAccordianVehicleList vehiclePage={vehiclePage} getVehicles={getVehicles} />\n        </>;\n    }\n    return (\n        <AccordionDetails className={classes.accordianDetails}>\n            {list}\n        </AccordionDetails>\n    );\n}\n\nconst useVehicleStyles = makeStyles(theme => ({\n    vehicle: {\n        width: '100%',\n    },\n    vehicleDivider: {\n        width: '98%',\n    },\n}));\n\ninterface VehicleProps {\n    vehicle: DetailedVehicle;\n};\nfunction PersonPlaceVehicle(props: VehicleProps): React.ReactElement {\n    const classes = useVehicleStyles();\n    const history = useHistory();\n    const { vehicle } = props;\n\n    const timeElapsed = (dateAssigned: number) => {\n        const difference: number = Date.now() - dateAssigned;\n        return <FormatTime milliseconds={difference} />;\n    };\n\n    const selectVehicle = (vehicleId: string | undefined) => {\n        history.push(`/vehicle-details/id/${vehicleId}/stage?prev=/people-places`);\n    };\n\n    return (\n        <div key={vehicle.id} className={classes.vehicle}>\n            <Divider className={classes.vehicleDivider} />\n            <VehicleListItemButton onClick={() => selectVehicle(vehicle.id)}>\n                <VehicleInfo vehicle={vehicle} listItem />\n                <VehicleChipGroup>\n                    <VehicleChip size='small' label={timeElapsed(vehicle.currentStage.dateAssigned)} />\n                    <VehicleChip size='small' label={vehicle.currentStage.stage.name} color='primary' />\n                </VehicleChipGroup>\n            </VehicleListItemButton>\n            <Divider className={classes.vehicleDivider} />\n        </div>\n    );\n}","// react-router-dom\nimport makeStyles from '@mui/styles/makeStyles';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Typography from '@mui/material/Typography';\n// THIS PROJECT\n// components\nimport AccordionPaper from '../AccordionPaper';\nimport StageVehicleList from '../../stages/StageVehicleList';\nimport PersonPlaceVehicleList from '../../people-places/PersonPlaceVehicleList';\n// types\nimport { IdName } from '../../../types/misc';\nimport { StageVehicleCount, PersonPlaceVehicleCount } from '../../../types/Stage';\n\n// PeoplePlaceList\nconst useStyles = makeStyles(theme => ({\n    list: {\n        margin: 'auto',\n        width: 'clamp(290px, 100%, 500px)',\n    },\n    accordianDetails: {\n        padding: 0,\n    },\n    vehicleList: {\n        width: '100%',\n    },\n}));\n\ntype Variant = 'peoplePlaces' | 'stages';\ninterface AccordianListProps {\n    variant: Variant;\n    accordianTitles: StageVehicleCount[] | PersonPlaceVehicleCount[];\n};\nexport default function AccordianList(props: AccordianListProps): React.ReactElement {\n    const classes = useStyles();\n    const { variant, accordianTitles } = props;\n\n    const determineTitleColor = (count: number, title: IdName) => {\n        if (variant === 'peoplePlaces') {\n            return title.name !== 'Small Town Auto Sales'\n                ? count > 5\n                    ? 'secondary'\n                    : 'primary'\n                : 'primary';\n        } else if (variant === 'stages') {\n            return title.name !== 'For Sale' ?\n                count > 5 ? 'secondary'\n                    : 'primary'\n                : 'primary';\n        };\n    };\n\n    return (\n        <div className={classes.list}>\n            {accordianTitles.filter(title => title.count).map(title => {\n                return (\n                    <div key={title.id}>\n                        <AccordionPaper>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />}>\n                                <Typography color={determineTitleColor(title.count, title)}>\n                                    {title.name} ({title.count.toLocaleString()})\n                                </Typography>\n                            </AccordionSummary>\n                            {variant === 'stages'\n                                ? <StageVehicleList stageId={title.id} />\n                                : <PersonPlaceVehicleList personPlaceId={title.id} />}\n                        </AccordionPaper>\n                    </div>);\n            })}\n        </div >\n    );\n};\n","// react\nimport { useEffect, useState, useCallback } from 'react';\n// materal-ui\nimport Divider from '@mui/material/Divider';\nimport VisibilityIcon from '@mui/icons-material/Visibility';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport AccordianVehicleList from '../common/vehicles/AccordianVehicleList';\n// services\nimport { getPersonPlaceVehicleCounts as getPersonPlaceVehicleCountsService } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// types\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { PersonPlaceVehicleCount } from '../../types/Stage';\n\nexport default function PeoplePlaces(): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n\n    // Get People/Places\n    const [peoplePlaces, setPeoplePlaces] = useState<PersonPlaceVehicleCount[]>([]);\n    const [getPeoplePlacesStatus, setGetPeoplePlacesStatus] = useState<GetRequestStatus>('loading');\n\n    const getPersonPlaceVehicleCounts = useCallback(\n        async () => {\n            setGetPeoplePlacesStatus('loading');\n            await delay();\n            getPersonPlaceVehicleCountsService()\n                .then(result => {\n                    mounted.current && setGetPeoplePlacesStatus(result.status as GetRequestStatus);\n                    mounted.current && result.status === 'success' && result.data && setPeoplePlaces(result.data);\n                    result.status === 'failed' && console.error(result);\n                }, e => {\n                    mounted.current && setGetPeoplePlacesStatus('failed');\n                    console.error(e);\n                });\n        }, [delay, mounted]\n    );\n\n    useEffect(() => { getPersonPlaceVehicleCounts(); }, [getPersonPlaceVehicleCounts]);\n\n    let list: JSX.Element;\n    if (getPeoplePlacesStatus === 'failed') {\n        list = <CenteredError errorMessage='Error loading People/Places view....' retryAction={() => window.location.reload()} />;\n    } else if (getPeoplePlacesStatus === 'loading') {\n        list = <LoadingList skeletonCount={10} />;\n    } else {\n        list = <AccordianVehicleList variant='peoplePlaces' accordianTitles={peoplePlaces} />;\n    };\n\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <IconContentTitle icon={<VisibilityIcon color='primary' />} variant='h5'>People/Places</IconContentTitle>\n                    <Divider />\n                </ContentHeader>\n                <br></br>\n                {list}\n            </LargeContent>\n        </LargeCard>\n    );\n}","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport FormControl from '@mui/material/FormControl';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// services\nimport { updateStageOrder } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { StageSummary, UpdatedStageOrder } from \"../../types/Stage\";\nimport { PostRequestStatus } from '../../types/ServiceRequests';\nimport { Set } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n    updateButtons: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n        alignItems: 'center',\n        marginTop: 10,\n    },\n    updateButton: {\n        width: 100,\n    },\n}));\n\ninterface ReorderButtonsProps {\n    mounted: React.MutableRefObject<boolean>;\n    setReorderStages: Set<boolean>;\n    originalStageOrder: StageSummary[];\n    editStageOrder: StageSummary[];\n    setEditStageOrder: Set<StageSummary[]>;\n    setOrderStagesStatus: Set<PostRequestStatus>;\n    getStageVehicleCounts: () => void;\n};\nexport default function ReorderButtons(props: ReorderButtonsProps): React.ReactElement {\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n    const {\n        mounted,\n        setReorderStages,\n        originalStageOrder,\n        editStageOrder, setEditStageOrder,\n        setOrderStagesStatus,\n        getStageVehicleCounts,\n    } = props;\n\n    const compareOrders = (original: StageSummary[], edit: StageSummary[]) => {\n        for (let i = 0; i < original.length; ++i) {\n            if (original[i] !== edit[i]) return false;\n        };\n        return true;\n    };\n\n    const updateStageOrderClick = async () => {\n        let newStageOrder: UpdatedStageOrder[] = [];\n\n        editStageOrder.forEach((stage, index) => {\n            if (stage !== originalStageOrder[index]) {\n                newStageOrder.push({\n                    id: stage.id,\n                    order: index\n                });\n            };\n        });\n        setOrderStagesStatus('loading');\n        await delay();\n        updateStageOrder(newStageOrder)\n            .then(result => {\n                mounted && setOrderStagesStatus(result.status);\n                mounted && result.status === 'failed' && console.error(result);\n                result.status === 'success' && getStageVehicleCounts();\n                mounted && setReorderStages(false);\n            }, e => {\n                mounted && setOrderStagesStatus('failed');\n                console.error(e);\n            });\n    };\n\n    const cancelClick = () => {\n        setReorderStages(false);\n        setEditStageOrder(originalStageOrder);\n    };\n\n    return (\n        <FormControl className={classes.updateButtons}>\n            <Button className={classes.updateButton} onClick={cancelClick}>cancel</Button>\n            {compareOrders(originalStageOrder, editStageOrder)\n                ? <Button disabled className={classes.updateButton}>update</Button>\n                : <Button className={classes.updateButton} onClick={updateStageOrderClick} color='primary'>update</Button>}\n        </FormControl>\n    );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// react-beautiful-dnd\nimport { DragDropContext, Droppable, Draggable, DropResult } from 'react-beautiful-dnd';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport DragIndicatorIcon from '@mui/icons-material/DragIndicator';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport ReorderButtons from './ReorderButtons';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getStages as getStagesService } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { StageSummary } from \"../../types/Stage\";\nimport { GetRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\nimport { Set } from '../../types/misc';\n\nconst useStyles = makeStyles(theme => ({\n    stage: {\n        marginTop: 5,\n        marginBottom: 5,\n        border: '1pt solid #999999',\n    },\n    list: {\n        backgroundColor: '#F9F9F9',\n        padding: theme.spacing(1),\n    },\n}));\n\ninterface ReorderStagesProps {\n    setReorderStages: Set<boolean>;\n    getStageVehicleCounts: () => void;\n};\nexport default function ReorderStages(props: ReorderStagesProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const classes = useStyles();\n    const { delay } = useDemoContext();\n    const { setReorderStages, getStageVehicleCounts } = props;\n\n    const [originalStageOrder, setOriginalStageOrder] = useState<StageSummary[]>([]);\n    const [editStageOrder, setEditStageOrder] = useState<StageSummary[]>([]);\n    const [getStagesStatus, setGetStagesStatus] = useState<GetRequestStatus>('');\n    const [orderStagesStatus, setOrderStagesStatus] = useState<PostRequestStatus>('');\n\n    const getStages = useCallback(async () => {\n        setGetStagesStatus('loading');\n        await delay();\n        getStagesService()\n            .then(result => {\n                mounted.current && setGetStagesStatus(result.status as GetRequestStatus);\n                if (result.status === 'success' && mounted.current && result.data) {\n                    setOriginalStageOrder(result.data);\n                    setEditStageOrder(result.data);\n                }\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setGetStagesStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted]\n    );\n\n    useEffect(() => {\n        getStages();\n    }, [getStages]);\n\n    const handleOnDragEnd = (result: DropResult) => {\n        const newStageOrder = [...editStageOrder];\n        const [reorderedStage] = newStageOrder.splice(result.source.index, 1);\n        if (result.destination) {\n            newStageOrder.splice(result.destination.index, 0, reorderedStage);\n        };\n        setEditStageOrder(newStageOrder);\n    };\n\n    const defaultReturn = (\n        <>\n            <Accordion disabled className={classes.stage}>\n                <AccordionSummary>\n                    <Typography>Assign</Typography>\n                </AccordionSummary>\n            </Accordion>\n            <DragDropContext onDragEnd={handleOnDragEnd}>\n                <Droppable droppableId='stages'>\n                    {(provided) => (\n                        <List className={classes.list} {...provided.droppableProps} ref={provided.innerRef}>\n                            {editStageOrder.map((stage, index) => {\n                                if (stage.name !== 'Assign' && stage.name !== 'For Sale') {\n                                    return (\n                                        <Draggable key={stage.id} draggableId={stage.id} index={index}>\n                                            {(provided) => (\n                                                <Accordion\n                                                    className={classes.stage}\n                                                    ref={provided.innerRef}\n                                                    {...provided.draggableProps}\n                                                    {...provided.dragHandleProps}\n                                                >\n                                                    <AccordionSummary\n                                                        expandIcon={<DragIndicatorIcon />}\n                                                    >\n                                                        <Typography>{stage.name}</Typography>\n                                                    </AccordionSummary>\n                                                </Accordion>\n                                            )}\n                                        </Draggable>\n                                    );\n                                } else return <span key={stage.id}></span>;\n                            })}\n                            {provided.placeholder}\n                        </List>\n                    )}\n                </Droppable>\n            </DragDropContext>\n            <Accordion disabled className={classes.stage}>\n                <AccordionSummary>\n                    <Typography>For Sale</Typography>\n                </AccordionSummary>\n            </Accordion>\n            <ReorderButtons\n                mounted={mounted}\n                setReorderStages={setReorderStages}\n                originalStageOrder={originalStageOrder}\n                editStageOrder={editStageOrder}\n                setEditStageOrder={setEditStageOrder}\n                setOrderStagesStatus={setOrderStagesStatus}\n                getStageVehicleCounts={getStageVehicleCounts}\n            />\n        </>\n    );\n\n    switch (getStagesStatus) {\n        case ('failed'):\n            return <CenteredError errorMessage='Error loading Edit Stage Order' />;\n        case ('loading'):\n            return <LoadingList skeletonCount={10} />;\n        default:\n            switch (orderStagesStatus) {\n                case ('failed'):\n                    return <CenteredError errorMessage='Error saving Edited Stage Order' />;\n                case ('loading'):\n                    return <LoadingList skeletonCount={10} />;\n                default:\n                    return defaultReturn;\n            }\n    }\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport Button from '@mui/material/Button';\nimport ImportExportIcon from '@mui/icons-material/ImportExport';\nimport Visibility from '@mui/icons-material/Visibility';\n// THIS PROJECT\n// components\nimport CenteredError from '../common/CenteredError';\nimport LoadingList from '../common/LoadingList';\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport { FlexEnd } from '../common/flex';\nimport AccordianVehicleList from '../common/vehicles/AccordianVehicleList';\nimport ReorderStages from './ReorderStages';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// services\nimport { getStageVehicleCounts as getStageVehicleCountsService } from '../../services/stages';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n// types\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport { StageVehicleCount } from '../../types/Stage';\n\nexport default function Stages(): React.ReactElement {\n  const mounted = useCheckMounted();\n  const { delay } = useDemoContext();\n\n  // Get Stages\n  const [stages, setStages] = useState<StageVehicleCount[]>([]);\n  const [getStagesStatus, setGetStagesStatus] = useState<GetRequestStatus>('loading');\n\n  const getStageVehicleCounts = useCallback(\n    async () => {\n      setGetStagesStatus('loading');\n      await delay();\n      getStageVehicleCountsService()\n        .then(result => {\n          mounted.current && setGetStagesStatus(result.status as GetRequestStatus);\n          mounted.current && result.status === 'success' && result.data && setStages(result.data);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGetStagesStatus('failed');\n          console.error(e);\n        });\n    }, [delay, mounted]\n  );\n\n  useEffect(() => { getStageVehicleCounts(); }, [getStageVehicleCounts]);\n\n  // for opening Reorder Stages \n  const [reorderStages, setReorderStages] = useState<boolean>(false);\n\n  const reorderClick = () => {\n    setReorderStages(reorderStages ? false : true);\n  };\n\n  let list: JSX.Element;\n  if (getStagesStatus === 'failed') {\n    list = <CenteredError errorMessage='Error loading Stages view...' retryAction={() => window.location.reload()} />;\n  } else if (getStagesStatus === 'loading') {\n    list = <LoadingList skeletonCount={10} />;\n  } else if (reorderStages) {\n    list = (\n      <ReorderStages\n        setReorderStages={setReorderStages}\n        getStageVehicleCounts={getStageVehicleCounts}\n      />\n    );\n  } else {\n    list = <AccordianVehicleList variant='stages' accordianTitles={stages} />;\n  };\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<Visibility color='primary' />} variant='h5'>Stages</IconContentTitle>\n          <Divider />\n        </ContentHeader>\n        <FlexEnd>\n          <Button\n            startIcon={<ImportExportIcon />}\n            onClick={reorderClick}\n          >\n            reorder\n          </Button>\n        </FlexEnd>\n        {list}\n      </LargeContent>\n    </LargeCard>\n  );\n}","export default function formatTimeText(milliseconds: number) {\n  if (milliseconds < (1000 * 60)) {\n    return `${Math.round(milliseconds / 1000)} secs`;\n  } else if (milliseconds < (1000 * 60 * 60)) {\n    return `${Math.round(milliseconds / (1000 * 60))} mins`;\n  } else if (milliseconds < (1000 * 60 * 60 * 24)) {\n    return `${Math.round(milliseconds / (1000 * 60 * 60))} hrs`;\n  } else {\n    // round days to one decimal point\n    return `${Math.round(milliseconds / (1000 * 60 * 60 * 24) * 10) / 10} days`;\n  };\n}","// react\nimport { useRef, useLayoutEffect } from 'react';\n// d3\nimport * as d3 from 'd3';\nimport { PieArcDatum } from 'd3-shape';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// types\nimport { NameValueData } from '../../types/Statistics';\n// utilities\nimport formatTimeText from '../../utilityFunctions/formatTimeText';\n\nconst useStyles = makeStyles({\n    donutChart: {\n        height: '100%',\n        width: '100%',\n    },\n});\n\ninterface DonutChartProps {\n    data: NameValueData[];\n    total: number;\n    totalLabel: string;\n};\nexport default function DonutChart(props: DonutChartProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { data, total, totalLabel } = props;\n\n    const d3Container = useRef(null);\n\n    useLayoutEffect(() => {\n        // functions and variables\n        const color = d3.scaleOrdinal()\n            .domain(data.map((d: NameValueData) => d.name))\n            .range(d3.schemeSet1);\n\n        const pie = d3.pie<NameValueData>()\n            .padAngle(0.005)\n            .sort(null)\n            .value(d => d.value);\n\n        const arcs = pie(data);\n\n        const width = 500;\n\n        const donutMarginSides = 50;\n        const donutMarginTop = 10;\n        const donutMarginBottom = 20;\n        const donutRadius = (width - (donutMarginSides * 2)) / 2;\n        const donutDiameter = donutRadius * 2;\n        const donutContainerHeight = donutDiameter + donutMarginTop + donutMarginBottom;\n\n        const legendItems = arcs.filter(d => (d.endAngle - d.startAngle) <= 0.25);\n        const legendItemRectSides = 20;\n        const legendItemRectMargin = 5;\n        const legendItemTotalHeight = legendItemRectSides + (legendItemRectMargin * 2);\n        const legendMarginTop = 0;\n        const legendMarginBottom = 10;\n        const legendMarginSides = 25;\n        const legendHeight = legendItems.length * legendItemTotalHeight + legendMarginTop + legendMarginBottom;\n\n\n        const height = donutContainerHeight + legendHeight;\n\n        const arc = () => {\n            return d3.arc<PieArcDatum<NameValueData>>().innerRadius(donutRadius * 0.7).outerRadius(donutRadius);\n        };\n\n        let fill = (d: d3.PieArcDatum<NameValueData>): string => color(d.data.name) as string;\n\n        const generateId = (name: string) => name.split(' ').join('');\n\n        // remove any old chart before appending a refreshed one\n        d3.select('#donut-chart').remove();\n\n        // full svg\n        const svg = d3.select(d3Container.current)\n            .append('svg')\n            .attr('id', 'donut-chart')\n            .attr(\"viewBox\", `0, 0, ${width}, ${height}`);\n\n        // shadow effect\n        const defs = svg.append('defs');\n\n        const filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '150%')\n            .attr('width', '150%');\n\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'blur');\n\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('dx', 3)\n            .attr('dy', 3)\n            .attr('result', 'offsetBlur');\n\n        const feMerge = filter.append('feMerge');\n\n        feMerge.append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge.append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n\n        // donut chart viewbox variables\n        const viewBoxY = legendHeight + donutMarginBottom - (height / 2);\n        const viewBoxX = - (width / 2);\n\n        // chart shadow\n        const shadowSvg = svg.append('svg')\n            .attr('viewBox', `${viewBoxX}, ${viewBoxY}, ${width} ,${donutDiameter}`);\n\n        shadowSvg.selectAll('path')\n            .data(pie([{ name: '', value: 1 }]))\n            .join('path')\n            .attr('fill', 'white')\n            .attr('d', arc())\n            .style('filter', 'url(#drop-shadow)');\n\n        // chart pieces\n        const chartSvg = svg.append('svg')\n            .attr('viewBox', `${viewBoxX}, ${viewBoxY}, ${width} ,${donutDiameter}`);\n\n        chartSvg.selectAll('path')\n            .data(arcs)\n            .join('path')\n            .attr('fill', fill)\n            .attr('d', arc())\n            .append('title')\n            .text(d => `${d.data.name}: ${formatTimeText(d.data.value)}`);\n\n        // labels\n        chartSvg.append('g')\n            .attr('id', 'labelG')\n            .attr('font-size', 14)\n            .attr('text-anchor', 'middle')\n            .selectAll('text')\n            .data(arcs)\n            .join('text')\n            .attr('id', d => generateId(d.data.name))\n            .attr('transform', d => `translate(${arc().centroid(d)})`)\n            .style('fill', 'white')\n            .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append('tspan')\n                .attr('y', '-0.4em')\n                .text(d => d.data.name))\n            .call(text => text.filter(d => (d.endAngle - d.startAngle) > 0.25).append('tspan')\n                .attr('x', 0)\n                .attr('y', '0.7em')\n                .text(d => `${formatTimeText(d.data.value)}`));\n\n        // label boxes\n        const labelBoxPaddingSides = 5;\n        const labelBoxPaddingTopBottom = 5;\n\n        chartSvg.insert('g', '#labelG')\n            .selectAll('rect')\n            .data(arcs)\n            .join('rect')\n            .attr('x',\n                (d: d3.PieArcDatum<NameValueData>): number => {\n                    const width = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().width;\n                    const totalWidth = width && width + labelBoxPaddingSides * 2;\n                    return (totalWidth && -(totalWidth / 2)) as number;\n                })\n            .attr('y',\n                (d: d3.PieArcDatum<NameValueData>): number => {\n                    const height = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().height;\n                    const totalHeight = height && height + labelBoxPaddingTopBottom * 2;\n                    return (totalHeight && -(totalHeight / 2)) as number;\n                })\n            .attr('width',\n                (d: d3.PieArcDatum<NameValueData>): number => {\n                    const width = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().width;\n                    const totalWidth = width && width + labelBoxPaddingSides * 2;\n                    return totalWidth as number;\n                })\n            .attr('height',\n                (d: d3.PieArcDatum<NameValueData>): number => {\n                    const height = document.querySelector(`#${generateId(d.data.name)}`)?.getBoundingClientRect().height;\n                    const totalHeight = height && height + labelBoxPaddingTopBottom * 2;\n                    return totalHeight as number;\n                })\n            .attr('fill', 'black')\n            .attr('fill-opacity', 0.5)\n            .attr('rx', 5)\n            .attr('transform', d => `translate(${arc().centroid(d)})`);\n\n        // center label\n        const totalGroup = chartSvg.append('g')\n            .append('text')\n            .attr('text-anchor', 'middle');\n\n        totalGroup\n            .append('tspan')\n            .text(total ? `${formatTimeText(total)}` : 'N/A')\n            .attr('font-size', 48);\n\n\n        totalGroup\n            .append('tspan')\n            .text(totalLabel)\n            .attr('y', 30)\n            .attr('x', 0);\n\n        // legend\n        const legend = svg.append('g');\n\n        const legendXStart = legendMarginSides;\n        const legendYStart = donutContainerHeight + legendMarginTop;\n\n        legend.selectAll('rect')\n            .data(legendItems)\n            .join('rect')\n            .attr('height', legendItemRectSides)\n            .attr('width', legendItemRectSides)\n            .attr('fill', fill)\n            .attr('stroke', 'black')\n            .attr('stroke-width', 0.5)\n            .attr('x', legendXStart)\n            .attr('y', (d, i) => legendYStart + (i * legendItemTotalHeight))\n            .style('filter', 'url(#drop-shadow)');\n\n        legend.selectAll('text')\n            .data(legendItems)\n            .join('text')\n            .attr('text-anchor', 'start')\n            .attr('font-size', 14)\n            .attr('x', legendXStart + legendItemTotalHeight)\n            .attr('y', (d, i) => legendYStart + (i * legendItemTotalHeight) + (legendItemRectSides * .75))\n            .text(d => `${d.data.name} / ${formatTimeText(d.data.value)}`);\n\n    }, [data, total, totalLabel]);\n\n    return (\n        <Paper ref={d3Container} className={classes.donutChart}></Paper>\n    );\n};\n","// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableHead from '@mui/material/TableHead';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport VehicleChip from '../../../common/vehicles/VehicleChip';\nimport SoldVehicleChip from '../../../common/vehicles/SoldVehicleChip';\nimport FormatTime from '../../../common/FormatTime';\n// types\nimport { VehicleTurnStats } from '../../../../types/Statistics';\n\nconst useStyles = makeStyles({\n    chip: {\n        minWidth: 95,\n    },\n});\n\ninterface OverviewDetailsTableProps {\n    turnStatistics: VehicleTurnStats;\n};\nexport default function OverviewDetailsTable(props: OverviewDetailsTableProps): React.ReactElement {\n    const classes = useStyles();\n    const { count, average, median, mode } = props.turnStatistics;\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label=\"overview stats table\">\n                <TableHead>\n                    <TableRow>\n                        <TableCell>Overview</TableCell>\n                        <TableCell align='center'>Average</TableCell>\n                        <TableCell align='center'>Median</TableCell>\n                        <TableCell align='center'>Mode (days)</TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\" align=\"left\">\n                            Become For Sale ({count.getForSale}):\n                        </TableCell>\n                        <TableCell align='center'>\n                            <VehicleChip\n                                className={classes.chip}\n                                color='primary'\n                                label={<FormatTime milliseconds={average.getForSale} />}\n                            />\n                        </TableCell>\n                        <TableCell align='center'>\n                            <VehicleChip\n                                className={classes.chip}\n                                color='primary'\n                                label={<FormatTime milliseconds={median.getForSale} />}\n                            />\n                        </TableCell>\n                        <TableCell align='center'>\n                            <VehicleChip\n                                className={classes.chip}\n                                color='primary'\n                                label={`${mode.getForSale} / ${mode.getForSalePercent}%`}\n                            />\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\" align=\"left\">\n                            To Be Sold ({count.getSold}):\n                        </TableCell>\n                        <TableCell align='center'>\n                            <SoldVehicleChip\n                                className={classes.chip}\n                                label={<FormatTime milliseconds={average.getSold} />}\n                            />\n                        </TableCell>\n                        <TableCell align='center'>\n                            <SoldVehicleChip\n                                className={classes.chip}\n                                label={<FormatTime milliseconds={median.getSold} />}\n                            />\n                        </TableCell>\n                        <TableCell align='center'>\n                            <SoldVehicleChip\n                                className={classes.chip}\n                                label={`${mode.getSold} / ${mode.getSoldPercent}%`}\n                            />\n                        </TableCell>\n                    </TableRow>\n                    <TableRow>\n                        <TableCell component=\"th\" scope=\"row\" align=\"left\">\n                            Total Turn Time ({count.total}):\n                        </TableCell>\n                        <TableCell align='center'>\n                            <VehicleChip\n                                className={classes.chip}\n                                label={<FormatTime milliseconds={average.total} />}\n                            />\n                        </TableCell>\n                        <TableCell align='center'>\n                            <VehicleChip\n                                className={classes.chip}\n                                label={<FormatTime milliseconds={median.total} />}\n                            />\n                        </TableCell>\n                        <TableCell align='center'>\n                            <VehicleChip\n                                className={classes.chip}\n                                label={`${mode.total} / ${mode.totalPercent}%`}\n                            />\n                        </TableCell>\n                    </TableRow>\n                </TableBody>\n            </Table>\n        </TableContainer>\n    );\n}","// react\nimport { useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Button from '@mui/material/Button';\nimport AddIcon from '@mui/icons-material/Add';\nimport RemoveIcon from '@mui/icons-material/Remove';\nimport Collapse from '@mui/material/Collapse';\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        marginTop: theme.spacing(2),\n    },\n}));\n\ninterface DetailsButtonProps {\n    children: React.ReactChild | React.ReactChild[];\n};\nexport default function DetailsButton(props: DetailsButtonProps): React.ReactElement {\n    const classes = useStyles();\n    const { children } = props;\n    const [showDetails, setShowDetails] = useState<boolean>(false);\n\n    const toggleShowDetails = () => {\n        showDetails && setShowDetails(false);\n        !showDetails && setShowDetails(true);\n    };\n\n    return (\n        <>\n            <Button\n                startIcon={!showDetails ? <AddIcon /> : <RemoveIcon />}\n                onClick={toggleShowDetails}\n                size='large'\n                className={classes.button}\n            >\n                Details\n            </Button>\n            <Collapse in={showDetails} timeout='auto' style={{ width: '100%' }}>\n                {children}\n            </Collapse>\n        </>\n    );\n}","// material-ui\nimport Skeleton from '@mui/material/Skeleton';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../../../common/flex';\nimport DonutChart from '../../../common/DonutChart';\nimport CenteredError from '../../../common/CenteredError';\nimport OverviewDetailsTable from './OverviewDetailsTable';\nimport DetailsButton from '../DetailsButton';\n// types\nimport { VehicleTurnStats, NameValueData } from '../../../../types/Statistics';\nimport { GetRequestStatus } from '../../../../types/ServiceRequests';\n\ninterface OverviewStatisticsProps {\n    turnStatistics: VehicleTurnStats | null;\n    getTurnStatsStatus: GetRequestStatus;\n};\nexport default function OverviewStatistics(props: OverviewStatisticsProps): React.ReactElement {\n    const { turnStatistics, getTurnStatsStatus } = props;\n    const count = turnStatistics?.count;\n    const average = turnStatistics?.average;\n    const median = turnStatistics?.median;\n    const mode = turnStatistics?.mode;\n\n    const chartData: NameValueData[] = average\n        ? [\n            { name: 'Recondition Time', value: average.getForSale },\n            { name: 'To Get Sold', value: average.getSold }\n        ]\n        : [];\n\n    if (getTurnStatsStatus === 'loading') {\n        return (\n            <Paper>\n                <FlexCenter flexDirection='column' sx={{ height: 500 }}>\n                    <Skeleton variant='rectangular' height={'90%'} width={'90%'} style={{ margin: 'auto' }} />\n                </FlexCenter>\n            </Paper>\n        );\n    } else if (getTurnStatsStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to load statistics...' retryAction={() => window.location.reload()} />;\n    } else {\n        return (\n            <>\n                {turnStatistics && count && average && median && mode\n                    ? <FlexCenter flexDirection='column'>\n                        <DonutChart\n                            data={chartData}\n                            total={average.total}\n                            totalLabel='avg total time to be sold'\n                        />\n                        <DetailsButton>\n                            <OverviewDetailsTable turnStatistics={turnStatistics} />\n                        </DetailsButton>\n                    </FlexCenter>\n                    : <></>}\n            </>\n        );\n    };\n}","// material-ui\nimport Dialog from '@mui/material/Dialog';\nimport Paper from '@mui/material/Paper';\nimport Typography from '@mui/material/Typography';\nimport { makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles({\n    dialog: {\n        padding: 10,\n    },\n});\n\ninterface FullNameDialogProps {\n    open: boolean;\n    selectedValue: string;\n    onClose: () => void;\n};\nexport default function FullNameDialog(props: FullNameDialogProps): React.ReactElement {\n    const classes = useStyles();\n    const { onClose, selectedValue, open } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    return (\n        <Dialog onClose={handleClose} open={open}>\n            <Paper className={classes.dialog}>\n                <Typography variant='subtitle1'>{selectedValue}</Typography>\n            </Paper>\n        </Dialog>\n    );\n}","// react\nimport { useState } from 'react';\nimport makeStyles from '@mui/styles/makeStyles';\nimport Paper from '@mui/material/Paper';\nimport List from '@mui/material/List';\nimport Typography from '@mui/material/Typography';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n// THIS PROJECT\n// components\nimport AccordionPaper from '../../common/AccordionPaper';\nimport FormatTime from '../../common/FormatTime';\nimport FullNameDialog from './FullNameDialog';\nimport { FlexStart } from '../../common/flex';\n// types\nimport { DetailedAssignmentStats } from '../../../types/Statistics';\n\nconst useStyles = makeStyles({\n    list: {\n        width: '100%',\n    },\n    accordionDetails: {\n        padding: 0,\n    },\n    shortData: {\n        minWidth: 50,\n        textAlign: 'left',\n    },\n    longData: {\n        minWidth: 50,\n    },\n    personPlaceLabel: {\n        width: 'clamp(150px, 50vw, 200px)',\n        whiteSpace: 'nowrap',\n    },\n    subLabel: {\n        maxWidth: 175,\n        maxHeight: 20,\n        overflowWrap: 'break-word',\n        whiteSpace: 'nowrap',\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        cursor: 'pointer',\n        marginRight: 4,\n    },\n    timeDifferenceLabel: {\n        fontSize: 10,\n    },\n    tableContainer: {\n        width: '100%',\n    },\n    table: {\n        minWidth: 450,\n    },\n});\n\ninterface StatisticDetailsProps {\n    statistics: DetailedAssignmentStats[];\n};\nexport default function StatisticDetails(props: StatisticDetailsProps): React.ReactElement {\n    const classes = useStyles();\n    const { statistics } = props;\n\n    const [openFullNameDialog, setOpenFullNameDialog] = useState(false);\n    const [selectedValue, setSelectedValue] = useState('');\n\n    const handleClickFullName = (value: string): void => {\n        setOpenFullNameDialog(true);\n        setSelectedValue(value);\n    };\n\n    const handleClose = () => {\n        setOpenFullNameDialog(false);\n        setSelectedValue('');\n    };\n\n    return (\n        <>\n            <List className={classes.list}>\n                {statistics.map((doc: DetailedAssignmentStats) => {\n                    return <div key={doc.name}>\n                        <AccordionPaper>\n                            <AccordionSummary\n                                expandIcon={<ExpandMoreIcon />}\n                            >\n                                <Typography>{doc.name} ({doc.count})</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails className={classes.accordionDetails}>\n                                <TableContainer className={classes.tableContainer} component={Paper}>\n                                    <Table className={classes.table} size='small' aria-label='stage statistics table'>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>Person/Place</TableCell>\n                                                <TableCell>Avg</TableCell>\n                                                <TableCell>Median</TableCell>\n                                                <TableCell>Mode  <span className={classes.timeDifferenceLabel}>(days)</span></TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            <TableRow>\n                                                <TableCell component='th' scope='row'>All ({doc.count})</TableCell>\n                                                <TableCell>\n                                                    <div className={classes.shortData}>\n                                                        <FormatTime milliseconds={doc.average} />\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div className={classes.shortData}>\n                                                        <FormatTime milliseconds={doc.median} />\n                                                    </div>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <div className={classes.longData}>\n                                                        {doc.mode} / {doc.modePercent}%\n                                                    </div>\n                                                </TableCell>\n                                            </TableRow>\n                                            {doc.portions.map(doc => {\n                                                return <TableRow key={doc.name}>\n                                                    <TableCell component='th' scope='row' onClick={() => handleClickFullName(doc.name)}>\n                                                        <div className={classes.personPlaceLabel}>\n                                                            <FlexStart whiteSpace='nowrap'>\n                                                                <div className={classes.subLabel}>{doc.name} </div>\n                                                                <div> ({doc.count})</div>\n                                                            </FlexStart>\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div className={classes.shortData}>\n                                                            <FormatTime milliseconds={doc.average} />\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div className={classes.shortData}>\n                                                            <FormatTime milliseconds={doc.median} />\n                                                        </div>\n                                                    </TableCell>\n                                                    <TableCell>\n                                                        <div className={classes.longData}>\n                                                            {doc.mode} / {doc.modePercent}%\n                                                        </div>\n                                                    </TableCell>\n                                                </TableRow>;\n                                            })}\n                                        </TableBody>\n                                    </Table>\n                                </TableContainer>\n                            </AccordionDetails>\n                        </AccordionPaper>\n                    </div>;\n                })}\n            </List>\n            <FullNameDialog selectedValue={selectedValue} open={openFullNameDialog} onClose={handleClose} />\n        </>\n    );\n}","// types\nimport { FailedResult, GetSuccess } from '../types/ServiceResults';\nimport { VehicleTurnStats, StageAssignmentStats, StageAssignmentStatsInclPercentile } from '../types/Statistics';\n\nconst statistics = 'http://localhost:7000/api/statistics';\n\nexport async function getVehicleTurnStats(): Promise<GetSuccess<VehicleTurnStats> | FailedResult> {\n    const response = await fetch(statistics + '/vehicle-turn-statistics');\n    const json = await response.json();\n    return json;\n};\n\nexport async function getStagesStatistics(): Promise<GetSuccess<StageAssignmentStats> | FailedResult> {\n    const response = await fetch(statistics + '/stages-statistics');\n    const json = await response.json();\n    return json;\n};\n\nexport async function getPeoplePlacesStatistics(): Promise<GetSuccess<StageAssignmentStatsInclPercentile> | FailedResult> {\n    const response = await fetch(statistics + '/people-places-statistics');\n    const json = await response.json();\n    return json;\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Skeleton from '@mui/material/Skeleton';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport DonutChart from '../../common/DonutChart';\nimport CenteredError from '../../common/CenteredError';\nimport { FlexCenter } from '../../common/flex';\nimport StatisticDetails from './StatisticDetails';\nimport DetailsButton from './DetailsButton';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { getStagesStatistics as getStagesStatisticsService } from '../../../services/statistics';\n// types\nimport { NameValueData, DetailedAssignmentStats } from '../../../types/Statistics';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\ninterface StageStatisticsProps {\n    forSaleAvg: number,\n};\nexport default function StagesStatistics(props: StageStatisticsProps): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { forSaleAvg } = props;\n    const { delay } = useDemoContext();\n\n    const [getStatsStatus, setGetStatsStatus] = useState<GetRequestStatus>('loading');\n\n    const [chartData, setChartData] = useState<NameValueData[] | null>(null);\n    const [statistics, setStatistics] = useState<DetailedAssignmentStats[] | null>(null);\n\n    const getStagesStatistics = useCallback(async () => {\n        setGetStatsStatus('loading');\n        await delay();\n        getStagesStatisticsService()\n            .then(result => {\n                mounted.current && setGetStatsStatus(result.status as GetRequestStatus);\n                if (result.status === 'success' && mounted.current && result.data) {\n                    setChartData(result.data.avgOverview.filter(doc => doc.name !== 'For Sale'));\n                    setStatistics(result.data.details);\n                }\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setGetStatsStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted]\n    );\n\n    useEffect(() => {\n        getStagesStatistics();\n    }, [getStagesStatistics]);\n\n    if (getStatsStatus === 'loading') {\n        return (\n            <Paper>\n                <FlexCenter flexDirection='column' sx={{ height: 500 }}>\n                    <Skeleton variant='rectangular' height={'90%'} width={'90%'} style={{ margin: 'auto' }} />\n                </FlexCenter>\n            </Paper>\n        );\n    };\n    if (getStatsStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to load statistics...' retryAction={() => window.location.reload()} />;\n    };\n    return (\n        <>\n            {chartData && statistics\n                ? <FlexCenter flexDirection='column'>\n                    <DonutChart\n                        data={chartData}\n                        total={forSaleAvg}\n                        totalLabel='avg time to get \"For Sale\"'\n                    />\n                    <DetailsButton>\n                        <StatisticDetails statistics={statistics} />\n                    </DetailsButton>\n                </FlexCenter>\n                : <></>}\n        </>\n    );\n}","// react\nimport { useRef, useLayoutEffect } from 'react';\n// d3\nimport * as d3 from 'd3';\n// mui\nimport makeStyles from '@mui/styles/makeStyles';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// types\nimport { NameValueDataInclPercentile } from '../../types/Statistics';\n// utilities\nimport formatTimeText from '../../utilityFunctions/formatTimeText';\n\nconst useStyles = makeStyles({\n    chart: {\n        height: '100%',\n        width: '100%'\n    }\n});\n\ninterface VerticalBarChartProps {\n    data: NameValueDataInclPercentile[];\n};\nexport default function VerticalBarChart(props: VerticalBarChartProps): React.ReactElement {\n    const classes = useStyles();\n\n    const { data } = props;\n\n    const d3Container = useRef(null);\n\n    useLayoutEffect(() => {\n        // functions and variables\n        const barHeight = 20;\n        const barMargin = 30;\n        const paddingBottom = 20;\n\n        const height = (barHeight + barMargin) * data.length + paddingBottom;\n        const width = 500;\n        const padding = 20;\n\n        const sortedData = [...data].sort((a, b) => b.value - a.value);\n\n        const xScale = d3.scaleLinear()\n            .domain([0, d3.max(data.map(d => d.value))] as [number, number])\n            .range([0, width - (padding * 2) - 75]);\n\n        // const fill = (d: NameValueDataInclPercentile) => color(d.name);\n\n        const fill = (d: NameValueDataInclPercentile) => {\n            if (d.avgPercentile >= 90) {\n                return '#9500ae';\n            } else if (d.avgPercentile >= 80) {\n                return '#d500f9';\n            } else if (d.avgPercentile >= 60) {\n                return '#dd33fa';\n            } else if (d.avgPercentile >= 40) {\n                return '#757de8';\n            } else if (d.avgPercentile >= 20) {\n                return '#3f51b5';\n            } else {\n                return '#002984';\n            }\n        };\n\n        // remove any old chart before appending a refreshed one;\n        d3.select('#bar-chart').remove();\n\n        // full svg\n        const svg = d3.select(d3Container.current)\n            .append('svg')\n            .attr('id', 'bar-chart')\n            .attr(\"viewBox\", `0, 0, ${width}, ${height}`);\n\n        // shadow effect\n        const defs = svg.append('defs');\n\n        const filter = defs.append('filter')\n            .attr('id', 'drop-shadow')\n            .attr('height', '150%')\n            .attr('width', '150%');\n\n        filter.append('feGaussianBlur')\n            .attr('in', 'SourceAlpha')\n            .attr('stdDeviation', 2)\n            .attr('result', 'blur');\n\n        filter.append('feOffset')\n            .attr('in', 'blur')\n            .attr('dx', 3)\n            .attr('dy', 3)\n            .attr('result', 'offsetBlur');\n\n        const feMerge = filter.append('feMerge');\n\n        feMerge.append('feMergeNode')\n            .attr('in', 'offsetBlur');\n        feMerge.append('feMergeNode')\n            .attr('in', 'SourceGraphic');\n\n        // chart rectangles\n        svg.selectAll('rect')\n            .data(sortedData)\n            .join('rect')\n            .attr('fill', fill)\n            .attr('x', padding)\n            .attr('y', (d, i) => i * (barHeight + barMargin) + barMargin)\n            .attr('height', barHeight)\n            .attr('width', d => xScale(d.value))\n            .attr('stroke', 'black')\n            .attr('stroke-width', 0.25)\n            .attr('rx', 5)\n            .style('filter', 'url(#drop-shadow)');\n\n        // labels\n        svg.append('g')\n            .attr('font-size', 14)\n            .selectAll('text')\n            .data(sortedData)\n            .join('text')\n            .attr('transform',\n                (d, i) => `translate(${padding}, ${i * (barHeight + barMargin) + (barMargin * 0.9)})`)\n            .call(text => text.append('tspan')\n                .text(d => d.name)\n                .attr('font-family', 'roboto')\n                .attr('font-size', 16)\n                .attr('y', -3))\n            .call(text => text.append('tspan')\n                .attr('x', d => xScale(d.value) + 15)\n                .attr('y', barHeight)\n                .attr('font-style', 'normal')\n                .text(d => `(${formatTimeText(d.value)})`));\n    }, [data]);\n\n    return (\n        <Paper ref={d3Container} className={classes.chart}></Paper>\n    );\n}","// react\nimport { useEffect, useState, useCallback } from 'react';\n// material-ui\nimport Skeleton from '@mui/material/Skeleton';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport VerticalBarChart from '../../common/VerticalBarChart';\nimport CenteredError from '../../common/CenteredError';\nimport { FlexCenter } from '../../common/flex';\nimport { DetailedAssignmentStats, NameValueDataInclPercentile } from '../../../types/Statistics';\nimport StatisticDetails from './StatisticDetails';\nimport DetailsButton from './DetailsButton';\n// hooks\nimport { useCheckMounted } from '../../../hooks';\n// contexts\nimport { useDemoContext } from '../../../contexts/DemoContext';\n// services\nimport { getPeoplePlacesStatistics as getPeoplePlacesStatisticsService } from '../../../services/statistics';\n// types\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\nexport default function PeoplePlacesStatistics(): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n\n    const [getStatsStatus, setGetStatsStatus] = useState<GetRequestStatus>('loading');\n\n    const [chartData, setChartData] = useState<NameValueDataInclPercentile[] | null>(null);\n    const [statistics, setStatistics] = useState<DetailedAssignmentStats[] | null>(null);\n\n    const getPeoplePlaceStatistics = useCallback(async () => {\n        setGetStatsStatus('loading');\n        await delay();\n        getPeoplePlacesStatisticsService()\n            .then(result => {\n                mounted.current && setGetStatsStatus(result.status as GetRequestStatus);\n                if (result.status === 'success' && mounted.current && result.data) {\n                    setChartData(result.data.avgOverview.filter(doc => doc.name !== 'For Sale'));\n                    setStatistics(result.data.details);\n                }\n                result.status === 'failed' && console.error(result);\n            }, e => {\n                mounted.current && setGetStatsStatus('failed');\n                console.error(e);\n            });\n    },\n        [delay, mounted]\n    );\n\n    useEffect(() => {\n        getPeoplePlaceStatistics();\n    }, [getPeoplePlaceStatistics]);\n\n    if (getStatsStatus === 'loading') {\n        return (\n            <Paper>\n                <FlexCenter flexDirection='column' sx={{ height: 500 }}>\n                    <Skeleton variant='rectangular' height={'90%'} width={'90%'} style={{ margin: 'auto' }} />\n                </FlexCenter>\n            </Paper>\n        );\n    };\n    if (getStatsStatus === 'failed') {\n        return <CenteredError errorMessage='Failed to load statistics...' retryAction={() => window.location.reload()} />;\n    };\n    return (\n        <>\n            {chartData && statistics\n                ? <FlexCenter flexDirection='column'>\n                    <VerticalBarChart data={chartData} />\n                    <DetailsButton>\n                        <StatisticDetails statistics={statistics} />\n                    </DetailsButton>\n                </FlexCenter>\n                : <></>}\n        </>\n    );\n}","// react\nimport { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory, useParams } from 'react-router-dom';\n// material-ui\nimport Tabs from '@mui/material/Tabs';\n// THIS PROJECT\n// components\nimport DarkTab from '../../common/DarkTab';\nimport OverviewStats from './overview/OverviewStats';\nimport StagesStats from './StagesStats';\nimport PeoplePlacesStats from './PeoplePlacesStats';\n// types\nimport { VehicleTurnStats } from '../../../types/Statistics';\nimport { GetRequestStatus } from '../../../types/ServiceRequests';\n\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n};\nfunction TabPanel(props: TabPanelProps) {\n    const { children, value, index, ...other } = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`analytics-tabpanel-${index}`}\n            aria-labelledby={`analytics-tab-${index}`}\n            {...other}\n        >\n            {value === index && (\n                <div>{children}</div>\n            )}\n        </div>\n    );\n};\n\nfunction a11yProps(index: any) {\n    return {\n        id: `analytics-tab-${index}`,\n        'aria-controls': `analytics-tabpanel-${index}`,\n    };\n};\n\ninterface AnalyticsTabsProps {\n    turnStatistics: VehicleTurnStats | null;\n    getTurnStatsStatus: GetRequestStatus;\n};\nexport default function AnalyticsTabs(props: AnalyticsTabsProps): React.ReactElement {\n    const history = useHistory();\n\n    const { turnStatistics, getTurnStatsStatus } = props;\n\n    interface ParamTypes {\n        tab: 'overview' | 'stages' | 'peoplePlaces';\n    };\n\n    let { tab } = useParams<ParamTypes>();\n    const [tabValue, setTabValue] = useState<any>(tab);\n\n    useEffect(() => setTabValue(tab), [tab]);\n\n    const changeTab = (event: React.ChangeEvent<{}>, newValue: string) => {\n        setTabValue(newValue);\n        history.push(`/analytics/${newValue}`);\n    };\n\n    return (\n        <div>\n            <Tabs\n                centered\n                value={tabValue}\n                indicatorColor='primary'\n                textColor='primary'\n                onChange={changeTab}\n                aria-label='vehicle details navigation'\n            >\n                <DarkTab label='Overview' value='overview' {...a11yProps('overview')} />\n                <DarkTab label='Stages' value='stages' {...a11yProps('stages')} />\n                <DarkTab label='People/Places' value='peoplePlaces' {...a11yProps('peoplePlaces')} />\n            </Tabs>\n            <TabPanel value={tabValue} index='overview'>\n                <OverviewStats turnStatistics={turnStatistics} getTurnStatsStatus={getTurnStatsStatus} />\n            </TabPanel>\n            <TabPanel value={tabValue} index='stages'>\n                <StagesStats forSaleAvg={turnStatistics ? turnStatistics.average.getForSale : 0} />\n            </TabPanel>\n            <TabPanel value={tabValue} index='peoplePlaces'>\n                <PeoplePlacesStats />\n            </TabPanel>\n        </div>\n    );\n};\n","// react\nimport { useState, useEffect, useCallback } from 'react';\n// material-ui\nimport Divider from '@mui/material/Divider';\nimport EqualizerIcon from '@mui/icons-material/Equalizer';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport { VehicleTurnStats } from '../../types/Statistics';\nimport { GetRequestStatus } from '../../types/ServiceRequests';\nimport AnalyticsTabs from './analyticsTabs/AnalyticsTabs';\n// services\nimport { getVehicleTurnStats as getVehicleTurnStatsService } from '../../services/statistics';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// contexts\nimport { useDemoContext } from '../../contexts/DemoContext';\n\nexport default function Statistics(): React.ReactElement {\n    const mounted = useCheckMounted();\n    const { delay } = useDemoContext();\n\n    const [vehicleTurnStats, setVehicleTurnStats] = useState<VehicleTurnStats | null>(null);\n    const [getTurnStatsStatus, setGetTurnStatsStatus] = useState<GetRequestStatus>('');\n\n    const getVehicleTurnStats = useCallback(\n        async () => {\n            setGetTurnStatsStatus('loading');\n            await delay();\n            getVehicleTurnStatsService()\n                .then(result => {\n                    mounted.current && setGetTurnStatsStatus(result.status as GetRequestStatus);\n                    result.status === 'success' && mounted.current && result.data && setVehicleTurnStats(result.data);\n                    result.status === 'failed' && console.error(result);\n                }, e => {\n                    mounted.current && setGetTurnStatsStatus('failed');\n                    console.error(e);\n                });\n        },\n        [delay, mounted]\n    );\n\n    useEffect(() => { getVehicleTurnStats(); }, [getVehicleTurnStats]);\n\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <IconContentTitle icon={<EqualizerIcon color='primary' />} variant='h5'>Analytics</IconContentTitle>\n                </ContentHeader>\n                <Divider />\n                <AnalyticsTabs turnStatistics={vehicleTurnStats} getTurnStatsStatus={getTurnStatsStatus} />\n            </LargeContent>\n        </LargeCard>\n    );\n}","// material-ui\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemIcon from '@mui/material/ListItemIcon';\nimport ListItemText from '@mui/material/ListItemText';\nimport DeleteForeverIcon from '@mui/icons-material/DeleteForever';\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\n// THIS PROJECT\n// types\nimport { DemoState } from '../../types/Demo';\n\ninterface ActionListProps {\n    demoState: DemoState;\n};\nexport default function ActionList(props: ActionListProps): React.ReactElement {\n    const {\n        clearDatabase,\n        addVehicleDescriptors,\n        addStages,\n        generateVehicles,\n    } = props.demoState;\n\n    const clearDatabaseLi: JSX.Element = (\n        <ListItem>\n            <ListItemIcon><DeleteForeverIcon color='secondary' /></ListItemIcon>\n            <ListItemText primary='Clear Database' />\n        </ListItem>\n    );\n\n    const addVehicleDescriptorsLi: JSX.Element = (\n        <ListItem>\n            <ListItemIcon><CreateNewFolderIcon color='primary' /></ListItemIcon>\n            <ListItemText primary='Add Vehicle Descriptors' />\n        </ListItem>\n    );\n\n    const addStagesLi: JSX.Element = (\n        <ListItem>\n            <ListItemIcon><CreateNewFolderIcon color='primary' /></ListItemIcon>\n            <ListItemText primary='Add Stages and People/Places' />\n        </ListItem>\n    );\n\n    const generateVehiclesLi: JSX.Element = (\n        <ListItem>\n            <ListItemIcon><CreateNewFolderIcon color='primary' /></ListItemIcon>\n            <ListItemText primary='Generate Demo Vehicles' />\n        </ListItem>\n    );\n\n    return (\n        <List id='demo-dialog-description'>\n            {clearDatabase && clearDatabaseLi}\n            {addVehicleDescriptors && addVehicleDescriptorsLi}\n            {addStages && addStagesLi}\n            {generateVehicles && generateVehiclesLi}\n        </List>\n    );\n}","// material-ui\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogTitle from '@mui/material/DialogTitle';\n// THIS PROJECT\n// components\nimport ActionList from './ActionList';\n// services\nimport {\n  clearDatabase as clearDatabaseService,\n  addVehicleDescriptors as addVehicleDescriptorsService,\n  addStages as addStagesService,\n  generateVehicles as generateVehiclesService,\n} from '../../services/demo';\n// contexts\nimport { useAuthContext } from '../../contexts/AuthContext';\n// types\nimport { DemoState } from '../../types/Demo';\nimport { Set } from '../../types/misc';\nimport { DeleteRequestStatus } from '../../types/ServiceRequests';\n\ninterface DemoDialogProps {\n  demoState: DemoState;\n  open: boolean;\n  setOpen: Set<boolean>;\n};\nexport default function DemoDialog(props: DemoDialogProps): React.ReactElement {\n  const { getUserPreferences } = useAuthContext();\n  const { demoState, open, setOpen } = props;\n\n  const {\n    mounted,\n    setLoading,\n    clearDatabase,\n    setClearDatabaseStatus,\n    addVehicleDescriptors,\n    setAddVehicleDescriptorsStatus,\n    addStages,\n    setAddStagesStatus,\n    generateVehicles,\n    setGenerateVehiclesStatus,\n    vehiclesAmount,\n    months\n  } = demoState;\n\n  const clearDatabaseClick = async () => {\n    if (!clearDatabase) { return; } else {\n      setClearDatabaseStatus('loading');\n      await clearDatabaseService()\n        .then(result => {\n          mounted.current && setClearDatabaseStatus(result.status as DeleteRequestStatus);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setClearDatabaseStatus('failed');\n          console.error(e);\n        });\n      return;\n    };\n  };\n\n  const addVehicleDescriptorsClick = async () => {\n    if (!addVehicleDescriptors) { return; } else {\n      setAddVehicleDescriptorsStatus('loading');\n      await addVehicleDescriptorsService()\n        .then(result => {\n          mounted.current && setAddVehicleDescriptorsStatus(result.status);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setAddVehicleDescriptorsStatus('failed');\n          console.error(e);\n        });\n    };\n  };\n\n  const addStagesClick = async () => {\n    if (!addStages) { return; } else {\n      setAddStagesStatus('loading');\n      await addStagesService()\n        .then(result => {\n          mounted.current && setAddStagesStatus(result.status);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setAddStagesStatus('failed');\n          console.error(e);\n        });\n    };\n  };\n\n  const generateVehiclesClick = async () => {\n    if (!generateVehicles) { return; } else {\n      setGenerateVehiclesStatus('loading');\n      await generateVehiclesService(vehiclesAmount, months)\n        .then(result => {\n          mounted.current && setGenerateVehiclesStatus(result.status);\n          result.status === 'failed' && console.error(result);\n        }, e => {\n          mounted.current && setGenerateVehiclesStatus('failed');\n          console.error(e);\n        });\n    }\n  };\n\n  const continueClick = async () => {\n    setLoading(true);\n    await clearDatabaseClick();\n    await Promise.all([\n      addVehicleDescriptorsClick(),\n      addStagesClick()\n    ]);\n    await generateVehiclesClick();\n    setLoading(false);\n    getUserPreferences();\n  };\n\n  return (\n    <Dialog\n      open={open}\n      aria-labelledby='demo-dialog-title'\n      aria-describedby='demo-dialog-description'\n    >\n      <DialogTitle id='demo-dialog-title'>Continue with the following <strong>PERMANENT</strong> action(s)?</DialogTitle>\n      <DialogContent>\n        <ActionList demoState={demoState} />\n      </DialogContent>\n      <DialogActions>\n        <Button color='primary' onClick={() => setOpen(false)}>\n          go back\n        </Button>\n        <Button color='primary' onClick={continueClick}>\n          continue\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}","// react\nimport { useEffect, useState } from 'react';\n// material-ui\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport DemoDialog from './DemoDialog';\n// types\nimport { DemoState } from '../../types/Demo';\n\ninterface DemoContinueButtonProps {\n  demoState: DemoState;\n};\nexport default function DemoContinueButton(props: DemoContinueButtonProps): React.ReactElement {\n  const { demoState } = props;\n\n  const [openDialog, setOpenDialog] = useState<boolean>(false);\n\n  const {\n    loading,\n    clearDatabase,\n    addVehicleDescriptors,\n    addStages,\n    generateVehicles,\n    vehiclesAmountError,\n    monthsError\n  } = demoState;\n\n  useEffect(() => { loading && setOpenDialog(false); }, [loading]);\n  return (\n    <>\n      <Button\n        color='primary'\n        variant='outlined'\n        onClick={() => setOpenDialog(true)}\n        disabled={(!clearDatabase && !addVehicleDescriptors && !addStages && !generateVehicles) || (vehiclesAmountError !== '' || monthsError !== '')}\n      >\n        continue\n      </Button>\n      <DemoDialog demoState={demoState} open={openDialog} setOpen={setOpenDialog} />\n    </>\n  );\n}","// material-ui\nimport TextField from '@mui/material/TextField';\nimport Collapse from '@mui/material/Collapse';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\n// types\nimport { Set } from '../../types/misc';\n\ninterface GenerateDemoVehiclesProps {\n    generateVehicles: boolean;\n    vehiclesAmountInput: string;\n    setVehiclesAmountInput: Set<string>;\n    vehiclesAmountError: string;\n    setVehiclesAmountError: Set<string>;\n    setVehiclesAmount: Set<string>;\n    months: string;\n    setMonths: Set<string>;\n    monthsError: string;\n    setMonthsError: Set<string>;\n}\nexport default function GenerateDemoVehicles(props: GenerateDemoVehiclesProps): React.ReactElement {\n    const {\n        generateVehicles,\n        vehiclesAmountInput, setVehiclesAmountInput,\n        vehiclesAmountError, setVehiclesAmountError,\n        setVehiclesAmount,\n        months, setMonths,\n        monthsError, setMonthsError\n    } = props;\n\n    const changeVehiclesAmount = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const vehiclesAmountInputTmp = e.target.value.trim()\n            // remove all non digit inputs \n            .replace(/[^0-9]/g, '')\n            // add comma seperators\n            .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n        setVehiclesAmountInput(vehiclesAmountInputTmp);\n        const vehiclesAmountTmp = vehiclesAmountInputTmp.replace(',', '');\n        setVehiclesAmount(vehiclesAmountTmp);\n        const formatTest = /^\\d+$/;\n        if (!formatTest.test(vehiclesAmountTmp)) {\n            setVehiclesAmountError('Vehice Amount must be a whole number');\n        } else if (parseInt(vehiclesAmountTmp) > 10000) {\n            setVehiclesAmountError('Vehicle Amount must be less than 10,000');\n        } else {\n            setVehiclesAmountError('');\n        }\n    };\n\n    const changeMonths = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const monthsTmp = e.target.value.trim().replace(/[^0-9]/g, '');\n        setMonths(monthsTmp);\n        const formatTest = /^\\d+$/;\n        if (!formatTest.test(monthsTmp)) {\n            setMonthsError('Months must be a whole number');\n        } else if (parseInt(monthsTmp) > 36) {\n            setMonthsError('Months must be less than or equal to 36');\n        } else {\n            setMonthsError('');\n        }\n    };\n\n    return (\n        <Collapse in={generateVehicles}>\n            <FlexCenter flexDirection='column'>\n                <TextField\n                    size='small'\n                    margin='normal'\n                    id='vehicle-amount'\n                    label='Amount of Vehicles to Add'\n                    variant='outlined'\n                    value={vehiclesAmountInput}\n                    onChange={changeVehiclesAmount}\n                    error={vehiclesAmountError ? true : false}\n                    helperText={vehiclesAmountError}\n                />\n                <TextField\n                    size='small'\n                    margin='normal'\n                    id='months'\n                    label='Amount of Months to Go Back'\n                    variant='outlined'\n                    value={months}\n                    onChange={changeMonths}\n                    error={monthsError ? true : false}\n                    helperText={monthsError}\n                />\n            </FlexCenter>\n        </Collapse>\n    );\n}\n","// material-ui\nimport CircularProgress from '@mui/material/CircularProgress';\nimport { styled } from '@mui/system';\nimport Dialog from '@mui/material/Dialog';\nimport { Typography } from '@mui/material';\n// THIS PROJECT\n// components\nimport { FlexCenter, FlexSpaceAround } from '../common/flex';\n// types\nimport { GetRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\n\nconst LoadingFlexSpaceAround = styled(FlexSpaceAround)(({ theme }) => ({\n    height: 200,\n}));\n\ninterface LoadingDemoActionsProps {\n    loading: boolean;\n    clearDatabaseStatus: GetRequestStatus;\n    addVehicleDescriptorsStatus: PostRequestStatus;\n    addStagesStatus: PostRequestStatus;\n    generateVehiclesStatus: PostRequestStatus;\n}\nexport default function LoadingDemoActions(props: LoadingDemoActionsProps): React.ReactElement {\n    const {\n        loading,\n        clearDatabaseStatus,\n        addVehicleDescriptorsStatus,\n        addStagesStatus,\n        generateVehiclesStatus\n    } = props;\n\n    return (\n        <Dialog open={loading} fullWidth={true} >\n            <LoadingFlexSpaceAround flexDirection='column'>\n                <CircularProgress />\n                <FlexCenter flexDirection='column' sx={{ textAlign: 'center' }}>\n                    {clearDatabaseStatus === 'loading' && <Typography>...Clearing Database</Typography>}\n                    {addVehicleDescriptorsStatus === 'loading' && <Typography>...Adding Vehicle Descriptors</Typography>}\n                    {addStagesStatus === 'loading' && <Typography>...Adding Stages/People/Places</Typography>}\n                    {generateVehiclesStatus === 'loading' && <>\n                        <Typography>...Generating Vehicles</Typography>\n                        <Typography>(this could take several minutes)</Typography>\n                    </>}\n                </FlexCenter>\n            </LoadingFlexSpaceAround>\n        </Dialog>\n    );\n}","// react\nimport React, { useState, useEffect } from 'react';\n// react-router-dom\nimport { useHistory } from 'react-router-dom';\n// material-ui\nimport { Theme } from '@mui/material/styles';\nimport makeStyles from '@mui/styles/makeStyles';\nimport FormControl from '@mui/material/FormControl';\nimport FormGroup from '@mui/material/FormGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Paper from '@mui/material/Paper';\n// THIS PROJECT\n// components\nimport { FlexCenter } from '../common/flex';\nimport DemoContinueButton from './DemoContinueButton';\nimport CenteredError from '../common/CenteredError';\nimport GenerateDemoVehicles from './GenerateDemoVehicles';\nimport LoadingDemoActions from './LoadingDemoActions';\n// hooks\nimport { useCheckMounted } from '../../hooks';\n// types\nimport { DemoState } from '../../types/Demo';\nimport { DeleteRequestStatus, PostRequestStatus } from '../../types/ServiceRequests';\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  formControl: {\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(3),\n  },\n}));\n\nexport default function ActionCheckBoxes(): React.ReactElement {\n  const classes = useStyles();\n  const mounted = useCheckMounted();\n  const history = useHistory();\n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [error, setError] = useState<boolean>(false);\n  const [clearDatabase, setClearDatabase] = useState<boolean>(false);\n  const [clearDatabaseStatus, setClearDatabaseStatus] = useState<DeleteRequestStatus>('');\n  const [addVehicleDescriptors, setAddVehicleDescriptors] = useState<boolean>(false);\n  const [addVehicleDescriptorsStatus, setAddVehicleDescriptorsStatus] = useState<PostRequestStatus>('');\n  const [addStages, setAddStages] = useState<boolean>(false);\n  const [addStagesStatus, setAddStagesStatus] = useState<PostRequestStatus>('');\n  const [generateVehicles, setGenerateVehicles] = useState<boolean>(false);\n  const [generateVehiclesStatus, setGenerateVehiclesStatus] = useState<PostRequestStatus>('');\n\n  // generate vehicles state\n  const [vehiclesAmountInput, setVehiclesAmountInput] = useState<string>('300');\n  const [vehiclesAmountError, setVehiclesAmountError] = useState<string>('');\n  const [vehiclesAmount, setVehiclesAmount] = useState<string>('300');\n  const [months, setMonths] = useState<string>('12');\n  const [monthsError, setMonthsError] = useState<string>('');\n\n  const demoState: DemoState = {\n    mounted,\n    loading, setLoading,\n    error, setError,\n    clearDatabase, setClearDatabase,\n    clearDatabaseStatus, setClearDatabaseStatus,\n    addVehicleDescriptors, setAddVehicleDescriptors,\n    addVehicleDescriptorsStatus, setAddVehicleDescriptorsStatus,\n    addStages, setAddStages,\n    addStagesStatus, setAddStagesStatus,\n    generateVehicles, setGenerateVehicles,\n    generateVehiclesStatus, setGenerateVehiclesStatus,\n    vehiclesAmount,\n    vehiclesAmountError,\n    months,\n    monthsError\n  };\n\n  // rules for which actions must also be selected if a certain action is selected\n  useEffect(() => {\n    if (generateVehicles) {\n      setClearDatabase(true);\n      setAddVehicleDescriptors(true);\n      setAddStages(true);\n    } else if (addVehicleDescriptors || addStages) {\n      setClearDatabase(true);\n    }\n  }, [generateVehicles, addVehicleDescriptors, addStages]);\n\n  // reroute to 'all-vehicles' if actions are successful\n  useEffect(() => {\n    if (!loading) {\n      const statuses = [\n        { check: clearDatabase, status: clearDatabaseStatus },\n        { check: addVehicleDescriptors, status: addVehicleDescriptorsStatus },\n        { check: addStagesStatus, status: addStagesStatus },\n        { check: generateVehicles, status: generateVehiclesStatus }\n      ];\n      if (statuses.find(status => status.status !== '')) {\n        const statusesCheck = statuses.map(status => status.check === true ? status.status === 'success' : true);\n        if (statusesCheck.find(check => !check) === undefined) {\n          setClearDatabase(false);\n          setClearDatabaseStatus('');\n          setAddVehicleDescriptors(false);\n          setAddVehicleDescriptorsStatus('');\n          setAddStages(false);\n          setAddStagesStatus('');\n          setGenerateVehicles(false);\n          setGenerateVehiclesStatus('');\n          history.push(`/all-vehicles/active/asc/10/first/0`);\n        } else {\n          setError(true);\n        }\n      };\n    };\n  }, [\n    loading,\n    clearDatabase, clearDatabaseStatus,\n    addVehicleDescriptors, addVehicleDescriptorsStatus,\n    addStages, addStagesStatus,\n    generateVehicles, generateVehiclesStatus,\n    history\n  ]);\n\n  if (error) {\n    return <CenteredError errorMessage='An error occured in 1 or more demo actions....' />;\n  }\n\n  return (\n    <>\n      <LoadingDemoActions\n        loading={loading}\n        clearDatabaseStatus={clearDatabaseStatus}\n        addVehicleDescriptorsStatus={addVehicleDescriptorsStatus}\n        addStagesStatus={addStagesStatus}\n        generateVehiclesStatus={generateVehiclesStatus}\n      />\n      <FlexCenter flexDirection='column'>\n        <FormControl component={Paper} className={classes.formControl}>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  disabled={addVehicleDescriptors || addStages || generateVehicles}\n                  checked={clearDatabase}\n                  onChange={() => clearDatabase ? setClearDatabase(false) : setClearDatabase(true)}\n                />\n              }\n              label=\"Clear Database\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  disabled={generateVehicles}\n                  checked={addVehicleDescriptors}\n                  onChange={() => addVehicleDescriptors ? setAddVehicleDescriptors(false) : setAddVehicleDescriptors(true)}\n                />\n              }\n              label=\"Add Vehicle Descriptors\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  disabled={generateVehicles}\n                  checked={addStages}\n                  onChange={() => addStages ? setAddStages(false) : setAddStages(true)}\n                />\n              }\n              label=\"Add Stages and People/Places\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Checkbox\n                  color='primary'\n                  checked={generateVehicles}\n                  onChange={() => generateVehicles ? setGenerateVehicles(false) : setGenerateVehicles(true)}\n                />\n              }\n              label=\"Generate Demo Vehicles\"\n            />\n            <GenerateDemoVehicles\n              generateVehicles={generateVehicles}\n              vehiclesAmountInput={vehiclesAmountInput} setVehiclesAmountInput={setVehiclesAmountInput}\n              vehiclesAmountError={vehiclesAmountError} setVehiclesAmountError={setVehiclesAmountError}\n              setVehiclesAmount={setVehiclesAmount}\n              months={months} setMonths={setMonths}\n              monthsError={monthsError} setMonthsError={setMonthsError}\n            />\n          </FormGroup>\n        </FormControl>\n        <DemoContinueButton demoState={demoState} />\n      </FlexCenter>\n    </>\n  );\n}","// material-ui\nimport LaptopIcon from '@mui/icons-material/Laptop';\nimport Divider from '@mui/material/Divider';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle } from '../common/cardContent';\nimport ActionCheckBoxes from './ActionCheckBoxes';\n\nexport default function DemoActions(): React.ReactElement {\n\n    return (\n        <LargeCard>\n            <LargeContent>\n                <ContentHeader>\n                    <IconContentTitle icon={<LaptopIcon color='primary' />} variant='h5'>Demo Actions</IconContentTitle>\n                    <Divider />\n                </ContentHeader>\n                <ActionCheckBoxes />\n            </LargeContent>\n        </LargeCard>\n    );\n}","// react\nimport { useEffect, useState } from 'react';\n// mui\nimport Settings from '@mui/icons-material/Settings';\nimport TextField from '@mui/material/TextField';\nimport { Select, Typography, FormControl, MenuItem, SelectChangeEvent } from '@mui/material';\nimport { styled } from '@mui/system';\nimport Button from '@mui/material/Button';\n// THIS PROJECT\n// components\nimport { LargeCard, LargeContent, ContentHeader, IconContentTitle, ContentPaper } from '../common/cardContent';\nimport { FlexEnd, FlexSpaceBtwn } from '../common/flex';\n// context\nimport { useDemoContext } from '../../contexts/DemoContext';\nimport React from 'react';\nimport { DbSelection } from '../../types/Demo';\n\n// all of this complicated looking code is to resolve a typescript error.\n// basically we couldn't assign variant 'outlined' to the LoadingDelayField because \n// typescript wasn't recognizing that 'outlined' was assignable to {type 'filled'} | {type: 'outlined'}\ninterface NumberInputProps {\n  variant?: 'outlined';\n}\nconst NumberInput = styled(TextField, {\n  shouldForwardProp: (prop) =>\n    prop !== 'variant',\n  name: 'LoadingDelayField',\n  slot: 'Root',\n  overridesResolver: (props, styles) => [\n    styles.root,\n    props.variant === 'outlined' && styles.outlined,\n  ]\n})<NumberInputProps>(({ theme }) => ({\n  width: '150px',\n  marginLeft: theme.spacing(2),\n  '&.MuiTextField-root': {\n    textAlign: 'center',\n  }\n}));\n\nconst ButtonFlex = styled(FlexEnd)(({ theme }) => ({\n  margin: theme.spacing(2),\n}));\n\nexport default function DemoSettings(): React.ReactElement {\n  const { loadingTime, saveLoadingTime, db, saveDb } = useDemoContext();\n  const [loadingTimeInput, setLoadingTimeInput] = useState<string>(loadingTime.toLocaleString('en-US'));\n  // need a separate state variable for the actual loadingTime number variable, not the input string\n  const [loadingTimeNum, setLoadingTimeNum] = useState<number>(loadingTime);\n  const [inputError, setInputError] = useState<string>('');\n\n  const changeLoadingTime = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const loadingTimeStringTmp = e.target.value.trim().replace(/[^0-9]/g, '');\n    const loadingTimeNumTmp = parseInt(loadingTimeStringTmp);\n    if (loadingTimeNumTmp > 10000) {\n      setInputError('cannot exceed 10 seconds');\n    } else {\n      setInputError('');\n      loadingTimeStringTmp ? setLoadingTimeNum(parseInt(loadingTimeStringTmp)) : setLoadingTimeNum(0);\n      const loadingTimeString = loadingTimeStringTmp\n        // delete leading zeros\n        .replace(/^0+(?!$)/g, '')\n        // add comma seperators\n        .replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',');\n      setLoadingTimeInput(loadingTimeString);\n    }\n  };\n\n  const onBlurLoadingTime = () => {\n    if (loadingTimeNum > 10000) {\n      setLoadingTimeInput('0');\n      setInputError('cannot exceed 10 seconds');\n    } else {\n      setInputError('');\n    }\n  };\n\n  const [dbInput, setDbInput] = useState<DbSelection | null>(db);\n\n  const handleDbChange = (event: SelectChangeEvent) => {\n    setDbInput(event.target.value as DbSelection);\n  };\n\n  // necessary to change the loadingTimeInput state variable whenever it is reset in the context,\n  // since the value of our input comes from this state variable and not directly from the context\n  useEffect(() => {\n    const loadingTimeString = loadingTime.toLocaleString('en-US');\n    setLoadingTimeInput(loadingTimeString);\n  }, [loadingTime]);\n\n  return (\n    <LargeCard>\n      <LargeContent>\n        <ContentHeader>\n          <IconContentTitle icon={<Settings color='primary' />} variant='h5'>Demo Settings</IconContentTitle>\n        </ContentHeader>\n        <ContentPaper>\n          <FlexSpaceBtwn>\n            <Typography>Simulated Loading Delay (milliseconds):</Typography>\n            <NumberInput\n              value={loadingTimeInput}\n              onChange={changeLoadingTime}\n              onBlur={onBlurLoadingTime}\n              size='small'\n              inputProps={{ sx: { textAlign: 'right' } }}\n              error={inputError ? true : false}\n              helperText={inputError}\n            />\n          </FlexSpaceBtwn>\n          <ButtonFlex>\n            <Button\n              disabled={loadingTime === loadingTimeNum}\n              onClick={() => saveLoadingTime(loadingTimeNum)}>Save</Button>\n          </ButtonFlex>\n          <FlexSpaceBtwn>\n            <Typography>Database:</Typography>\n            <FormControl>\n              <Select\n                value={dbInput ? dbInput : ''}\n                onChange={handleDbChange}\n                sx={{ width: '150px' }}\n                size='small'\n              >\n                <MenuItem value='mongodb'>MongoDB</MenuItem>\n                <MenuItem value='mysql'>MySQL</MenuItem>\n              </Select>\n            </FormControl>\n          </FlexSpaceBtwn>\n          <ButtonFlex>\n            <Button\n              disabled={db === dbInput}\n              onClick={() => saveDb(dbInput)}\n            >\n              Save\n            </Button>\n          </ButtonFlex>\n        </ContentPaper>\n      </LargeContent>\n    </LargeCard>\n  );\n}\n","// CSS\nimport './App.css';\n// react\nimport React from 'react';\n// react-router-dom\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n// material-ui\nimport makeStyles from '@mui/styles/makeStyles';\n// THIS PROJECT\n// components\nimport Nav from '../nav/Nav';\nimport PrivateRoute from './PrivateRoute';\nimport LogIn from '../log-in/LogIn';\nimport AllVehicles from '../all-vehicles/AllVehicles';\nimport AddVehicle from '../add-vehicle/AddVehicle';\nimport VehicleDetails from '../vehicle-details/VehicleDetails';\nimport PeoplePlaces from '../people-places/PeoplePlaces';\nimport Stages from '../stages/Stages';\nimport Analytics from '../analytics/Analytics';\nimport DemoActions from '../demo-actions/DemoActions';\nimport DemoSettings from '../demo-settings/DemoSettings';\n// hooks\nimport { useAuthContext } from '../../contexts/AuthContext';\n\nconst useStyles = makeStyles((theme) => ({\n    app: {\n        fontFamily: 'Roboto',\n        backgroundColor: '#404040',\n        minHeight: '100vh',\n        minWidth: '100vw',\n        position: 'absolute',\n        left: '0',\n        top: '0',\n    },\n}));\n\nexport default function App(): React.ReactElement {\n    const classes = useStyles();\n    const { currentUser } = useAuthContext();\n\n    return (\n        <div className={classes.app}>\n            <Router>\n                {currentUser && <Nav />}\n                <Switch>\n                    <Route exact path='/'>\n                        <Redirect to='/all-vehicles/active/asc/10/first/0' />\n                    </Route>\n                    <Route path='/log-in' component={LogIn} />\n                    <PrivateRoute path='/all-vehicles/:statusParam/:sortParam/:perPageParam/:pageParam/:compareParam' component={AllVehicles} />\n                    <PrivateRoute path='/add-vehicle' component={AddVehicle} />\n                    <PrivateRoute path='/vehicle-details/:searchCriteria/:searchValue/:tab' component={VehicleDetails} />\n                    <PrivateRoute path='/people-places' component={PeoplePlaces} />\n                    <PrivateRoute path='/stages' component={Stages} />\n                    <PrivateRoute path='/analytics/:tab' component={Analytics} />\n                    <PrivateRoute path='/demo-actions' component={DemoActions} />\n                    <PrivateRoute path='/demo-settings' component={DemoSettings} />\n                </Switch>\n            </Router>\n        </div>\n    );\n}\n\n","import { createTheme } from '@mui/material/styles';\n\ndeclare module '@mui/material/styles/createTheme' {\n  interface Theme {\n    mainMenu: {\n      width: string;\n    };\n    titleColor: {\n      lightBlue: string;\n      darkBlue: string;\n    };\n  }\n  interface ThemeOptions {\n    mainMenu?: {\n      width?: string;\n    };\n    titleColor?: {\n      lightBlue?: string;\n      darkBlue?: string;\n    };\n  }\n};\n\nexport const theme = createTheme({\n  mainMenu: {\n    width: '250px',\n  },\n  titleColor: {\n    lightBlue: '#aab6fe',\n    darkBlue: '#49599a',\n  },\n});","// react\nimport { ReactChild, ReactChildren } from 'react';\n// react-cookie\nimport { CookiesProvider } from 'react-cookie';\n// material-ui\nimport { ThemeProvider, Theme, StyledEngineProvider } from '@mui/material/styles';\n// THIS PROJECT\n// contexts\nimport { AuthProvider } from './AuthContext';\nimport { DemoProvider } from './DemoContext';\n// theme\nimport { theme } from '../theme';\n\ndeclare module '@mui/styles/defaultTheme' {\n    interface DefaultTheme extends Theme { }\n}\n\ninterface GlobalContextProps {\n    children: ReactChild | ReactChildren;\n}\nexport default function GlobalContext(props: GlobalContextProps): React.ReactElement {\n    return (\n        <CookiesProvider>\n            <StyledEngineProvider injectFirst>\n                <ThemeProvider theme={theme}>\n                    <DemoProvider>\n                        <AuthProvider>\n                            {props.children}\n                        </AuthProvider>\n                    </DemoProvider>\n                </ThemeProvider>\n            </StyledEngineProvider>\n        </CookiesProvider>\n    );\n}","import ReactDOM from 'react-dom';\nimport App from './components/app/App';\nimport '@fontsource/roboto';\nimport GlobalContext from './contexts/GlobalContext';\n\nReactDOM.render(\n    // <React.StrictMode>\n    <GlobalContext>\n        <App />\n    </GlobalContext>\n    //   </React.StrictMode>\n    ,\n    document.getElementById('root')\n);"],"sourceRoot":""}